{
  "metadata": {
    "kernelspec": {
      "language": "python",
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.7.12",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "kaggle": {
      "accelerator": "none",
      "dataSources": [
        {
          "sourceId": 256618,
          "sourceType": "datasetVersion",
          "datasetId": 107620
        }
      ],
      "dockerImageVersionId": 30213,
      "isInternetEnabled": false,
      "language": "python",
      "sourceType": "notebook",
      "isGpuEnabled": false
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat_minor": 0,
  "nbformat": 4,
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Installing necessary libraries\n"
      ],
      "metadata": {
        "id": "L2m5H0xitR_v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import os\n",
        "import re\n",
        "import warnings\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import librosa\n",
        "import librosa.display\n",
        "from sklearn.preprocessing import minmax_scale\n",
        "import IPython.display as ipd\n",
        "\n",
        "plt.rcParams['figure.figsize'] = (20,8)\n",
        "plt.rcParams['font.size'] = 16\n",
        "sns.set_style('darkgrid')\n",
        "warnings.filterwarnings(\"ignore\")"
      ],
      "metadata": {
        "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
        "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:30.345221Z",
          "iopub.execute_input": "2024-04-30T00:05:30.346378Z",
          "iopub.status.idle": "2024-04-30T00:05:45.595722Z",
          "shell.execute_reply.started": "2024-04-30T00:05:30.346252Z",
          "shell.execute_reply": "2024-04-30T00:05:45.594362Z"
        },
        "trusted": true,
        "id": "H2eEbevbs7en"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Emotion Detection\n"
      ],
      "metadata": {
        "id": "ThMWE2YXs7ep"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Preparation\n"
      ],
      "metadata": {
        "id": "NsoXFqlms7es"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "records = []\n",
        "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
        "    for filename in filenames:\n",
        "        records.append([filename, os.path.join(dirname,filename)])\n",
        "\n",
        "data = pd.DataFrame(records, columns=['filename','path'])\n",
        "data['actor'] = data['path'].apply(lambda x: re.findall(\"\\w+_\\d+\",x)[0])\n",
        "data = data[data['actor']!=\"audio_speech_actors_01\"]\n",
        "data.reset_index(inplace=True,drop=True)\n",
        "data['type'] = data['filename'].apply(lambda x: re.split(\"-\\d+\\.wav\",x)[0])\n",
        "data"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:45.598219Z",
          "iopub.execute_input": "2024-04-30T00:05:45.598620Z",
          "iopub.status.idle": "2024-04-30T00:05:46.184681Z",
          "shell.execute_reply.started": "2024-04-30T00:05:45.598585Z",
          "shell.execute_reply": "2024-04-30T00:05:46.183440Z"
        },
        "trusted": true,
        "id": "SXVwlsdns7et",
        "outputId": "bdcfcdbc-251a-468f-e4e7-416f42f76768"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 2,
          "output_type": "execute_result",
          "data": {
            "text/plain": "                      filename  \\\n0     03-01-08-01-01-01-02.wav   \n1     03-01-01-01-01-01-02.wav   \n2     03-01-07-02-01-02-02.wav   \n3     03-01-07-01-01-02-02.wav   \n4     03-01-01-01-02-01-02.wav   \n...                        ...   \n1435  03-01-06-01-01-02-07.wav   \n1436  03-01-05-01-02-02-07.wav   \n1437  03-01-04-02-01-01-07.wav   \n1438  03-01-07-02-02-02-07.wav   \n1439  03-01-05-02-01-02-07.wav   \n\n                                                   path     actor  \\\n0     /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n1     /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n2     /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n3     /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n4     /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n...                                                 ...       ...   \n1435  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n1436  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n1437  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n1438  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n1439  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n\n                   type  \n0     03-01-08-01-01-01  \n1     03-01-01-01-01-01  \n2     03-01-07-02-01-02  \n3     03-01-07-01-01-02  \n4     03-01-01-01-02-01  \n...                 ...  \n1435  03-01-06-01-01-02  \n1436  03-01-05-01-02-02  \n1437  03-01-04-02-01-01  \n1438  03-01-07-02-02-02  \n1439  03-01-05-02-01-02  \n\n[1440 rows x 4 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>filename</th>\n      <th>path</th>\n      <th>actor</th>\n      <th>type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>03-01-08-01-01-01-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-08-01-01-01</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>03-01-01-01-01-01-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-01-01-01-01</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>03-01-07-02-01-02-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-07-02-01-02</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>03-01-07-01-01-02-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-07-01-01-02</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>03-01-01-01-02-01-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-01-01-02-01</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1435</th>\n      <td>03-01-06-01-01-02-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-06-01-01-02</td>\n    </tr>\n    <tr>\n      <th>1436</th>\n      <td>03-01-05-01-02-02-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-05-01-02-02</td>\n    </tr>\n    <tr>\n      <th>1437</th>\n      <td>03-01-04-02-01-01-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-04-02-01-01</td>\n    </tr>\n    <tr>\n      <th>1438</th>\n      <td>03-01-07-02-02-02-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-07-02-02-02</td>\n    </tr>\n    <tr>\n      <th>1439</th>\n      <td>03-01-05-02-01-02-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-05-02-01-02</td>\n    </tr>\n  </tbody>\n</table>\n<p>1440 rows Ã— 4 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Number of Unique Speakers/Actors"
      ],
      "metadata": {
        "id": "tjucFEqTs7ew"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['actor'].nunique()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.186464Z",
          "iopub.execute_input": "2024-04-30T00:05:46.186928Z",
          "iopub.status.idle": "2024-04-30T00:05:46.196859Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.186884Z",
          "shell.execute_reply": "2024-04-30T00:05:46.195729Z"
        },
        "trusted": true,
        "id": "QcACmMoUs7ew",
        "outputId": "6052abe2-b3d8-469d-812c-7204e4ccab91"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 3,
          "output_type": "execute_result",
          "data": {
            "text/plain": "24"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Number of Audio files for each of the Speakers/Actors"
      ],
      "metadata": {
        "id": "VxsSS1iws7ey"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['actor'].value_counts()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.199634Z",
          "iopub.execute_input": "2024-04-30T00:05:46.200116Z",
          "iopub.status.idle": "2024-04-30T00:05:46.211652Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.200069Z",
          "shell.execute_reply": "2024-04-30T00:05:46.210470Z"
        },
        "trusted": true,
        "id": "PGo5OYEOs7ez",
        "outputId": "b5840410-4e6f-43cf-eb67-7e8e827636c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 4,
          "output_type": "execute_result",
          "data": {
            "text/plain": "Actor_02    60\nActor_17    60\nActor_18    60\nActor_13    60\nActor_03    60\nActor_14    60\nActor_09    60\nActor_10    60\nActor_19    60\nActor_04    60\nActor_22    60\nActor_24    60\nActor_23    60\nActor_12    60\nActor_06    60\nActor_15    60\nActor_08    60\nActor_20    60\nActor_11    60\nActor_01    60\nActor_21    60\nActor_16    60\nActor_05    60\nActor_07    60\nName: actor, dtype: int64"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "filter_list = []\n",
        "for a in [\"03\",\"04\"]:\n",
        "    for b in [\"01\",\"02\"]:\n",
        "        for c in [\"01\",\"02\"]:\n",
        "            for d in [\"01\",\"02\"]:\n",
        "                filter_list.append(f\"03-01-{a}-{b}-{c}-{d}\")\n",
        "\n",
        "data = data[data['type'].isin(filter_list)]\n",
        "data.reset_index(inplace=True,drop=True)\n",
        "data['class'] = data['type'].apply(lambda x: 'happy' if x.startswith('03-01-03') else 'sad')\n",
        "data['gender'] = data['actor'].apply(lambda x: 'female' if int(x.split('_')[1])%2==0 else 'male')"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.213078Z",
          "iopub.execute_input": "2024-04-30T00:05:46.213465Z",
          "iopub.status.idle": "2024-04-30T00:05:46.228167Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.213425Z",
          "shell.execute_reply": "2024-04-30T00:05:46.226944Z"
        },
        "trusted": true,
        "id": "wUEf4R_Ns7e0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.229813Z",
          "iopub.execute_input": "2024-04-30T00:05:46.230197Z",
          "iopub.status.idle": "2024-04-30T00:05:46.249734Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.230156Z",
          "shell.execute_reply": "2024-04-30T00:05:46.248447Z"
        },
        "trusted": true,
        "id": "O84DZVRIs7e2",
        "outputId": "efa1bce6-2ac4-4c19-a0d5-fb47c819d3d1"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 6,
          "output_type": "execute_result",
          "data": {
            "text/plain": "                     filename  \\\n0    03-01-04-01-02-01-02.wav   \n1    03-01-03-01-01-01-02.wav   \n2    03-01-03-01-01-02-02.wav   \n3    03-01-04-02-02-02-02.wav   \n4    03-01-03-02-01-02-02.wav   \n..                        ...   \n379  03-01-04-02-02-01-07.wav   \n380  03-01-04-01-01-01-07.wav   \n381  03-01-03-01-01-02-07.wav   \n382  03-01-03-01-02-01-07.wav   \n383  03-01-04-02-01-01-07.wav   \n\n                                                  path     actor  \\\n0    /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n1    /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n2    /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n3    /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n4    /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_02   \n..                                                 ...       ...   \n379  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n380  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n381  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n382  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n383  /kaggle/input/ravdess-emotional-speech-audio/A...  Actor_07   \n\n                  type  class  gender  \n0    03-01-04-01-02-01    sad  female  \n1    03-01-03-01-01-01  happy  female  \n2    03-01-03-01-01-02  happy  female  \n3    03-01-04-02-02-02    sad  female  \n4    03-01-03-02-01-02  happy  female  \n..                 ...    ...     ...  \n379  03-01-04-02-02-01    sad    male  \n380  03-01-04-01-01-01    sad    male  \n381  03-01-03-01-01-02  happy    male  \n382  03-01-03-01-02-01  happy    male  \n383  03-01-04-02-01-01    sad    male  \n\n[384 rows x 6 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>filename</th>\n      <th>path</th>\n      <th>actor</th>\n      <th>type</th>\n      <th>class</th>\n      <th>gender</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>03-01-04-01-02-01-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-04-01-02-01</td>\n      <td>sad</td>\n      <td>female</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>03-01-03-01-01-01-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-03-01-01-01</td>\n      <td>happy</td>\n      <td>female</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>03-01-03-01-01-02-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-03-01-01-02</td>\n      <td>happy</td>\n      <td>female</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>03-01-04-02-02-02-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-04-02-02-02</td>\n      <td>sad</td>\n      <td>female</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>03-01-03-02-01-02-02.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_02</td>\n      <td>03-01-03-02-01-02</td>\n      <td>happy</td>\n      <td>female</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>379</th>\n      <td>03-01-04-02-02-01-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-04-02-02-01</td>\n      <td>sad</td>\n      <td>male</td>\n    </tr>\n    <tr>\n      <th>380</th>\n      <td>03-01-04-01-01-01-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-04-01-01-01</td>\n      <td>sad</td>\n      <td>male</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>03-01-03-01-01-02-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-03-01-01-02</td>\n      <td>happy</td>\n      <td>male</td>\n    </tr>\n    <tr>\n      <th>382</th>\n      <td>03-01-03-01-02-01-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-03-01-02-01</td>\n      <td>happy</td>\n      <td>male</td>\n    </tr>\n    <tr>\n      <th>383</th>\n      <td>03-01-04-02-01-01-07.wav</td>\n      <td>/kaggle/input/ravdess-emotional-speech-audio/A...</td>\n      <td>Actor_07</td>\n      <td>03-01-04-02-01-01</td>\n      <td>sad</td>\n      <td>male</td>\n    </tr>\n  </tbody>\n</table>\n<p>384 rows Ã— 6 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Number of Audio Files for Gender and Emotion Class"
      ],
      "metadata": {
        "id": "T58AehFks7e3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['gender'].value_counts()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.251534Z",
          "iopub.execute_input": "2024-04-30T00:05:46.251948Z",
          "iopub.status.idle": "2024-04-30T00:05:46.262992Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.251913Z",
          "shell.execute_reply": "2024-04-30T00:05:46.261859Z"
        },
        "trusted": true,
        "id": "b2QtyzL0s7e4",
        "outputId": "74e457a3-88fc-4ee8-e9b7-2dd7fe7c4f3e"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 7,
          "output_type": "execute_result",
          "data": {
            "text/plain": "female    192\nmale      192\nName: gender, dtype: int64"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['class'].value_counts()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.264328Z",
          "iopub.execute_input": "2024-04-30T00:05:46.264686Z",
          "iopub.status.idle": "2024-04-30T00:05:46.276215Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.264655Z",
          "shell.execute_reply": "2024-04-30T00:05:46.275146Z"
        },
        "trusted": true,
        "id": "aL1Sou-Es7e4",
        "outputId": "fb9de746-2ba8-4fed-8425-8d4c393ff530"
      },
      "execution_count": null,
      "outputs": [
        {
          "execution_count": 8,
          "output_type": "execute_result",
          "data": {
            "text/plain": "sad      192\nhappy    192\nName: class, dtype: int64"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Feature Extraction\n"
      ],
      "metadata": {
        "id": "hamTpz6Is7e5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from tqdm import tqdm\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split, cross_val_score\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.metrics import classification_report, confusion_matrix"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.277654Z",
          "iopub.execute_input": "2024-04-30T00:05:46.278107Z",
          "iopub.status.idle": "2024-04-30T00:05:46.288776Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.278074Z",
          "shell.execute_reply": "2024-04-30T00:05:46.287334Z"
        },
        "trusted": true,
        "id": "Drza1-pns7e6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def feature_extraction(df, mfcc=True):\n",
        "    features = []\n",
        "    for i,record in tqdm(df.iterrows(),total=df.shape[0]):\n",
        "        x , sr = librosa.load(record['path'])\n",
        "        mean_mfcc = np.mean(librosa.feature.mfcc(y=x, sr=sr, n_mfcc=128),axis=1)\n",
        "        mean_ms = np.mean(librosa.feature.melspectrogram(y=x, sr=sr, n_mels=128),axis=1)\n",
        "        features.append(mean_mfcc if mfcc else mean_ms)\n",
        "\n",
        "    dataf = pd.DataFrame(features)\n",
        "    dataf['class'] = df['class']\n",
        "    return dataf"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.293718Z",
          "iopub.execute_input": "2024-04-30T00:05:46.294052Z",
          "iopub.status.idle": "2024-04-30T00:05:46.303538Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.294022Z",
          "shell.execute_reply": "2024-04-30T00:05:46.302341Z"
        },
        "trusted": true,
        "id": "kpDnIb6Fs7e6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "encoder = LabelEncoder()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.305021Z",
          "iopub.execute_input": "2024-04-30T00:05:46.305428Z",
          "iopub.status.idle": "2024-04-30T00:05:46.316606Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.305391Z",
          "shell.execute_reply": "2024-04-30T00:05:46.315550Z"
        },
        "trusted": true,
        "id": "L4-7at1_s7e7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## MFCC Features"
      ],
      "metadata": {
        "id": "QaFbPOE_s7e7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataf = feature_extraction(data)\n",
        "dataf"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:05:46.318078Z",
          "iopub.execute_input": "2024-04-30T00:05:46.318552Z",
          "iopub.status.idle": "2024-04-30T00:07:41.423763Z",
          "shell.execute_reply.started": "2024-04-30T00:05:46.318500Z",
          "shell.execute_reply": "2024-04-30T00:07:41.422272Z"
        },
        "trusted": true,
        "id": "rbsKSvVys7e7",
        "outputId": "d7412f56-824e-4896-d42b-ceb603061d07"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stderr",
          "text": "100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 384/384 [01:54<00:00,  3.34it/s]\n",
          "output_type": "stream"
        },
        {
          "execution_count": 12,
          "output_type": "execute_result",
          "data": {
            "text/plain": "              0          1          2          3          4          5  \\\n0   -655.887451  44.384995  -5.922089   5.301328  -5.846109  -3.695551   \n1   -585.728638  44.487385 -22.599588   9.817188  -8.152647  -4.897211   \n2   -605.731567  46.535400 -19.348291  13.490911  -7.866285  -5.181213   \n3   -661.506409  45.826687  -8.344815   6.547118  -6.763440  -5.770291   \n4   -484.870270  37.232101 -32.120388   7.449310 -10.889060 -14.209931   \n..          ...        ...        ...        ...        ...        ...   \n379 -568.361694  57.210964   0.689539  12.319594   6.551200  -0.579483   \n380 -723.345276  73.582779   0.339823  12.872882   5.823831  -0.428393   \n381 -637.680298  78.848206  -7.289741  16.754477   6.813106  -4.355325   \n382 -614.372986  73.964455 -10.224572  16.619707   6.027779  -0.498516   \n383 -596.720459  75.533997 -10.849150  16.255589  11.882466  -9.690378   \n\n             6          7          8         9  ...       119       120  \\\n0   -10.138599 -10.529056  -5.311738 -2.087161  ...  0.516419  0.085295   \n1    -5.878748 -11.672596  -5.678558 -2.191390  ...  0.119705 -0.098642   \n2    -5.951238 -11.170672  -4.939478 -2.804853  ...  0.041053 -0.128919   \n3   -13.880534 -12.418792 -10.221000 -1.434967  ...  0.394012 -0.028128   \n4    -9.655680 -12.668373  -6.404204 -4.595531  ...  0.083605 -0.307447   \n..         ...        ...        ...       ...  ...       ...       ...   \n379 -16.130163  -6.567527 -11.981590 -4.644281  ...  0.360626  0.436093   \n380  -6.189919  -9.161605  -7.757164 -0.468081  ... -0.157852  0.274586   \n381  -9.541617  -7.217409  -0.118985  0.594490  ...  0.124824  0.241637   \n382 -12.134978  -9.038948  -1.969959  2.583837  ...  0.138655 -0.109003   \n383 -18.414713  -6.514667 -19.538132 -7.320460  ...  0.610926  0.785385   \n\n          121       122       123       124       125       126       127  \\\n0    0.505571  0.453406  0.520696  0.698611  0.274180  0.390192  0.463052   \n1   -0.040381 -0.069480  0.143877  0.309187  0.215850  0.184923 -0.039407   \n2   -0.220367 -0.167521  0.132136 -0.016883 -0.127417  0.468943  0.076724   \n3   -0.411090  0.139783 -0.099380 -0.056837 -0.021696 -0.091667 -0.078983   \n4   -0.368100  0.128967  0.459337 -0.001366  0.038329  0.208846  0.140713   \n..        ...       ...       ...       ...       ...       ...       ...   \n379  0.418931  0.527835 -0.141552  0.049041  0.278503  0.119281  0.330996   \n380  0.435817  0.400723  0.269498  0.262169 -0.085667  0.086253  0.102733   \n381  0.051282  0.336582  0.019449  0.083065  0.025247 -0.009976 -0.082464   \n382 -0.038419  0.154577 -0.452695  0.194174 -0.015858 -0.433526  0.668562   \n383  0.351907  0.759420  0.507839  0.598742  0.367918  0.177785  0.524623   \n\n     class  \n0      sad  \n1    happy  \n2    happy  \n3      sad  \n4    happy  \n..     ...  \n379    sad  \n380    sad  \n381  happy  \n382  happy  \n383    sad  \n\n[384 rows x 129 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>119</th>\n      <th>120</th>\n      <th>121</th>\n      <th>122</th>\n      <th>123</th>\n      <th>124</th>\n      <th>125</th>\n      <th>126</th>\n      <th>127</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>-655.887451</td>\n      <td>44.384995</td>\n      <td>-5.922089</td>\n      <td>5.301328</td>\n      <td>-5.846109</td>\n      <td>-3.695551</td>\n      <td>-10.138599</td>\n      <td>-10.529056</td>\n      <td>-5.311738</td>\n      <td>-2.087161</td>\n      <td>...</td>\n      <td>0.516419</td>\n      <td>0.085295</td>\n      <td>0.505571</td>\n      <td>0.453406</td>\n      <td>0.520696</td>\n      <td>0.698611</td>\n      <td>0.274180</td>\n      <td>0.390192</td>\n      <td>0.463052</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-585.728638</td>\n      <td>44.487385</td>\n      <td>-22.599588</td>\n      <td>9.817188</td>\n      <td>-8.152647</td>\n      <td>-4.897211</td>\n      <td>-5.878748</td>\n      <td>-11.672596</td>\n      <td>-5.678558</td>\n      <td>-2.191390</td>\n      <td>...</td>\n      <td>0.119705</td>\n      <td>-0.098642</td>\n      <td>-0.040381</td>\n      <td>-0.069480</td>\n      <td>0.143877</td>\n      <td>0.309187</td>\n      <td>0.215850</td>\n      <td>0.184923</td>\n      <td>-0.039407</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-605.731567</td>\n      <td>46.535400</td>\n      <td>-19.348291</td>\n      <td>13.490911</td>\n      <td>-7.866285</td>\n      <td>-5.181213</td>\n      <td>-5.951238</td>\n      <td>-11.170672</td>\n      <td>-4.939478</td>\n      <td>-2.804853</td>\n      <td>...</td>\n      <td>0.041053</td>\n      <td>-0.128919</td>\n      <td>-0.220367</td>\n      <td>-0.167521</td>\n      <td>0.132136</td>\n      <td>-0.016883</td>\n      <td>-0.127417</td>\n      <td>0.468943</td>\n      <td>0.076724</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-661.506409</td>\n      <td>45.826687</td>\n      <td>-8.344815</td>\n      <td>6.547118</td>\n      <td>-6.763440</td>\n      <td>-5.770291</td>\n      <td>-13.880534</td>\n      <td>-12.418792</td>\n      <td>-10.221000</td>\n      <td>-1.434967</td>\n      <td>...</td>\n      <td>0.394012</td>\n      <td>-0.028128</td>\n      <td>-0.411090</td>\n      <td>0.139783</td>\n      <td>-0.099380</td>\n      <td>-0.056837</td>\n      <td>-0.021696</td>\n      <td>-0.091667</td>\n      <td>-0.078983</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-484.870270</td>\n      <td>37.232101</td>\n      <td>-32.120388</td>\n      <td>7.449310</td>\n      <td>-10.889060</td>\n      <td>-14.209931</td>\n      <td>-9.655680</td>\n      <td>-12.668373</td>\n      <td>-6.404204</td>\n      <td>-4.595531</td>\n      <td>...</td>\n      <td>0.083605</td>\n      <td>-0.307447</td>\n      <td>-0.368100</td>\n      <td>0.128967</td>\n      <td>0.459337</td>\n      <td>-0.001366</td>\n      <td>0.038329</td>\n      <td>0.208846</td>\n      <td>0.140713</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>379</th>\n      <td>-568.361694</td>\n      <td>57.210964</td>\n      <td>0.689539</td>\n      <td>12.319594</td>\n      <td>6.551200</td>\n      <td>-0.579483</td>\n      <td>-16.130163</td>\n      <td>-6.567527</td>\n      <td>-11.981590</td>\n      <td>-4.644281</td>\n      <td>...</td>\n      <td>0.360626</td>\n      <td>0.436093</td>\n      <td>0.418931</td>\n      <td>0.527835</td>\n      <td>-0.141552</td>\n      <td>0.049041</td>\n      <td>0.278503</td>\n      <td>0.119281</td>\n      <td>0.330996</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>380</th>\n      <td>-723.345276</td>\n      <td>73.582779</td>\n      <td>0.339823</td>\n      <td>12.872882</td>\n      <td>5.823831</td>\n      <td>-0.428393</td>\n      <td>-6.189919</td>\n      <td>-9.161605</td>\n      <td>-7.757164</td>\n      <td>-0.468081</td>\n      <td>...</td>\n      <td>-0.157852</td>\n      <td>0.274586</td>\n      <td>0.435817</td>\n      <td>0.400723</td>\n      <td>0.269498</td>\n      <td>0.262169</td>\n      <td>-0.085667</td>\n      <td>0.086253</td>\n      <td>0.102733</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>-637.680298</td>\n      <td>78.848206</td>\n      <td>-7.289741</td>\n      <td>16.754477</td>\n      <td>6.813106</td>\n      <td>-4.355325</td>\n      <td>-9.541617</td>\n      <td>-7.217409</td>\n      <td>-0.118985</td>\n      <td>0.594490</td>\n      <td>...</td>\n      <td>0.124824</td>\n      <td>0.241637</td>\n      <td>0.051282</td>\n      <td>0.336582</td>\n      <td>0.019449</td>\n      <td>0.083065</td>\n      <td>0.025247</td>\n      <td>-0.009976</td>\n      <td>-0.082464</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>382</th>\n      <td>-614.372986</td>\n      <td>73.964455</td>\n      <td>-10.224572</td>\n      <td>16.619707</td>\n      <td>6.027779</td>\n      <td>-0.498516</td>\n      <td>-12.134978</td>\n      <td>-9.038948</td>\n      <td>-1.969959</td>\n      <td>2.583837</td>\n      <td>...</td>\n      <td>0.138655</td>\n      <td>-0.109003</td>\n      <td>-0.038419</td>\n      <td>0.154577</td>\n      <td>-0.452695</td>\n      <td>0.194174</td>\n      <td>-0.015858</td>\n      <td>-0.433526</td>\n      <td>0.668562</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>383</th>\n      <td>-596.720459</td>\n      <td>75.533997</td>\n      <td>-10.849150</td>\n      <td>16.255589</td>\n      <td>11.882466</td>\n      <td>-9.690378</td>\n      <td>-18.414713</td>\n      <td>-6.514667</td>\n      <td>-19.538132</td>\n      <td>-7.320460</td>\n      <td>...</td>\n      <td>0.610926</td>\n      <td>0.785385</td>\n      <td>0.351907</td>\n      <td>0.759420</td>\n      <td>0.507839</td>\n      <td>0.598742</td>\n      <td>0.367918</td>\n      <td>0.177785</td>\n      <td>0.524623</td>\n      <td>sad</td>\n    </tr>\n  </tbody>\n</table>\n<p>384 rows Ã— 129 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X1 = dataf.iloc[:,:-1].values\n",
        "y1 = dataf.iloc[:,-1].values\n",
        "y1 = encoder.fit_transform(y1)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:07:41.425886Z",
          "iopub.execute_input": "2024-04-30T00:07:41.426486Z",
          "iopub.status.idle": "2024-04-30T00:07:41.432714Z",
          "shell.execute_reply.started": "2024-04-30T00:07:41.426450Z",
          "shell.execute_reply": "2024-04-30T00:07:41.431713Z"
        },
        "trusted": true,
        "id": "Fet9NfPQs7e8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Mel Spectrogram Features"
      ],
      "metadata": {
        "id": "sBu2SbRGs7e8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataf = feature_extraction(data,mfcc=False)\n",
        "dataf"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:07:41.434184Z",
          "iopub.execute_input": "2024-04-30T00:07:41.434642Z",
          "iopub.status.idle": "2024-04-30T00:09:33.286619Z",
          "shell.execute_reply.started": "2024-04-30T00:07:41.434598Z",
          "shell.execute_reply": "2024-04-30T00:09:33.285299Z"
        },
        "trusted": true,
        "id": "0387e70Js7e8",
        "outputId": "9ac7b87d-04b8-43e0-c469-2b7340ac858f"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stderr",
          "text": "100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 384/384 [01:51<00:00,  3.44it/s]\n",
          "output_type": "stream"
        },
        {
          "execution_count": 14,
          "output_type": "execute_result",
          "data": {
            "text/plain": "            0         1         2         3         4         5         6  \\\n0    0.000006  0.000004  0.000007  0.000004  0.000004  0.000113  0.010259   \n1    0.000010  0.000062  0.000121  0.000124  0.000140  0.002472  0.019177   \n2    0.000015  0.000039  0.000191  0.000211  0.000450  0.001405  0.015066   \n3    0.000001  0.000003  0.000018  0.000027  0.000068  0.000192  0.000435   \n4    0.000100  0.000096  0.000092  0.000068  0.000046  0.000340  0.015523   \n..        ...       ...       ...       ...       ...       ...       ...   \n379  0.584062  0.000854  0.000105  0.000018  0.000614  0.020639  0.083743   \n380  0.000039  0.000011  0.000006  0.000412  0.007097  0.017221  0.015674   \n381  0.000367  0.000086  0.002112  0.002465  0.024505  0.084531  0.065262   \n382  0.000077  0.000044  0.000832  0.001446  0.004995  0.040185  0.114150   \n383  0.000030  0.000009  0.000027  0.000067  0.002824  0.014333  0.026669   \n\n            7         8         9  ...       119       120       121  \\\n0    0.098932  0.067486  0.040678  ...  0.000055  0.000103  0.000051   \n1    0.073552  0.093589  0.154644  ...  0.000048  0.000044  0.000041   \n2    0.073748  0.153525  0.073451  ...  0.000050  0.000072  0.000047   \n3    0.001680  0.007180  0.101979  ...  0.000110  0.000083  0.000171   \n4    0.228503  0.263276  0.121614  ...  0.000364  0.000303  0.000181   \n..        ...       ...       ...  ...       ...       ...       ...   \n379  0.061423  0.052704  0.012844  ...  0.000343  0.000377  0.000544   \n380  0.000889  0.000942  0.005823  ...  0.000002  0.000002  0.000004   \n381  0.003117  0.001634  0.011607  ...  0.000003  0.000007  0.000013   \n382  0.042320  0.021464  0.004327  ...  0.000027  0.000035  0.000060   \n383  0.021353  0.018114  0.012603  ...  0.000022  0.000024  0.000016   \n\n          122       123       124       125           126           127  class  \n0    0.000088  0.000059  0.000027  0.000010  5.699148e-07  1.328700e-08    sad  \n1    0.000036  0.000020  0.000020  0.000008  5.696950e-07  1.192879e-08  happy  \n2    0.000052  0.000026  0.000022  0.000005  4.933853e-07  6.702310e-09  happy  \n3    0.000140  0.000173  0.000078  0.000018  6.620907e-07  7.958771e-09    sad  \n4    0.000219  0.000268  0.000211  0.000069  1.035260e-05  1.570711e-07  happy  \n..        ...       ...       ...       ...           ...           ...    ...  \n379  0.000408  0.000355  0.000266  0.000091  7.500727e-06  7.699103e-08    sad  \n380  0.000006  0.000007  0.000007  0.000002  1.133628e-07  1.654082e-09    sad  \n381  0.000012  0.000009  0.000005  0.000001  1.083808e-07  1.771896e-09  happy  \n382  0.000048  0.000041  0.000023  0.000006  5.396259e-07  8.839143e-09  happy  \n383  0.000010  0.000017  0.000008  0.000004  2.402338e-07  7.986513e-09    sad  \n\n[384 rows x 129 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>119</th>\n      <th>120</th>\n      <th>121</th>\n      <th>122</th>\n      <th>123</th>\n      <th>124</th>\n      <th>125</th>\n      <th>126</th>\n      <th>127</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.000006</td>\n      <td>0.000004</td>\n      <td>0.000007</td>\n      <td>0.000004</td>\n      <td>0.000004</td>\n      <td>0.000113</td>\n      <td>0.010259</td>\n      <td>0.098932</td>\n      <td>0.067486</td>\n      <td>0.040678</td>\n      <td>...</td>\n      <td>0.000055</td>\n      <td>0.000103</td>\n      <td>0.000051</td>\n      <td>0.000088</td>\n      <td>0.000059</td>\n      <td>0.000027</td>\n      <td>0.000010</td>\n      <td>5.699148e-07</td>\n      <td>1.328700e-08</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.000010</td>\n      <td>0.000062</td>\n      <td>0.000121</td>\n      <td>0.000124</td>\n      <td>0.000140</td>\n      <td>0.002472</td>\n      <td>0.019177</td>\n      <td>0.073552</td>\n      <td>0.093589</td>\n      <td>0.154644</td>\n      <td>...</td>\n      <td>0.000048</td>\n      <td>0.000044</td>\n      <td>0.000041</td>\n      <td>0.000036</td>\n      <td>0.000020</td>\n      <td>0.000020</td>\n      <td>0.000008</td>\n      <td>5.696950e-07</td>\n      <td>1.192879e-08</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.000015</td>\n      <td>0.000039</td>\n      <td>0.000191</td>\n      <td>0.000211</td>\n      <td>0.000450</td>\n      <td>0.001405</td>\n      <td>0.015066</td>\n      <td>0.073748</td>\n      <td>0.153525</td>\n      <td>0.073451</td>\n      <td>...</td>\n      <td>0.000050</td>\n      <td>0.000072</td>\n      <td>0.000047</td>\n      <td>0.000052</td>\n      <td>0.000026</td>\n      <td>0.000022</td>\n      <td>0.000005</td>\n      <td>4.933853e-07</td>\n      <td>6.702310e-09</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.000001</td>\n      <td>0.000003</td>\n      <td>0.000018</td>\n      <td>0.000027</td>\n      <td>0.000068</td>\n      <td>0.000192</td>\n      <td>0.000435</td>\n      <td>0.001680</td>\n      <td>0.007180</td>\n      <td>0.101979</td>\n      <td>...</td>\n      <td>0.000110</td>\n      <td>0.000083</td>\n      <td>0.000171</td>\n      <td>0.000140</td>\n      <td>0.000173</td>\n      <td>0.000078</td>\n      <td>0.000018</td>\n      <td>6.620907e-07</td>\n      <td>7.958771e-09</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.000100</td>\n      <td>0.000096</td>\n      <td>0.000092</td>\n      <td>0.000068</td>\n      <td>0.000046</td>\n      <td>0.000340</td>\n      <td>0.015523</td>\n      <td>0.228503</td>\n      <td>0.263276</td>\n      <td>0.121614</td>\n      <td>...</td>\n      <td>0.000364</td>\n      <td>0.000303</td>\n      <td>0.000181</td>\n      <td>0.000219</td>\n      <td>0.000268</td>\n      <td>0.000211</td>\n      <td>0.000069</td>\n      <td>1.035260e-05</td>\n      <td>1.570711e-07</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>379</th>\n      <td>0.584062</td>\n      <td>0.000854</td>\n      <td>0.000105</td>\n      <td>0.000018</td>\n      <td>0.000614</td>\n      <td>0.020639</td>\n      <td>0.083743</td>\n      <td>0.061423</td>\n      <td>0.052704</td>\n      <td>0.012844</td>\n      <td>...</td>\n      <td>0.000343</td>\n      <td>0.000377</td>\n      <td>0.000544</td>\n      <td>0.000408</td>\n      <td>0.000355</td>\n      <td>0.000266</td>\n      <td>0.000091</td>\n      <td>7.500727e-06</td>\n      <td>7.699103e-08</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>380</th>\n      <td>0.000039</td>\n      <td>0.000011</td>\n      <td>0.000006</td>\n      <td>0.000412</td>\n      <td>0.007097</td>\n      <td>0.017221</td>\n      <td>0.015674</td>\n      <td>0.000889</td>\n      <td>0.000942</td>\n      <td>0.005823</td>\n      <td>...</td>\n      <td>0.000002</td>\n      <td>0.000002</td>\n      <td>0.000004</td>\n      <td>0.000006</td>\n      <td>0.000007</td>\n      <td>0.000007</td>\n      <td>0.000002</td>\n      <td>1.133628e-07</td>\n      <td>1.654082e-09</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>0.000367</td>\n      <td>0.000086</td>\n      <td>0.002112</td>\n      <td>0.002465</td>\n      <td>0.024505</td>\n      <td>0.084531</td>\n      <td>0.065262</td>\n      <td>0.003117</td>\n      <td>0.001634</td>\n      <td>0.011607</td>\n      <td>...</td>\n      <td>0.000003</td>\n      <td>0.000007</td>\n      <td>0.000013</td>\n      <td>0.000012</td>\n      <td>0.000009</td>\n      <td>0.000005</td>\n      <td>0.000001</td>\n      <td>1.083808e-07</td>\n      <td>1.771896e-09</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>382</th>\n      <td>0.000077</td>\n      <td>0.000044</td>\n      <td>0.000832</td>\n      <td>0.001446</td>\n      <td>0.004995</td>\n      <td>0.040185</td>\n      <td>0.114150</td>\n      <td>0.042320</td>\n      <td>0.021464</td>\n      <td>0.004327</td>\n      <td>...</td>\n      <td>0.000027</td>\n      <td>0.000035</td>\n      <td>0.000060</td>\n      <td>0.000048</td>\n      <td>0.000041</td>\n      <td>0.000023</td>\n      <td>0.000006</td>\n      <td>5.396259e-07</td>\n      <td>8.839143e-09</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>383</th>\n      <td>0.000030</td>\n      <td>0.000009</td>\n      <td>0.000027</td>\n      <td>0.000067</td>\n      <td>0.002824</td>\n      <td>0.014333</td>\n      <td>0.026669</td>\n      <td>0.021353</td>\n      <td>0.018114</td>\n      <td>0.012603</td>\n      <td>...</td>\n      <td>0.000022</td>\n      <td>0.000024</td>\n      <td>0.000016</td>\n      <td>0.000010</td>\n      <td>0.000017</td>\n      <td>0.000008</td>\n      <td>0.000004</td>\n      <td>2.402338e-07</td>\n      <td>7.986513e-09</td>\n      <td>sad</td>\n    </tr>\n  </tbody>\n</table>\n<p>384 rows Ã— 129 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X2 = dataf.iloc[:,:-1].values\n",
        "y2 = dataf.iloc[:,-1].values\n",
        "y2 = encoder.fit_transform(y2)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:33.289333Z",
          "iopub.execute_input": "2024-04-30T00:09:33.289852Z",
          "iopub.status.idle": "2024-04-30T00:09:33.297986Z",
          "shell.execute_reply.started": "2024-04-30T00:09:33.289801Z",
          "shell.execute_reply": "2024-04-30T00:09:33.296657Z"
        },
        "trusted": true,
        "id": "_3603Uzys7e9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Modelling\n"
      ],
      "metadata": {
        "id": "Hq7nXqyms7e9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Logistic Regression\n"
      ],
      "metadata": {
        "id": "sWNN6tLCs7e9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def LogisticRegressionPipeline(X,y):\n",
        "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y)\n",
        "    pipeline = Pipeline([('scaler',StandardScaler()),('LogisticRegression',LogisticRegression())])\n",
        "    pipeline.fit(X_train,y_train)\n",
        "    y_train_pred = pipeline.predict(X_train)\n",
        "    y_pred = pipeline.predict(X_test)\n",
        "\n",
        "    cmatrix = confusion_matrix(y_test,y_pred)\n",
        "\n",
        "    print(\"Training Performance\")\n",
        "    print(classification_report(y_train,y_train_pred))\n",
        "    print(\"-----------------------------------------\")\n",
        "    print(\"Test Performance\")\n",
        "    print(classification_report(y_test,y_pred))\n",
        "    print(\"-----------------------------------------\")\n",
        "\n",
        "    cv_score = cross_val_score(pipeline,X,y,cv=5)\n",
        "    average = lambda x: sum(x)/len(x)\n",
        "    print(\"5-Folds Scores: \", cv_score)\n",
        "    print(\"-----------------------------------------\")\n",
        "    print(\"5-Folds Average Score: \",average(cv_score))\n",
        "\n",
        "    return cv_score, cmatrix"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:33.299590Z",
          "iopub.execute_input": "2024-04-30T00:09:33.299964Z",
          "iopub.status.idle": "2024-04-30T00:09:33.312440Z",
          "shell.execute_reply.started": "2024-04-30T00:09:33.299933Z",
          "shell.execute_reply": "2024-04-30T00:09:33.311069Z"
        },
        "trusted": true,
        "id": "KcwwBxE8s7e9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Logistic Regression: MFCCs"
      ],
      "metadata": {
        "id": "f6fj7GYQs7e-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "scores, cmatrix = LogisticRegressionPipeline(X1,y1)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:33.313791Z",
          "iopub.execute_input": "2024-04-30T00:09:33.314104Z",
          "iopub.status.idle": "2024-04-30T00:09:33.669488Z",
          "shell.execute_reply.started": "2024-04-30T00:09:33.314074Z",
          "shell.execute_reply": "2024-04-30T00:09:33.667921Z"
        },
        "trusted": true,
        "id": "of-37-OZs7e-",
        "outputId": "a0543160-0be3-49d4-e6f6-e1b7c4991911"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Training Performance\n              precision    recall  f1-score   support\n\n           0       0.97      0.99      0.98       154\n           1       0.99      0.97      0.98       153\n\n    accuracy                           0.98       307\n   macro avg       0.98      0.98      0.98       307\nweighted avg       0.98      0.98      0.98       307\n\n-----------------------------------------\nTest Performance\n              precision    recall  f1-score   support\n\n           0       0.82      0.87      0.85        38\n           1       0.86      0.82      0.84        39\n\n    accuracy                           0.84        77\n   macro avg       0.84      0.84      0.84        77\nweighted avg       0.85      0.84      0.84        77\n\n-----------------------------------------\n5-Folds Scores:  [0.64935065 0.74025974 0.67532468 0.68831169 0.80263158]\n-----------------------------------------\n5-Folds Average Score:  0.7111756664388242\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(cmatrix,annot=True,fmt='.3g',cmap='viridis',xticklabels=['happy','sad'],yticklabels=['happy','sad'])\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:33.671704Z",
          "iopub.execute_input": "2024-04-30T00:09:33.672662Z",
          "iopub.status.idle": "2024-04-30T00:09:34.048710Z",
          "shell.execute_reply.started": "2024-04-30T00:09:33.672602Z",
          "shell.execute_reply": "2024-04-30T00:09:34.047548Z"
        },
        "trusted": true,
        "id": "anacc7JDs7e_",
        "outputId": "a01062b4-aa63-4283-f139-befe39be5e67"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 2 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Logistic Regression: Mel Spectrogram"
      ],
      "metadata": {
        "id": "sJaajIN6s7e_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "scores, cmatrix = LogisticRegressionPipeline(X2,y2)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:34.050352Z",
          "iopub.execute_input": "2024-04-30T00:09:34.050751Z",
          "iopub.status.idle": "2024-04-30T00:09:34.371080Z",
          "shell.execute_reply.started": "2024-04-30T00:09:34.050719Z",
          "shell.execute_reply": "2024-04-30T00:09:34.369508Z"
        },
        "trusted": true,
        "id": "kxuYGVCzs7e_",
        "outputId": "0793a846-53bb-466c-a64b-1228d79a5b83"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Training Performance\n              precision    recall  f1-score   support\n\n           0       0.90      0.68      0.77       154\n           1       0.74      0.93      0.82       153\n\n    accuracy                           0.80       307\n   macro avg       0.82      0.80      0.80       307\nweighted avg       0.82      0.80      0.80       307\n\n-----------------------------------------\nTest Performance\n              precision    recall  f1-score   support\n\n           0       0.74      0.61      0.67        38\n           1       0.67      0.79      0.73        39\n\n    accuracy                           0.70        77\n   macro avg       0.71      0.70      0.70        77\nweighted avg       0.71      0.70      0.70        77\n\n-----------------------------------------\n5-Folds Scores:  [0.67532468 0.74025974 0.67532468 0.72727273 0.71052632]\n-----------------------------------------\n5-Folds Average Score:  0.7057416267942583\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(cmatrix,annot=True,fmt='.3g',cmap='viridis',xticklabels=['happy','sad'],yticklabels=['happy','sad'])\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:34.373137Z",
          "iopub.execute_input": "2024-04-30T00:09:34.373999Z",
          "iopub.status.idle": "2024-04-30T00:09:34.644258Z",
          "shell.execute_reply.started": "2024-04-30T00:09:34.373939Z",
          "shell.execute_reply": "2024-04-30T00:09:34.643285Z"
        },
        "trusted": true,
        "id": "4c3We7F8s7fA",
        "outputId": "2fd0d40b-9359-46e1-854a-8530daa21715"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 2 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Convolutional Neural Networks\n",
        "\n"
      ],
      "metadata": {
        "id": "QSjVJwR-s7fA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow.keras.models import Sequential, Model\n",
        "from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, Dense, Flatten, InputLayer, UpSampling2D, Layer, Reshape\n",
        "from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:34.645626Z",
          "iopub.execute_input": "2024-04-30T00:09:34.645968Z",
          "iopub.status.idle": "2024-04-30T00:09:40.613260Z",
          "shell.execute_reply.started": "2024-04-30T00:09:34.645938Z",
          "shell.execute_reply": "2024-04-30T00:09:40.612065Z"
        },
        "trusted": true,
        "id": "s_PUU3kUs7fA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CNNs: MFCCs"
      ],
      "metadata": {
        "id": "gTNE9lNfs7fB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X1, y1, test_size=0.2, stratify=y1)\n",
        "X_train = X_train.reshape(-1,16,8,1)\n",
        "X_test = X_test.reshape(-1,16,8,1)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:40.614820Z",
          "iopub.execute_input": "2024-04-30T00:09:40.615505Z",
          "iopub.status.idle": "2024-04-30T00:09:40.624991Z",
          "shell.execute_reply.started": "2024-04-30T00:09:40.615470Z",
          "shell.execute_reply": "2024-04-30T00:09:40.623608Z"
        },
        "trusted": true,
        "id": "9qscJA0Ls7fB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential([\n",
        "    InputLayer(input_shape=(16, 8, 1)),\n",
        "    Conv2D(filters=32, kernel_size=(3, 3), activation='relu', padding = \"same\"),\n",
        "    MaxPooling2D(2, 2),\n",
        "    Conv2D(filters=64, kernel_size=(3, 3), activation='relu', padding = \"same\"),\n",
        "    MaxPooling2D(2, 2),\n",
        "    Flatten(),\n",
        "    Dense(32, activation='relu'),\n",
        "    Dense(1, activation='sigmoid')\n",
        "])\n",
        "model.summary()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:40.626585Z",
          "iopub.execute_input": "2024-04-30T00:09:40.627072Z",
          "iopub.status.idle": "2024-04-30T00:09:40.795659Z",
          "shell.execute_reply.started": "2024-04-30T00:09:40.627020Z",
          "shell.execute_reply": "2024-04-30T00:09:40.794285Z"
        },
        "trusted": true,
        "id": "mMZ5i9MIs7fB",
        "outputId": "8919fadb-14b9-44f9-e6af-ba108a068940"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Model: \"sequential\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d (Conv2D)              (None, 16, 8, 32)         320       \n_________________________________________________________________\nmax_pooling2d (MaxPooling2D) (None, 8, 4, 32)          0         \n_________________________________________________________________\nconv2d_1 (Conv2D)            (None, 8, 4, 64)          18496     \n_________________________________________________________________\nmax_pooling2d_1 (MaxPooling2 (None, 4, 2, 64)          0         \n_________________________________________________________________\nflatten (Flatten)            (None, 512)               0         \n_________________________________________________________________\ndense (Dense)                (None, 32)                16416     \n_________________________________________________________________\ndense_1 (Dense)              (None, 1)                 33        \n=================================================================\nTotal params: 35,265\nTrainable params: 35,265\nNon-trainable params: 0\n_________________________________________________________________\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:40.797050Z",
          "iopub.execute_input": "2024-04-30T00:09:40.797425Z",
          "iopub.status.idle": "2024-04-30T00:09:40.812438Z",
          "shell.execute_reply.started": "2024-04-30T00:09:40.797386Z",
          "shell.execute_reply": "2024-04-30T00:09:40.811316Z"
        },
        "trusted": true,
        "id": "HMg5CEKus7fB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_name = \"model.h5\"\n",
        "checkpoint = ModelCheckpoint(model_name,\n",
        "                            monitor=\"val_loss\",\n",
        "                            mode=\"min\",\n",
        "                            save_best_only = True,\n",
        "                            verbose=1)\n",
        "\n",
        "earlystopping = EarlyStopping(monitor='val_loss',min_delta = 0, patience = 5, verbose = 1, restore_best_weights=True)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:40.813948Z",
          "iopub.execute_input": "2024-04-30T00:09:40.814398Z",
          "iopub.status.idle": "2024-04-30T00:09:40.824150Z",
          "shell.execute_reply.started": "2024-04-30T00:09:40.814332Z",
          "shell.execute_reply": "2024-04-30T00:09:40.822797Z"
        },
        "trusted": true,
        "id": "DHXpNAZDs7fC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(X_train, y_train, epochs=50, validation_data=(X_test,y_test), callbacks=[checkpoint,earlystopping])"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:40.825858Z",
          "iopub.execute_input": "2024-04-30T00:09:40.826886Z",
          "iopub.status.idle": "2024-04-30T00:09:43.497578Z",
          "shell.execute_reply.started": "2024-04-30T00:09:40.826841Z",
          "shell.execute_reply": "2024-04-30T00:09:43.496508Z"
        },
        "trusted": true,
        "id": "7dSaeoyYs7fE",
        "outputId": "6a29589a-1f77-4cf1-977e-6d4c4d987f05"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Epoch 1/50\n10/10 [==============================] - 1s 39ms/step - loss: 1.5878 - accuracy: 0.5277 - val_loss: 1.4137 - val_accuracy: 0.5195\n\nEpoch 00001: val_loss improved from inf to 1.41371, saving model to model.h5\nEpoch 2/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.7759 - accuracy: 0.6319 - val_loss: 0.9196 - val_accuracy: 0.5844\n\nEpoch 00002: val_loss improved from 1.41371 to 0.91964, saving model to model.h5\nEpoch 3/50\n10/10 [==============================] - 0s 10ms/step - loss: 0.6671 - accuracy: 0.6221 - val_loss: 0.9028 - val_accuracy: 0.5325\n\nEpoch 00003: val_loss improved from 0.91964 to 0.90285, saving model to model.h5\nEpoch 4/50\n10/10 [==============================] - 0s 10ms/step - loss: 0.6674 - accuracy: 0.6417 - val_loss: 0.7667 - val_accuracy: 0.5844\n\nEpoch 00004: val_loss improved from 0.90285 to 0.76671, saving model to model.h5\nEpoch 5/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4961 - accuracy: 0.7720 - val_loss: 0.6986 - val_accuracy: 0.6494\n\nEpoch 00005: val_loss improved from 0.76671 to 0.69857, saving model to model.h5\nEpoch 6/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5254 - accuracy: 0.7362 - val_loss: 0.8637 - val_accuracy: 0.5844\n\nEpoch 00006: val_loss did not improve from 0.69857\nEpoch 7/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5035 - accuracy: 0.7655 - val_loss: 0.7621 - val_accuracy: 0.5974\n\nEpoch 00007: val_loss did not improve from 0.69857\nEpoch 8/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5003 - accuracy: 0.7557 - val_loss: 0.6363 - val_accuracy: 0.6623\n\nEpoch 00008: val_loss improved from 0.69857 to 0.63631, saving model to model.h5\nEpoch 9/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5337 - accuracy: 0.6873 - val_loss: 0.7538 - val_accuracy: 0.6494\n\nEpoch 00009: val_loss did not improve from 0.63631\nEpoch 10/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4697 - accuracy: 0.7687 - val_loss: 0.6937 - val_accuracy: 0.6753\n\nEpoch 00010: val_loss did not improve from 0.63631\nEpoch 11/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.3882 - accuracy: 0.8111 - val_loss: 0.7307 - val_accuracy: 0.6234\n\nEpoch 00011: val_loss did not improve from 0.63631\nEpoch 12/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4290 - accuracy: 0.7687 - val_loss: 0.7391 - val_accuracy: 0.6494\n\nEpoch 00012: val_loss did not improve from 0.63631\nEpoch 13/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.3600 - accuracy: 0.8534 - val_loss: 0.7098 - val_accuracy: 0.6364\n\nEpoch 00013: val_loss did not improve from 0.63631\nRestoring model weights from the end of the best epoch.\nEpoch 00013: early stopping\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('Model Loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:43.499104Z",
          "iopub.execute_input": "2024-04-30T00:09:43.499487Z",
          "iopub.status.idle": "2024-04-30T00:09:43.796498Z",
          "shell.execute_reply.started": "2024-04-30T00:09:43.499452Z",
          "shell.execute_reply": "2024-04-30T00:09:43.795097Z"
        },
        "trusted": true,
        "id": "RyaPsNPxs7fE",
        "outputId": "921dfaa8-bd1e-40a7-b64e-843424585054"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 1 Axes>",
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABJ0AAAH/CAYAAAD9tKyxAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAAsTAAALEwEAmpwYAACg4UlEQVR4nOzdd3hUZf7+8ftMn0kPCST0FnrvKhayttUVUbGvve3aV1113d/XXbeo6za7q64Ny2Lvig1QEUGKVOkqEEIoIX36zPn9EYgEAiSQzEwm79d1cRHOnHPmc8Ink8yd53mOYZqmKQAAAAAAAKAZWeJdAAAAAAAAAJIPoRMAAAAAAACaHaETAAAAAAAAmh2hEwAAAAAAAJodoRMAAAAAAACaHaETAAAAAAAAmh2hEwAAQDMrKipS3759dfvttx/Sefr27asLLrigmaoCAACILUInAACQFHYFPX379tXPfvYzmabZ4H4zZsyo2++qq66KcZUt56GHHlLfvn01bdq0eJcCAAAgidAJAAAkGZvNpqKiIn3zzTcNPv7GG2/IZrPFuCoAAIC2h9AJAAAklREjRsjj8eiNN97Y67EdO3ZoxowZOvLII+NQGQAAQNvCr/kAAEBS8Xg8OvHEEzVt2jTdeeedSklJqXvs3XffVSgU0umnn64ZM2Y0ePzGjRv18MMP66uvvlJ5eblyc3NVWFioa665RtnZ2Xvt/+KLL+qFF15QUVGR2rdvr8mTJ+vkk0/eZ30bNmzQY489pq+++ko7duxQdna2CgsLdf311zd4/pYQCoX07LPP6u2339aGDRvkdDo1ZMgQXXXVVRozZky9fSsrK/XUU0/po48+UklJiaxWq3JycjRq1CjdcsstysrKkiQFAgFNmTJF77zzjoqKiiRJ2dnZGj58uK6//np17do1JtcGAAASB6ETAABIOqeffrreeOMNffjhh5o8eXLd9jfeeEN9+/bVgAEDGjxu3bp1Ou+881RRUaFjjz1WPXr00LJly/TCCy9o5syZeuWVV9SuXbu6/R944AE9+uij6tChg8455xyZpqnnn39eixYtavD83377rS6//HIFAgEVFhaqc+fO+v777zV16lTNmjVLr732mjIzM5vzU7GXaDSqa6+9VjNnzlTv3r31y1/+UhUVFfrggw900UUX6R//+EddaGaapi699FItW7ZMRxxxhAoLCxUOh1VUVFS3/67Q6be//a0++ugjjRgxQmeddZYsFos2bdqkL7/8UieffDKhEwAAbRChEwAASDqjRo1Sly5d9Oabb9aFTt99951Wrlyp3/3ud/s87o9//KPKy8v1t7/9TZMmTarbvitc+sc//qF77rlHkvTjjz/q8ccfV6dOnfTGG2/UhUVXXnllvWN3CQaDuummm2S1WvX222+rV69edY99+OGHuvHGG/Xggw/qzjvvPPRPwH689dZbmjlzpsaPH6/HH3+8bn2riy++WJMnT9Yf/vAHHX300UpNTdWqVau0dOlSXXTRRbrjjjvqncfr9cpiqV2poaqqSh9//LGOPfZYPfLII3tddzAYbNFrAgAAiYk1nQAAQNIxDEOnnXaa5s+frw0bNkiqHeVkt9s1ceLEBo/ZtGmTvvnmG/Xr12+v0Oiqq65Sdna23n///boA5b333lMkEtGll15ab3RS+/btdeGFF+51/pkzZ6q4uFhXXHFFvcBJkn7+859r4MCB+uCDDw7hqhvnzTfflCTdfPPN9RZULygo0BlnnKGqqip9+umn9Y5xuVx7ncfj8dRtNwxDpmk2uJ/D4VBqampzXgIAAGglGOkEAACS0mmnnaaHH35Yb7zxhq6++mq9++67Ovroo5WdnS2v17vX/itXrpQkjR49eq/HXC6XhgwZopkzZ+qHH35Q3759tWrVKknSyJEj99q/oW2LFy+WJK1du1YPPfTQXo8HAgGVlZXVrfPUUlatWqWUlJQGpxiOGTNGL774Yt3nonfv3urTp4+eeOIJrVixQsccc4xGjx6tgoICGYZRd1xqaqqOPPJIvffeeyopKdGxxx6r0aNHq3///rJarS12LQAAILEROgEAgKTUsWNHjR07Vm+//bb69Omj8vJynXbaafvcv7q6WpLqrdm0u5ycnHr7VVVVSVKDAVFD56ioqJBUO71tf3w+334fP1TV1dXq3Llzg4/teY02m03PPfecHnroIX388cf64osvJEkdOnTQZZddposuuqju2AcffFCPPfaY3n//fd17772SpMzMTJ133nm6+uqrZbfbW/KyAABAAiJ0AgAASev000/Xb3/7W917771q166djjnmmH3uu2sKWGlpaYOP79q+a7+0tDRJ0o4dO9ShQ4cG923o/E8++aSOOuqopl1IM0pNTW30NUq1odof/vAH3XnnnVqzZo1mz56t559/XnfffbdSU1N1xhlnSKqdbnfzzTfr5ptv1vr16zVnzhy9+OKLevTRR2UYhq6//vqWvzgAAJBQWNMJAAAkreOPP16pqanasmWLTjnllHprGO2pf//+kqT58+fv9VggENCSJUvkdDrVo0cPSVLfvn0lSQsWLNhr/4a2DRkyRNJP0+zipV+/fqqurtaKFSv2emzevHl1++zJMAz16dNHF198sR5++GFJ0vTp0xt8jm7duunss8/WlClTZLFY9rkfAABIboROAAAgablcLj355JN65JFHdPnll+93344dO2rMmDFasWKF3n333XqPPfnkkyotLdXJJ58sh8MhSTr55JNltVr19NNPq7y8vG7frVu3asqUKXud/9hjj1V+fr6eeuopLVq0aK/H/X5/TAKpXYuk//Of/1QkEqnbvm7dOr366qtKS0vTscceK0kqKirSpk2b9jrH9u3bJUlOp1NS7WivNWvW7LVfaWmpotFo3X4AAKBtYXodAABIaiNGjGj0vn/84x913nnn6dZbb9Unn3yi7t27a/ny5Zo1a5Y6d+6sW265pW7fHj166KqrrtKjjz6qiRMn6sQTT1Q0GtUHH3ygwYMHa+bMmfXO7XA49MADD+iKK67QOeecoyOOOEK9e/dWJBJRUVGR5s2bp2HDhumpp546pOt98cUX93ruXa644gpNmjRJH330kWbOnKlJkybpqKOOUmVlZd2d+XZNm5NqF1e/7rrrNHToUPXs2VM5OTkqLi7WZ599Jrvdrl/+8peSpC1btmjSpEkaMGCA+vTpo/bt26u0tFSfffaZDMPQxRdffEjXBAAAWidCJwAAgJ169eql1157TQ899JC++uorTZ8+XTk5OTr//PN1zTXX7LVA+A033KCcnBw9//zzeumll9S+fXtdcMEFOvnkkxsMfoYOHaq33npL//3vf/XFF19o7ty5crvdysvL06RJk3Tqqace8jV88803+3zstNNOU69evfTwww/rmWee0dtvv60pU6bI6XRq+PDhuuqqqzRmzJi6/QcNGqTLLrtM33zzjWbMmKHq6mrl5uaqsLBQV1xxRd00vE6dOum6667TnDlz9NVXX6m8vFzt2rXTiBEjdNlll2nUqFGHfF0AAKD1MUzTNONdBAAAAAAAAJILazoBAAAAAACg2RE6AQAAAAAAoNkROgEAAAAAAKDZEToBAAAAAACg2RE6AQAAAAAAoNnZ4l1ALEWjUUUirf9mfVarkRTXgeRGnyLR0aNIdPQoEh09ikRHjyLRJVOP2u3WBre3qdApEjFVXu6NdxmHLDPTkxTXgeRGnyLR0aNIdPQoEh09ikRHjyLRJVOP5uamNbid6XUAAAAAAABodoROAAAAAAAAaHaETgAAAAAAAGh2hE4AAAAAAABodoROAAAAAAAAaHaETgAAAAAAAGh2tngXkGh8vhpVV5crEgnHu5R92rLFkGma8S6jWVitNqWmZsrtTol3KQAAAAAAoBkROu3G56tRVVWZMjNzZbc7ZBhGvEtqkNVqUSQSjXcZh8w0TYVCQZWXb5MkgicAAAAAAJJIzEOnkpISPfnkk1q2bJlWrlwpv9+vzz77TJ07d27U8Vu2bNH999+vL774QhUVFWrfvr1OPvlk3XzzzYdcW3V1uTIzc+VwOA/5XDgwwzDkcDiVmZmriorthE4AAAAAACSRmIdO69ev14cffqiBAwdq1KhRmjVrVqOPLSoq0rnnnqvOnTvr97//vXJycrRp0yatX7++WWqLRMKy2x3Nci40nt3uSOjpjAAAAAAAoOliHjqNHj1as2fPliS9+uqrTQqd/vCHP6hDhw6aMmWK7HZ7i9SXqFPqkhmfcwAAAAAAkk/M715nsRzcU27YsEGzZs3SL3/5yxYLnAAAAAAAANA8Yh46HayFCxdKklwuly655BINGjRIo0eP1q233qqysrI4VwcAAAAAAIDdtZrQaevWrZKkO+64Q927d9eTTz6pW265RZ9//rkuu+wyRaOt/25uze2LL2Zq6tQXmv28f/3rHzV58inNfl4AAAAAAJA8Yr6m08HaFSqNGTNGf/jDHyRJhx12mNLS0vSb3/xGX375pY4++uj9nsNqNZSZ6dnn41u2GLJaW0cO15g6Z836XPPmzdX551/YrM996aVXqKbmvGb9XBnG/v9v0PpYrRb+T5HQ6FEkOnoUiY4eRaKjR5Ho2kKPtprQKTMzU5J0xBFH1Nu+698rVqw4YOgUiZgqL/fu83HTNBWJJP6IKavV0qg6TdOUpAPuGwwG5XA0/q59+fmdGnXepjDN/f/foPXJzPTwf4qERo8i0dGjSHT0KBIdPYpEl0w9mpub1uD2VhM69e7de7+PH+wC5a3RrjBpf/761z/qww/fkySNHz9KkpSXl6877viDrr/+V/rrX+/TnDmz9eWXMxUOhzVt2kwVFW3UM888oSVLFqu0tFTt2uVo7NhxuvLKa5Senl7v3N9+u0CvvfauJGnz5mKdeeZE3XLL77R9+za9++6bCgQCGjJkuG655Xa1b9+h2T8HAAAAAAAgsbWa0GnYsGHKzc3VrFmzdMEFF9Rt//LLLyVJgwcPjldpMeUPRbShzKfu2R45bPsO2i6++HKVl5dpxYrvdO+9/5IkORx2VVdXS5L+/e+/a9y4w/X//t+fFAwGJUnbt29T+/Z5uv76nyktLV3FxZs0ZcozWrPmBj3++DMHrO2FF57VoEFDdPvtd6q8vEwPP/xv/elP/6eHH36iGa4cAAAAAAC0JnEJnaZNmyZJWrZsmSTpiy++UHZ2trKzszVmzBhJ0oABAzRp0iTdfffdtYXabLr55pt1++23684779Txxx+v9evX6/7779eYMWM0bty4Fqn1/eVb9M6ykhY5d2NNHJSnkwfWjhayWgyFo6Yq/SHlpDr3eUynTp2VmZklu92uQYN+CuQWLpwvSerff6Buv/3/6h0zbNgIDRs2ou7fgwYNUadOXXTNNZdr9eqV6tOn337rzMvL1x//+Ne6f5eVlenRRx/Q9u3blJOT2/gLBgAAAAAArV5cQqcbbrih3r/vuusuSbWLhD///POSpEgkstcd6U477TQZhqH//ve/euONN5SZmamJEyfqpptukmEYsSk+zuxWizwOqyoD4f2GTgdy1FHH7LUtFArpf/97XtOmva+SkhIFg4G6xzZsWH/A0Omww+qvt9WrV+2UyJKSEkInAAAAAADamLiETqtWrTrofSZNmqRJkyY1c0X7dvLADnWjjBJFutuukgq/guHofqfY7U9OTs5e2/7zn4f1+usv6+KLL9fgwUPl8Xi0detW/f73v62bgrffutIz6v3bbrdLUr3wCgAAAAAAtA2tZk0n/CTDVRs6VQXCamdr/F3n6tt7ZNhnn32sE088WRdffHndNp/Pd5DnBwAAAAAAbVnbueVbEnHYLHLZLKryh/e7n91uVyDQ+FFGfr9fNlv9HPL99985qBoBAAAAAEDbxkinVirNZdO26qBCkajs1oazw+7de6qy8k29+eZr6tevvxyO/a8BNXbsYfrww/fUs2dvde7cRZ9/Pl3Lli1pifIBAAAAAECSI3RqpdJ3hk5VgbCyPQ1PsTvllElavnypHn/8EVVXVykvL1933PGHfZ7zN7+5VZKpJ554VFLtwuB//ONfdcUVF7XEJQAAAAAAgCRmmKZpxruIWAmFIiov9+7z8ZKS9crL6xbDig6O1WpRJBLVuu01slkMdcv2xLukQ9ZaPvdovMxMz36/3oB4o0eR6OhRJDp6FImOHkWiS6Yezc1Na3A7azq1Ymkum7zBiMKRaLxLAQAAAAAAqIfQqRVLd9pkSqoO7H9BcQAAAAAAgFgjdGrFnDaLHFaLKgmdAAAAAABAgiF0asUMw1Cay6aaYESRaJtZmgsAAAAAALQChE6tXJrTJtNkih0AAAAAAEgshE6tnNtukd1qMMUOAAAAAAAkFEKnVs4wDKU5baoJhBVlih0AAAAAAEgQhE5JIM1lU9SUqoOMdgIAAAAAAImB0CkJeOxW2SyGqvyETgAAAAAAIDEQOiWBXVPsqgIRRU2m2AEAAAAAgPgjdEoStVPsTNUEIs1+7s2bizV+/Ch98MG7zX5uAAAAAACQnAidkoTHYZXVYqiKu9gBAAAAAIAEQOiUJCyGoVSnVVWBsEym2AEAAAAAgDgjdEoi6U6bIlFTNcGIpk//VOPHj9LatWv22u+WW67XRRedK0l6/fWXddVVl+jnPy/UiSceoyuvvFizZ8+KdekAAAAAACDJEDolkRSHTRZDqgqEdcQRRyo1NVUff/xBvX127CjVvHlzdeKJJ0uSNm/erFNOOVV//vO9uuuue9SvX3/deuuNmjNndjwuAQAAAAAAJAlbvAtIdM6Vr8m1Ympca/D3P0eBfpMPuJ/FYijVaVOVP6y8tBRNmHCsPvnkI/3qV9fJYqnNFz/99CNJ0nHHnShJuvbaG+uOj0ajGjlytDZu3KC33npN48Yd3vwXAwAAAAAA2gRCpyST5rSp0h+WLxTRiSeerHfffUsLFszT6NFjJUnTpn2gkSNHKycnR5K0cuUKPf3041qx4juVl5fVrQfVtWu3uF0DAAAAAABo/QidDiDQb3KjRhklilRn7RS7Sn9YQ4YMU35+R3300QcaPXqsfvzxB61evVJ33vlnSdKWLSW68cZfq3v3nrrxxt+qQ4c82WxWPfnkf7R+/Q9xvhIAAAAAANCasaZTkrFaDKU4bKoKhCVJxx//c33++Qz5/X599NEHcrs9OuqoCZKkuXO/VnV1tf70p3v0s58dp0GDBqtfvwEKBPzxvAQAAAAAAJAECJ2SUJrLplDElD8U1QknnCSfz6vPP5+ujz/+UEcfPUEul0uS5PfXhks2208D3jZsWK+lSxfHpW4AAAAAAJA8mF6XhNKcVhmGVBkIq2vXbhowYJD+85+HtW3b1rq71knSqFFjZLVa9Ze//EHnnPNLlZZu11NPPa727fNkmtE4XgEAAAAAAGjtGOmUhKwWi1LsVlX5wzJNUyeccJK2bduq3Nz2GjFiVN1+PXv20p13/kUlJZt1++036cUXp+hXv7pWw4YNj2P1AAAAAAAgGRjmrtuVtQGhUETl5d59Pl5Ssl55eYl/1zar1aJIZP8jkcq8QW2uDKhnO49cdmuMKjt4reVzj8bLzPTs9+sNiDd6FImOHkWio0eR6OhRJLpk6tHc3LQGtzPSKUmlOW0ypLoFxQEAAAAAAGKJ0ClJ2awWeRxWVfoJnQAAAAAAQOwROiWxNKdNgXBUgXAk3qUAAAAAAIA2htApiaW5am9OWMVoJwAAAAAAEGOETknMbrXIbbeyrhMAAAAAAIg5Qqc9JNvN/NJdNvlCUQXD+7/bXTwl2+ccAAAAAAAQOtVjtdoUCgXjXUazSnPunGKXwKOdQqGgrFZbvMsAAAAAAADNiNBpN6mpmSov36ZgMJA0o28cNotcNktCrutkmqaCwYDKy7cpNTUz3uUAAAAAAIBmxPCS3bjdKZKkiortikQSL6TZxTCMJoViEX9YFYGI7AGHrBajBStrOqvVprS0rLrPPQAAAAAASA6ETntwu1MSPgDJzPSovNzb6P29pTW68vUFuvVnvXXmsI4tWBkAAAAAAEAtpte1AT3bpah7tlvT12yPdykAAAAAAKCNIHRqIwoLcvTtxnKVe0PxLgUAAAAAALQBhE5txISCHEVM6Yt1pfEuBQAAAAAAtAGETm1E3/ap6pjuZIodAAAAAACICUKnNsIwDE0oyNXc9WWqDiTunfkAAAAAAEByIHRqQwr75CgcNfXl90yxAwAAAAAALYvQqQ0ZlJ+m3FSHZqwhdAIAAAAAAC2L0KkNsRiGjumdo9k/7JAvFIl3OQAAAAAAIIkROrUxhQU5CoSj+vqHHfEuBQAAAAAAJDFCpzZmWOcMZbrt3MUOAAAAAAC0KEKnNsZmMXR073aa9f0OBcPReJcDAAAAAACSFKFTGzShIEc1wYi+2VAW71IAAAAAAECSInRqg8Z0zVSq06rpq5liBwAAAAAAWkbMQ6eSkhL9+c9/1tlnn62hQ4eqb9++KioqavJ53n//ffXt21dHHXVUC1SZ3OxWi47s2U5frCtVOMIUOwAAAAAA0PxiHjqtX79eH374odLT0zVq1KiDOkdlZaXuvvtu5ebmNnN1ic9atla2R0fJWrbukM5TWJCjCn9YC4oqmqkyAAAAAACAn8Q8dBo9erRmz56tJ598UieeeOJBnePvf/+7+vXrp/HjxzdzdYkv6sqWarYqZe7fDuk847pnyWWzaAZ3sQMAAAAAAC0g5qGTxXJoT7lgwQK98847uvPOO5upotbFdGcrOu5aOdd9INuWRQd9HpfdqiN6ZmvGmu2KRM3mKxAAAAAAAECtbCHxUCikO++8U5dddpm6desW73LiJjrm14q62ynl63sk8+ADo8KCHO3whrS0uLIZqwMAAAAAAGhlodOTTz6pYDCoq666Kt6lxJczTd6R18ux6SvZi7486NMc0TNbDquh6UyxAwAAAAAAzcwW7wIaa/369frPf/6jhx9+WE6n86DOYbUaysz0NHNlsWe1WuQ84kqZS/+r9G/uU2TQ8ZLR9PwwU9L43jn6fF2p7po0SIZhNHutaLusVktSfL0hedGjSHT0KBIdPYpER48i0bWFHm01odNf/vIXjRs3TsOGDVNlZe10sFAoJNM0VVlZKYfDIZfLtd9zRCKmysu9sSi3RWVmelReHZFz1M1K/+xGVS14TcHevziocx3ZI0vTV23T7FVbNTAvrZkrRVuWmelJiq83JC96FImOHkWio0eR6OhRJLpk6tHc3IbzhFYTOq1bt06bNm3S6NGj93ps9OjRuvDCC/X73/8+DpXFT6DPaQp/+5hS5vxNwR4nSFZ7k89xZM92sloMzVizndAJAAAAAAA0m1YTOv3rX/9SIBCot+2JJ57Q8uXL9cADDygvLy9OlcWRxaqacbcp44NL5Vr5ivwDz2/yKTLcdo3qkqEZa7brmvHdmWIHAAAAAACaRVxCp2nTpkmSli1bJkn64osvlJ2drezsbI0ZM0aSNGDAAE2aNEl33323JGnYsGF7nefNN9+Uw+HQ2LFjY1N4Agp2P06hvJHyzPuX/H1Pl2zuJp+jsCBH93y6Vuu2e9U7N6UFqgQAAAAAAG1NXEKnG264od6/77rrLknSmDFj9Pzzz0uSIpGIotFozGtrdQxDNYf9TplvTpZ7ybPyjfh1k09xdO8c3fvpWk1fs43QCQAAAAAANIu4hE6rVq1qln3uvffe5iin1Qt1HKdA1wnyLHxY/oHnyXRmNOn4dikODeuUrhlrSnXl4d1bpkgAAAAAANCmWOJdAJpHzbjbZQlUyP3tfw7q+Al9crV2e402lPmauTIAAAAAANAWEToliUjuQPkLTpVn8X9lqdnS5OMn9G4nSZq+eltzlwYAAAAAANogQqckUjPmFikakmf+g00+Ni/dpYF5aZq+ZnsLVAYAAAAAANoaQqckEs3sIf+A8+T67kVZKn5s8vGFBTlasaVamyv9zV8cAAAAAABoUwidkox31A2SxaaUuf9o8rETCnIkSTMY7QQAAAAAAA4RoVOSiaZ0kG/I5XKteUvWbcubdGyXLLcKclMInQAAAAAAwCEjdEpC3hG/VtSZoZS5f2vysRMKcrR4U6W21wRboDIAAAAAANBWEDolIdOZIe+Ia+VcP1324jlNOrawIEempJmMdgIAAAAAAIeA0ClJ+YZcrEhKB6V8fa9kmo0+rmc7j7plubmLHQAAAAAAOCSETsnK5pZ39E2yl8yX48dPG32YYRiaUJCjhRvLVe4LtWCBAAAAAAAgmRE6JTF//7MVzuyplDn3StFIo48r7JOjiCl9sa60BasDAAAAAADJjNApmVlsqhl7q2w7Vsm5+s1GH9avfao6pju5ix0AAAAAADhohE5JLtjrJIVyhyjlm39IkUCjjjEMQ8cU5Gju+jJVB8ItXCEAAAAAAEhGhE7JzrCo5rDbZa0qknvZC40+rLAgR6GIqVnf72jB4gAAAAAAQLIidGoDQp2PVLDTEfIseFBGsLpRxwzumK6cFAdT7AAAAAAAwEEhdGoLDEM1h90ui69U7sVPNuoQi2HomN7tNPuHHfKHGr8IOQAAAAAAgETo1GaEOwxXoOfP5f72cRm+xt2VrrBPjvzhqGb/WNbC1QEAAAAAgGRD6NSG1Iy9VUbYK8+Chxu1//DOmcpw2TR99bYWrgwAAAAAACQbQqc2JJJdIH+/M+Ve+pwsVZsOuL/NYuiY3jma9f0OBcPRGFQIAAAAAACSBaFTG+MdfZNkGPJ8869G7T+hIEc1wYjmbShv2cIAAAAAAEBSIXRqY6JpneQbdJFcq16VdcfqA+4/umumUhxWTV/DFDsAAAAAANB4hE5tkHfktTJtHqXMve+A+zpsFh3Zq50+X1uqcNSMQXUAAAAAACAZEDq1QaY7W77hv5Lz+2mylSw84P6FBTmq8Ie1cGN5yxcHAAAAAACSAqFTG+UdeoWi7nZKmXOPZO5/BNNh3bPkslk0Y832GFUHAAAAAABaO0KntsqRoppRN8ix6WvZN36x311ddqsO75GtmWtLFT1AQAUAAAAAACAROrVp/oHnK5LWRSlz7pXM6H73LSzI0faaoJYWV8aoOgAAAAAA0JoROrVlVqdqxt4i+7alcq59f7+7HtEzW3aroelMsQMAAAAAAI1A6NTGBQomKdyunzxz75MioX3ul+q0aWy3LM1Ys10mU+wAAAAAAMABEDq1dRarasbdLlvFD3KtfHm/u04oyNHmyoBWbq2OUXEAAAAAAKC1InSCgt1+plD+aHnm/VsK+fa531G92slqSNNXM8UOAAAAAADsH6ETJMNQ9bjfyVqzRe6lT+9zt0y3XSO7ZGo6U+wAAAAAAMABEDpBkhTuOEaBbj+TZ+GjMvzl+9yvsE+ONpT5tK7UG7viAAAAAABAq0PohDo1426TEaiU59vH9rnP0b1zZEiawRQ7AAAAAACwH4ROqBPJGaBAn0lyL3lKlpqSBvfJSXFoaKd0zVhL6AQAAAAAAPaN0An11Iy5RYqG5Zn3wD73mVCQozXbarSxbN+LjgMAAAAAgLaN0An1RDO6yT/wfLm+e0nW8u8b3KewIEeSNH0No50AAAAAAEDDCJ2wl5qRN0hWhzzf/LPBx/PSXRqQl0boBAAAAAAA9onQCXsxU9rLO/QKuda8Ldu2ZQ3uU1iQo+9KqlRS6Y9xdQAAAAAAoDUgdEKDfMN/pagzUylz7m3w8Qk7p9jNWFsay7IAAAAAAEArQeiEBpnOdHlHXivHhpmyb5q91+Nds9zqnZOiGau3xaE6AAAAAACQ6AidsE++wRcpkpKnlK/vlUxzr8cLC3K0aFOlttcE41AdAAAAAABIZIRO2DebW94xN8m+ZaEcP3y818MT+uTIlPT5WhYUBwAAAAAA9RE6Yb/8/c5SOLOnUub8TYpG6j3Wq51HXbPcmr6a0AkAAAAAANRH6IT9s9hUM/ZW2cpWy7n6jXoPGYahCQU5WrCxXBW+UJwKBAAAAAAAiYjQCQcU7HWyQrlDlDL3H1IkUO+xwoIcRUzpi3XcxQ4AAAAAAPyE0AkHZhiqOex3slZvknvZ8/Ue6t8hVfnpTk1fwxQ7AAAAAADwE0InNEqoy5EKdh4vz/wHZQSr67bvmmI3d32ZqgPhOFYIAAAAAAASCaETGq1m3O2y+HfIveiJetsn9M5RKGJq9g874lQZAAAAAABINIROaLRwh2EK9DpZ7kWPy/D9tIbTkE7papfiYIodAAAAAACoQ+iEJqkZe6uMsF+e+Q/WbbMYho7p3U5ffb9D/lAkjtUBAAAAAIBEQeiEJolk9ZK//1lyL3telsqNddsLC3LkD0f19Y9lcawOAAAAAAAkCkInNJl39G8kw1DKvH/VbRvRJVMZLhtT7AAAAAAAgCTJFusnLCkp0ZNPPqlly5Zp5cqV8vv9+uyzz9S5c+f9HvfDDz/oxRdf1Ny5c1VUVKSUlBQNGjRIN954o/r16xej6iFJ0dSO8g2+WO5FT8g77CpF2vWTzWLoqF7tNH3NdoUiUdmt5JkAAAAAALRlMU8G1q9frw8//FDp6ekaNWpUo4/76quvNHfuXJ122ml67LHH9Ic//EFlZWU666yztGzZshasGA3xjrxWpiNVKXP/XretsE+OaoIRfbOhPH6FAQAAAACAhBDzkU6jR4/W7NmzJUmvvvqqZs2a1ajjTjrpJJ1//vkyDKNu27hx41RYWKgpU6bovvvua5F60TDTlSXf8F8rZe59spUsUDhvpMZ0zVKKw6oZq7friB7Z8S4RAAAAAADEUcxHOlksB/eU2dnZ9QInSUpLS1P37t21ZcuW5igNTeQdcpmi7lylfH23ZJpy2Cwa3zNbM9duVzhqxrs8AAAAAAAQR6164Z3y8nKtWbNGvXr1incpbZMjRTWjb5CjeK7sG2ZKkgr75KrCH9a3ReVxLQ0AAAAAAMRXqw6d/vznP8s0TV100UXxLqXN8g84T5H0rkqZc69kRnVY9yw5bRbNWFMa79IAAAAAAEAcxXxNp+by+OOP67333tNf//pXdevWrVHHWK2GMjM9LVxZy7NaLQl0HR6ZE34v+9tXKav4I2UOPENH98nV5+tK9ZfTBstiMQ58CiSlxOpTYG/0KBIdPYpER48i0dGjSHRtoUdbZej0v//9T//617904403avLkyY0+LhIxVV7ubcHKYiMz05NY19Hp58pq11/G9L+oLO9YHdk9Sx9/t0VfrijR0E4Z8a4OcZJwfQrsgR5FoqNHkejoUSQ6ehSJLpl6NDc3rcHtrW563VtvvaW77rpLl156qX7961/HuxxIkmFRzbjbZa1cL9eKqRrfM1t2q6Hpa7bHuzIAAAAAABAnrSp0+uSTT3THHXfozDPP1G233RbvcrCbYLdChfLHyDPv30q1hDS2W5ZmrNku0+QudgAAAAAAtEVxmV43bdo0SdKyZcskSV988YWys7OVnZ2tMWPGSJIGDBigSZMm6e6775YkzZs3TzfddJP69eun0047TYsWLao7n8Ph0IABA2J7EajPMFQ97nZlvXm63Eue0oTekzXr+x1atbVa/To0PMwOAAAAAAAkr7iETjfccEO9f991112SpDFjxuj555+XJEUiEUWj0bp95syZo2AwqOXLl+vcc8+td3ynTp00ffr0Fq4aBxLuOEaB7sfK8+1jOmbyObrbkKav2U7oBAAAAABAG2SYbWj+UygUSYpFuhJ5sTHr9u+U9fIJ8o34tS4q+oW2VgX06iWjZBjcxa6tSeQ+BSR6FImPHkWio0eR6OhRJLpk6tGkWUgciS2SM0CBPqfJvfgpndI1qvVlPn1fmhxfRAAAAAAAoPEIndDsasbeIplRnVL5ogyJu9gBAAAAANAGETqh2UXTu8o38JfKXPOKTuhQpRmETgAAAAAAtDmETmgR3lHXS1anbrK+ojXbalRU7ot3SQAAAAAAIIYIndAiTE+uvMOuUJ8dn2mQ8b2mr2a0EwAAAAAAbQmhE1qMb9hVirqydFfK66zrBAAAAABAG0PohBZjOtPlHXmdRoa/VfrWOSqp9Me7JAAAAAAAECOETmhRvkEXKujJ0222qZrJaCcAAAAAANoMQie0LJtLgbG3aJhlnWqWvxvvagAAAAAAQIwQOqHF+ftN1nZnN51R8axKq7zxLgcAAAAAAMQAoRNansWm0pG3qMCySSVfPx/vagAAAAAAQAwQOiEmsoaequ+M3hq07j9SmAXFAQAAAABIdoROiAnDYtHc7tcqJ7pNxqJn410OAAAAAABoYYROiJkeI07QF5HBSl3wkIxgVbzLAQAAAAAALYjQCTEzoEOqnnb8Uq5whdzfPh7vcgAAAAAAQAsidELMGIah/L7j9EF0rNyLnpDh3R7vkgAAAAAAQAshdEJMTSjI0T9CZ0qRgDwLHox3OQAAAAAAoIUQOiGmhnRMV7m7m770HC/3sudlqdwY75IAAAAAAEALIHRCTFkthiYU5OgPlb+QaViU8s0/410SAAAAAABoAYROiLkJBTn6MZSl1V3OkXPV67KWrox3SQAAAAAAoJkROiHmRnbOULrLpiejp8p0pCllzn3xLgkAAAAAADQzQifEnM1q0VG92umj9SFVD/uVnD9+LNvm+fEuCwAAAAAANCNCJ8RFYUGOqgMRfZF5uiKe9kr5+h7JNONdFgAAAAAAaCaEToiLsd2ylOKw6pMfvPKOvlGOzXPlWD893mUBAAAAAIBmQuiEuHDYLBrfM1ufry1Vdd9zFEnvppQ590pmNN6lAQAAAACAZkDohLiZUJCjcl9Ii0u8qhn7W9lKV8i55u14lwUAAAAAAJoBoRPi5vAe2XLaLJq+ersCBRMVbjdAKXP/IUWC8S4NAAAAAAAcIkInxI3bbtVh3bM0Y+12RWWo5rDbZa1cL9d3/4t3aQAAAAAA4BAROiGuCvvkaFt1UMs2VynYdYKCHccqZd79Usgb79IAAAAAAMAhIHRCXB3Zs51sFkPTV2+XDEM1434ni2+bPIufindpAAAAAADgEBA6Ia5SnTaN6ZapGWu3yzRNhfNHKdD9eLm/fVSGvyze5QEAAAAAgINE6IS4KyzIUXGFX6u31kiSasbdKiNYLc/CR+JcGQAAAAAAOFiEToi7o3vlyGpI09dskyRF2vVToO8Zci95Rpbq4jhXBwAAAAAADgahE+Iu02PX8C6Zmr5me922mjE3S2ZUnnn3x68wAAAAAABw0AidkBAKC3L04w6fvi+tnWIXTe8i36AL5Frxsqxl6+JcHQAAAAAAaCpCJySEY3q3kyTN2G20k3fk9ZLVKc/cv8erLAAAAAAAcJAInZAQclOdGtIxXdNX/xQ6mZ4ceYddKde692TbujiO1QEAAAAAgKYidELCKCzI0eptNSoq99Vt8w2/SlFXllLm/C2OlQEAAAAAgKYidELCmFCQI6n+FDvTkSbvyOvl2PiF7Btnxas0AAAAAADQRIROSBgdM1zq3yG13l3sJMk36AJFUjsqZc49kmnGqToAAAAAANAUhE5IKBMKcrRsc5W2VAV+2mhzqWbMzbJvXSzH9x/GrzgAAAAAANBohE5IKLum2M3cY7RToO8ZCmcV1K7tFA3HozQAAAAAANAEhE5IKN2zPerZzrPXFDtZbKoZd5ts5evkWvlqfIoDAAAAAACNRuiEhFNYkKNFmyq0wxustz3Y4wSFOgyXZ96/pLBvH0cDAAAAAIBEQOiEhDOhIEdRU5q5trT+A4ahmsN+J2v1ZrmXTolPcQAAAAAAoFEInZBwCnJT1DnTpRl7TrGTFOp0uIJdj5ZnwUMyApVxqA4AAAAAADQGoRMSjmEYKizI0bwN5ar0h/Z6vGbc7bIEyuVe9HgcqgMAAAAAAI1B6ISEVFiQo0jU1Jfrduz1WDh3sPy9J8qz6AkZ3m1xqA4AAAAAABwIoRMS0oC8NLVPdex9F7udvGNvkSJBpcx/IMaVAQAAAACAxiB0QkIyDEMTCnI058cd8gYjez0eyewp/4Bz5Vr+oiwV6+NQIQAAAAAA2B9CJySswj45CkZMffXD3lPsJMk7+kbJsCjlm3/GtjAAAAAAAHBAMQ+dSkpK9Oc//1lnn322hg4dqr59+6qoqKhRx0ajUT3++OMqLCzU4MGDNXHiRH300UctXDHiZWjHDGV77Jq+uuEpdtGUPPmGXibn6jdl3f5djKsDAAAAAAD7E/PQaf369frwww+Vnp6uUaNGNenYBx54QA899JDOP/98Pfnkkxo2bJhuuOEGff755y1ULeLJajF0TO8cffVDqfyhvafYSZJ3+NUynelKmXtfjKsDAAAAAAD7E/PQafTo0Zo9e7aefPJJnXjiiY0+rrS0VE899ZSuvPJKXXbZZRo3bpz+9Kc/aezYsfrHP/7RghUjngoLcuQLRTV3fVmDj5uuTHmH/1rOHz+VrfibGFcHAAAAAAD2pUmh06effqrXX3+97t+bNm3S2WefreHDh+v6669XTU3NgZ/QcnA515dffqlQKKSJEyfW2z5x4kStXr1aGzduPKjzIrGN7JKhdJdNM/ZxFztJ8g25TBFPB6XOuUcyzRhWBwAAAAAA9qVJCdBjjz2mHTt+WtT53nvvVUlJic4++2zNmzdPDz/8cLMXuMvatWvlcDjUrVu3etsLCgokSevWrWux50b82KwWHdmrnb5Yt0OhSLThnexueUffKPvmeXKsnx7bAgEAAAAAQIOaFDpt3LhRffv2lST5/X59/vnnuv3223X77bfrpptu0ieffNIiRUpSRUWF0tPTZRhGve0ZGRmSpPLy8hZ7bsRXYUGOqgJhzd9Yvs99/P3PUSS9m1Lm3COZ+winAAAAAABAzNiasnMgEJDL5ZIkffvtt4pEIho/frwkqUePHtq6dWvzV9iMrFZDmZmeeJdxyKxWS1JcR2OdMMSpOz9Yqa/Wl+vnwzrvcz+z8P/J9tYVytr0ocxBZ8awQjSkrfUpWh96FImOHkWio0eR6OhRJLq20KNNCp06deqkBQsWaMyYMfrss880cOBApaWlSapd6HvXxy0hPT1dlZWVMk2z3miniooKSVJmZuYBzxGJmCov97ZUiTGTmelJiutoiiN6ZOvj5Vv0myN7yGoxGt6p4wnKzBkoy4y/qiz/OMnqiG2RqKct9ilaF3oUiY4eRaKjR5Ho6FEkumTq0dzchvOgJk2vO/vss/Xwww/r9NNP10svvaTJkyfXPbZo0SL16tXr0Krcj4KCAgWDQW3YsKHe9rVr10pSiz434m9CQY7KfCEt2lSx750Mi2rG3S5r5Qa5vnspdsUBAAAAAIC9NCl0uuiii3TPPfdo+PDhuvvuu3XWWWfVPVZTU6PTTz+92Qvc5cgjj5Tdbte7775bb/s777yjPn36qEuXLi323Ii/w3tky2mz7PcudpIU6nqMgh3HKWXe/VLwwHdTBAAAAAAALaNJ0+skaeLEiZo4ceJe2//0pz81+hzTpk2TJC1btkyS9MUXXyg7O1vZ2dkaM2aMJGnAgAGaNGmS7r77bklSu3btdPHFF+vxxx9XSkqKBgwYoA8++EBz5szRY4891tTLQCvjcVh1WPcszVizXTdN6CWLsY8pdoahmsN+p6zXT5VnyX/lHXVDbAsFAAAAAACSmhg6/fDDD6qqqtKQIUMk1d7B7pFHHtGaNWs0fvx4/fKXv2zUeW64oX4QcNddd0mSxowZo+eff16SFIlEFI3WvwvZb37zG3k8Hk2ZMkXbtm1Tjx49dP/992vChAlNuQy0UhMKcjRzbamWb67S4I7p+9wvnDdSgR4nyP3tf+QbeIFMd3YMqwQAAAAAAFITQ6c///nP6tevX13o9O9//1svvvii+vTpo3vuuUeGYej8888/4HlWrVp1UPtYrVZdffXVuvrqq5tSNpLEkT3byWYxNH3N9v2GTpJUM/ZWZb18nDwLH1HNEf8XowoBAAAAAMAuTVrTaeXKlRoxYoQkKRqN6q233tItt9yiN954Q7/+9a/18ssvt0iRgCSluWwa3TVTM9Zsl2ma+9030q6vAn0ny730WVmqimNUIQAAAAAA2KVJoVNVVZUyMzMlSd99950qKyt1wgknSKqdGrdx48ZmLxDYXWFBjjZV+LV624EXCa8ZfZNkmvLM+1cMKgMAAAAAALtrUuiUk5OjDRs2SJK++uorde3aVfn5+ZIkr9crm63J65IDTXJ073ayGNL0A9zFTpKi6Z3lG3yhXCtfkbVsbQyqAwAAAAAAuzQpdCosLNS//vUv/e1vf9PTTz+tE088se6x1atXq0uXLs1eILC7LI9DIzpnaMbqA4dOkuQdeZ1Mm1spc+9r4coAAAAAAMDumhQ63XzzzTrmmGM0a9YsFRYW6qqrrqp7bPr06TriiCOavUBgTxMKcvTDDq9+KPUecF/T3U6+YVfJue4D2bYsavniAAAAAACAJMkwD7QicxIJhSIqLz9wUJHoMjM9SXEdB2trVUAnPzFXvz6iuy4d1/WA+xvBamU/f7jCOQNUcerUGFQIiT5F4qNHkejoUSQ6ehSJjh5FokumHs3NTWtwe5NGOu1SXl6umTNn6q233tLMmTNVXl5+KLUBTdI+zanB+emNWtdJkkxHqryjrpejaJbsG79s4eoAAAAAAIAkNXnl73//+9965plnFAwG67Y5HA5deumluvHGG5uzNmCfCvvk6IHPv1dRuU+dM90H3N836AK5Fz2plK/vUXnn8ZJhxKBKAAAAAADariaNdHr22Wf1+OOPa+LEiZoyZYo++OADTZkyRRMnTtTjjz+uKVOmtFSdQD0TCtpJkmY0crSTrE7VjL1F9m1L5Fj3fgtWBgAAAAAApCaOdJo6daouvPBC3XHHHXXbevbsqTFjxsjj8eill17ShRde2OxFAnvqlOFW3/apmrGmVBeMbtxdEwN9Tld44WNKmXufgj1PlCxNHugHAAAAAAAaqUkjnTZt2qRjjjmmwceOOeYYbdq0qTlqAhqlsCBHSzdXamtVoHEHWKyqGXebbOXfy7XylZYtDgAAAACANq5JoVNmZqZWr17d4GNr1qxRZmZmc9QENEphQY4kaebaRk6xkxTscbxCHUbI882/pLCvpUoDAAAAAKDNa1LodNxxx+mBBx7QW2+9pXA4LEkKh8N677339OCDD+qEE05okSKBhnRv51GPdp5G38VOkmQYqjnsd7LWlMi99LmWKw4AAAAAgDauSYva3HTTTVq5cqVuv/12/f73v1dGRoYqKioUiUQ0cuRI/eY3v2mpOoEGFRbk6Jm5G1TmDSrL42jUMaFOhynY9Rh5Fjwk/4BzZTozWrhKAAAAAADaniaFTqmpqXrxxRc1c+ZMzZs3T5WVlcrIyNCYMWN01FFHyeA29IixCQU5emrOBn2+tlSThuQ3+riacbcr65UT5f72cXnH3dqCFQIAAAAA0DY1+fZdhmFowoQJmjBhQkvUAzRJn9wUdcpwafqa7U0KncK5g+QvOFWexU/KP/giRVM6tGCVAAAAAAC0PQcMnfr169foEUyGYei777475KKAxjIMQ4UFOfrfwk2q8oeV5mp8jloz5hY5170vz/wHVX30X1uwSgAAAAAA2p4DvkO/5pprmDaHhFbYJ0fPzy/Sl9+X6qQBjR+xFM3sIX//c+X67kV5h12haEb3lisSAAAAAIA25oCh03XXXReLOoCDNiAvTe1THZq+enuTQidJ8o6+Qa5Vryrr1V8omtJBpjNDUWd67d+O2r9332Y60xV1Zsp0pMt0pst0pEpGk24CCQAAAABAm9DkNZ2ARGMxDE0oyNFbS0vkDUbkcVgbfWw0JU+VJzwux7oPZAlWyAhUyFK9WZbSlTIClbIEK/d7vGlYZDrSdgZTGbVhlKuBwGrnv6M7t9WGV+mSzX2olw8AAAAAQEIidEJSmFCQo5e/LdbsH3bo2L65TTo22P1nCnb/WcMPRiMyglUygpWyBCpkBCprg6ldHwcrZQmU77a9UpYda2ULVNSGWGH/fp/btDplOtIVdWXUjZ6qC6Ycuz5O3yOs2vV4mmThSxgAAAAAkJh4x4qkMKxThrI9dk1fs73JodN+WawyXZkyXZmKHszxkUDtiKlApYyd4ZQlWBtQ1W6vqP+xv0y2ih9/CrXMyH5PH7Wn1k7zqxtRlbHbSKsGRlc50mU6M2sfs6dIrNcGAAAAAGghhE5IClaLoaN7t9NHK7YpEI7KaUuQdZasTpmeXEU8BxGEmaYU8tYGUMHdRlcFdhtdVW8EVrmsVRtlbF9eO+oqVL3/0xvWnetSpSvqytxjpNXOtat2Pb5z208hVrpkdR7kJwUAAAAA0BYQOiFpTCjI0ZtLSjTnxzId3btdvMs5dIYhOVIUdaRI6qj9j3lqQDRcOzVw57Q/Y+eoKkuwUoa/YrfA6qeRVpaazbLtGnUVCez39KbNpagjY4+RVjvXtHLnSKMvkJRzkBcPAAAAAGjtCJ2QNEZ1yVSa06YZa7cnR+h0qCw2ma4sma6sg5saGPbXX7vKXy4jWLnHtMCdIVagUhbvNlnK1tVt1/wHlTrwPHlHXq9oStPuKggAAAAAaP0InZA07FaLjuqVrS/XlSocicpmTZApdq2VzaWozSUdRGBkqSpW5tJH5Fr8olzfTZVv8MXyjrhGpju7BQoFAAAAACQi3pUjqUwoyFWlP6z5G8vjXUqbFk3rqOhJ/9aO82Yq0PsXci96QtnPHy7P3H/ICFTGuzwAAAAAQAwQOiGpjOueJbfdoulrtse7FEiKZnRX1bEPqOzczxTqepRS5t+v7OcPk3vBw1LIG+/yAAAAAAAtiNAJScVps+iIHu30+dpSRaJmvMvBTpHsPqo88QmVnfWhQnkjlTrnXrV7/nC5F/9XCvvjXR4AAAAAoAUQOiHpFPbJ0Q5vSIuLK+JdCvYQzh2syl9MUdnpbyqcXaDUWX9U9otHybX8RSkSind5AAAAAIBmROiEpHNEj2w5bRZNX80Uu0QVzh+tilNfUfnEqYqmdFDazNuU/dIxcq56XYpG4l0eAAAAAKAZEDoh6XgcVo3rlqUZa7YrajLFLmEZhkJdxqv8jHdUcdIzMu0epX96g7JePl6OdR9I/N8BAAAAQKtG6ISkVNgnR1urg/qupCrepeBADEPBHsep7OyPVHn8Y1I0rIxpVyrz1ZPkWD+d8AkAAAAAWilCJySl8T2zZbUYmsFd7FoPw6JAwSkqO/czVRb+SxZ/uTLeu1CZb54h+6av410dAAAAAKCJCJ2QlNJddo3umqnpa7bLZKRM62KxKdD/LO04/3NVHX23LJXrlfnWmcp45zzZtnwb7+oAAAAAAI1E6ISkVViQo6Jyv9Zsq4l3KTgYVof8gy7Ujl/OUvURd8q2bZmyXjtF6e9fKuv27+JdHQAAAADgAAidkLSO6d1OFkOazhS71s3mlm/YldpxwWzVjP2t7MVzlP3y8Ur76GpZy9bFuzqgzTN8O5Q6/WZlvjZR7sX/leEvi3dJAAAASBCETkhaWR6HhnfOIHRKEqYjVd5RN2jHBV/JO+JaOX/8RFn/m6DUz26WpXJjvMsD2h7TlHPlq8p+6Wi5Vr0uI+xV6qw/qt0zI5X20a9l3/C5ZEbjXSUAAADiyBbvAoCWNKF3jv4xY51+LPWqeztPvMtBMzBdWao57HZ5h14uz8KH5V72vFyr35B/wHnyjrpO0ZS8eJcIJD1r+fdKnfk7OTZ9pVDeKFUdc68i7frJuv07uVZMlWvVG3KtfVeR1E7y9z9L/n5nK5reOd5lAwAAIMYMsw2tshwKRVRe7o13GYcsM9OTFNcRC1urAjr5ibm6enx3XTK2a7zLaVNi1aeW6mJ55j8o14qpkmGVb/DF8o64RqY7u8WfG60br6UHIRKU59vH5Jn/oEyrUzWH/U7+gedLxh4DpyMBOb//SK4VU2Xf+KUkKdTlSPn7n6NAzxMkqzMOxbc+9CgSHT2KREePItElU4/m5qY1uJ3QqRVKpsaMhUtf+lahiKnnLxgR71LalFj3qaXiR6XM+7ecq96QaU+Rb+jl8g27UqYzPWY1oHXhtbRpbMXfKG3mbbKVrZG/1y9Uc+RdiqZ0OOBxlsoiuVa+LNeKV2St3qSoM1P+vqfL3/8cRXIGxKDy1oseRaKjR5Ho6FEkumTq0X2FTqzphKQ3oSBHK7dWa1OFL96loAVFM7qr6tgHVHbuZwp1PVop8+9X9vOHyb3gYSmUHC/kQDwY/nKlzrhVWW+eLiPkVcXJz6nqxP80KnCSpGh6Z3nH3KwdF8xW+SkvKtjlSLmXvaDsl49X5qsny7XseRmByha+CgAAAMQDoROS3oSCHEnSjDWlca4EsRDJ7qPKEx9X2VkfKpQ3Uqlz7lW75w+Xe/F/pbA/3uUBrYdpyrnmbWW/NEGuFVPlHXqldpw7XcHuPzu481msCnU9WlUnPKbSSxaoevwfZUQCSvv8d2r37AilfXqD7Ju+ltrOAGwAAICkx/S6ViiZhuDFyvlTFshlt+qpc4fFu5Q2I1H61LZ5vlLm3ifHptmKpObLO+pG+fudJVnt8S4NcZYoPZqILJUblPb5HXJsmKlQ7hBVT/ibwrmDm/+JTFO2rYvlWjFVzjVvyxKsUjije+3aT/0mt/kbA9CjSHT0KBIdPYpEl0w9yvQ6tGmFfXK0pLhS26oD8S4FMRbOH6WKSa+ofOJURVPylDbzNmW/dIycq16XopF4lwcklmhY7oWPKft/hbIXf6Pq8X9U+eR3WyZwkiTDULjDMFUfc69KL16oyp/dr2hKB6XOuVfZz41V+vsXy/H9NCkSapnnBwAAQIsidEKbUFiQK4kpdm1ZqMt4lZ/xjipOekamPUXpn96grJePl2PdB0znASTZtixS1isnKfXrvyrY+SjtOG+mfEMvlyzW2BRgdyvQb7IqTntdO87/Qr7hv5Jt61JlfHi52j03Rimz/yJr2brY1AIAAIBmwfS6ViiZhuDF0lnPzFe7FLseO2tovEtpExK6T82onGvfl+ebf8hWvk6h3MHyjv2tgl0nSIYR7+oQIwndozFkBKvlmfM3uZc+q2hKe1Uf+WcFe/48Mb4WomE51s+Qa8VUOX78VIYZUSh/tHz9z1Gg9ymS3RPvClsUPYpER48i0dGjSHTJ1KP7ml5ni3EdQNxMKGinZ7/ZqDJvUFkeR7zLQTwZFgUKTlGg18/lXP2mUr75lzLeu1Ch/NGqGXurQp0Oi3eFQEw4vp+m1C/+nyw1W+QffKFqxt4m05ke77J+YrEp2OM4BXscJ6Nmq1yrXpNrxVSlT79Z0S/vVKBgovz9z1G4w4jECMkAAABQD9Pr0GYUFuQqakpfrGOKHXay2BTod6Z2nP+5qo6+W5bKDcp860xlvHOebFu+jXd1QIuxVBcr/YPLlPHh5TJdmSo/4y1VH/XXxAqc9mCmtJdvxNUqO+9zlZ32hoK9TpZr9VvKev1UZU09Vu5FT8jw8foOAACQSJhe1wol0xC8WDJNU5Oemqfu2W49cHoLLYqLOq2yT8M+uZc9L8+Ch2Xx71Cg+/GqGXuLIjkD4l0ZWkCr7NFDFY3Itew5pcy5T0Y0pJoxN8k39MpWezdHI1gl55p35FoxVfYt38q02BXscZz8/c9RsMvRsVuPqoW0yR5Fq0KPItHRo0h0ydSjTK9Dm2cYhgoLcjR14SZV+cNKc9H+2IPNLd+wK+UfcJ7cS56S+9vHlf3y8fL3nijvmJsVyeoV7wqBg2bd/p3SZtwq+9ZFCnY5SlVH361oRvd4l3VITEea/APPl3/g+bKWrpJrxVS5Vr0u57oPFEnNl7/fWfL3P1vR9K7xLhUAAKBNYnod2pTCghyFo6a+/J4pGNg305Eq76gbtOOC2aoZeZ2cP36qrP9NUOpnN8tSuTHe5QFNE/IqZfZflPXKz2Wt2qjK4x5SxSkvtvrAaU+Rdn1VM/4PKr14vipO+I8i2X3lmf+g2j1/uDLePkfO1W9JYX+8ywQAAGhTYj7UY/Pmzbrnnnv01VdfyTRNHX744brjjjvUsWPHAx5bXFysBx54QHPnztWOHTuUn5+vE088UVdddZU8nuS+gw2ax8D8NOWmOjRjzXadNKBDvMtBgjNdmfKOu02+IZfJs/ARuZdNkWv1G/IPOE/eUdcpmpIX7xKB/bKvn6G0z++QtWqjfP3PUc3hv5fpyop3WS3L6lCw9y8U7P0LWaqK5Vr5ilwrXlb6J9cq6sxQoM9p8vU/V5HcgfGuFAAAIOnFdE0nn8+nU089VQ6HQzfeeKMk6YEHHpDP59M777yz3+DI6/XqtNNOUygU0nXXXaf8/HwtXbpUDz30kAoLC3X//fcf8PlZ0wmS9PfP1urtZSX65OrD5La37vU+Elky9qmlulie+Q/KtWKqZFjlG3yxvCOukenOjndpOAjJ2KO7GN5tSp31R7nWvK1wZi9VT/ibQh3Hxbus+DGjshfNlmvF/+T8fpqMSECh3MHy9z9HgT6TZDoz4l1hg5K5R5Ec6FEkOnoUiS6ZejQh1nR65ZVXtHHjRk2bNk3dunWTJPXt21cnnHCCXn75ZV1yySX7PHbhwoX68ccf9dRTT2n8+PGSpHHjxqmiokJPP/20fD6f3G53TK4DrVthnxy9sqhYs3/YoZ/1yY13OWhFoqkdVX3MvfIO/5VS5v1b7kVPyLX8BfmGXi7fsKsS+s5faCPMqFzf/U8pX98tI+RTzeib5B15jWR1xruy+DIsCnUZr1CX8ar2l8m5+i25VkxV2he/V+pXf1Kg10ny9z9HoU6HSQYrDwAAADSXmP5kNX36dA0dOrQucJKkLl26aMSIEfrss8/2e2woFJIkpaam1tuenp6uaDSqNnQTPhyiYZ0ylOW2a/rq7fEuBa1UNKO7qo59QGXnfqZQ12OUMv8BZT9/mNwLHpZCyfGbCrQ+1h1rlPnmZKXNvE3hdv1Vds7H8o65icBpD6YrS/4hl6j87I9UdtaH8vc/R44fP1Pm22cr+4Uj5Zn/oCzVm+NdJgAAQFKIaei0du1a9enTZ6/tvXv31tq1a/d77OGHH67u3bvrH//4h9auXauamhp9/fXXmjJlis455xzWdEKjWS2Gju7dTrO+36FAOBrvctCKRbL7qPLEx1V21jSF8kYpdc69avf84XIv/i8LFiN2wn555v5dWS8fL+uOVaqa8A9VTHpVkaze8a4s4YVzB6v66L+q9JIFqjz2QUXSOill7n3KnjJW6e9dKMe6D6RIMN5lAgAAtFoxnV5XUVGh9PS9p59kZGSosrJyv8c6nU699NJLuu6663TyySfXbT/zzDN15513Nur5rVZDmZmtP5yyWi1JcR3xdMrwTnpraYmWl3pV2Ld9vMtJSm2qTzPHSAWvKlw0V5aZdyt11h+VsvgJRY78rcwh50lWe7wrRAOSoUeNH7+U9cObZexYq+igMxU59i9ypeTKFe/CWh2PlPNLaewvFSr7QZbFL8mx5CU5p10p05Oj6OCzFR32Symnb0yrSoYeRXKjR5Ho6FEkurbQozG/e93BCgQCuvHGG1VaWqr77rtPHTt21JIlS/TII4/IarXqrrvuOuA5IhEzKRbpSqbFxuKlf7ZbqU6r3v12k0Z0SD3wAWiyNtmnqYOlX/xP9o2zlDL3b7J/8BtFZt2vmjE3KVAwSbKwcH0iac09avjLlPrVn+Va+Yoi6d1UdcqLCnU9WgpJaqXXlDCMDtKw30hDrpdjw0y5VkyVY97jss59RKG8kfL3P0f+3hMlR0qLl9KaexRtAz2KREePItElU48mxELi6enpDY5o2tcIqN299tpr+uabb/TJJ5+oa9eukqTRo0crLS1N//d//6dzzz1X/fr1a5G6kXzsVouO6tVOX6wrVTgSlc3KwrFoPqEu41Xe+Qg51n+mlDn3Kf3TGxRe+KhqxtysYM+fS4YR7xLRWpmmnKtfV+qsP8kIVso74hrVjLpRsnMjjWZnsSrY/WcKdv+ZDO92uVa9Xrv4+IzfKvXLP8hfcIr8A85TuMMIvqYBAAD2IabvtHv37q01a9bstX3dunXq3Xv/a0+sWrVKGRkZdYHTLkOGDKk7B9AUhQU5qvSHtWBjRbxLQTIyDAW7H6uys6ep4oT/SGZEGdOuVOarJ8mxfrrEzQ/QRJbyH5TxznlK//RGRTK6q+ysD1Vz2O8InGLA9OTIN/wqlZ07XWWnvyV/wSlyrXlXWa+fqqz/Fcr97eMyvNycAgAAYE8xDZ0KCwu1ePFibdy4sW5bUVGRFi5cqMLCwv0em5ubq4qKCq1fv77e9sWLF0uSOnTo0PwFI6mN7ZYlt92i6Wt4o4AWZFgU7P0LlZ3zqSp/9m9Z/OXKeO9CZb55uuybZse7OrQGkaA88x9S9tRjZdu6SFVH/VXlZ7ylSLv+8a6s7TEMhfNHqbrwnyq9ZKGqJvxdpjNdqbP/rHbPjVL6h1fI8eNnUjQS70oBAAASgmGasft1u9fr1amnniqXy6UbbrhBhmHogQceUE1Njd555x2lpNSuj7Bp0yYdd9xxuvrqq3XttddKqg2nJk6cqNzcXP3qV79Sfn6+li1bpkcffVTdu3fXa6+9Jotl/xlaKBRJivmSyTTvM95+9+53WlhUoQ+uGierhekRzYk+3YdIUK4VU+WZ/4CsNVsU7HykasbdqnCH4fGurM1pDT1q2zxfaTNvk23HKgV6naTqI/+kaEpevMvCHqw71si1Yqpcq16TxVeqSEqe/P3Okr//2YpmdDvo87aGHkXbRo8i0dGjSHTJ1KP7WtMppiOdPB6PnnvuOXXv3l233nqrbrnlFnXu3FnPPfdcXeAkSaZpKhKJaPc8rHPnznrllVfUr18/3X///bryyiv16quv6uyzz9YzzzxzwMAJaMiEghzt8Ia0pHj/d08Emo3VIf+gC7Xjl7NUfcSdsm1frqzXTlH6+5fKuv27eFeHBGEEKpQ683fKemOSjGCVKk56RpUnPkHglKAi2QWqOeL/VHrRPFWc+ITCOQPkWfiw2r1whDLeOkvOVW9IYV+8ywQAAIi5mI50ijdGOmFPNcGwjn/0ax3WPVu3H9tbOanOeJeUNOjTxjGC1XIveVrub/8jS7BS/t4T5R1zsyJZveJdWtJLyB41TTnWva/UL++UxbddviGXqmbMb2NypzQ0L0v1ZrlWvirXipdlrVyvqDNDgYJJ8g84R+HcwY06R0L2KLAbehSJjh5FokumHt3XSCdCp1YomRozETz0xfeaMq9IVouhCb1zdObwfA3vlCGDuxEdEvq0aQx/udyLnpBn8X+liF/+vmfKO/pGRdO7xLu0pJVoPWqpLFLqF7+Xc/1nCuUMUvWE+xRuPyTeZeFQmVHZN30t14qpcq77QEYkoFDOQPn7n6NAn9NkujL3eWii9SiwJ3oUiY4eRaJLph4ldBKhE/ZtQ5lPry8u1nvLt6jSH1bPdh5NHtZRP+/fXqlOW7zLa5Xo04NjeLfLs/ARuZdNkcyo/APOk3fUdUyragEJ06PRsNxLnlbK3L9LMlQz9rfyDblEsvDak2yMQIWcq9+Sa8VU2bctlWl1KtDzRPn7n6tQ58Mlo/5SAQnTo8A+0KNIdPQoEl0y9SihkwidcGD+UEQfr9qm1xYVa8WWannsVv18QHtNHtpRvXOZ3tIU9OmhsVQXyzP/QblWTJUMq/x9z1Cwy1EKdTpcpjs73uUlhUToUdvWJUqdeZvs25Yq0P1YVR/5F0XTO8e1JsSGddtyuVf8T87Vb8oSqFAkvWvt4uP9zlI0raOkxOhRYH/oUSQ6ehSJLpl6lNBJhE5omuUlVXptUbE+XrlVwYip4Z3SNXlYR00oyJHdysL1B0KfNg9LxXqlzL9fjnUfyBKqkSSFcgYq1OkIhTofoVDHsTIdqXGusnWKa48Ga5Tyzd/lXvK0ou5cVR95l4K9TpaY1tv2hP1yfj9NrhVT5SiaJVOGQl2Plq//OfIMP03lVaF4VwjsE9/rkejoUSS6ZOpRQicROuHglPtCendZiV5fvFmbKvzK9tg1aXCeThuSr7x0V7zLS1j0aTOLhGTbtkSOoq9kL5ole8kCGZGATMOqcIdhCnYer1CnwxXKGynZ6MvGiFePOn74RKlf/F6W6s3yD7pANeNul+lMj3kdSDyWyg1yrXhZrpWvyFq9WWZGF1UP/ZX8/c+SbO54lwfshe/1SHT0KBJdMvUooZMInXBooqapOT+W6bVFxZr1/Q4ZhnRkz3aaPCxfY7plycIIhXro0xYW9sleslD2ollyFH0l29bFMsyITKtTofzRdSFUuP0Q1gbah1j3qKWmRKlf3innug8Uzu6rqgn3KZw3MmbPj1YkGpFjwwylLX5UlqJvFHXnyjvsSvkHXcDIRiQUvtcj0dGjSHTJ1KOETiJ0QvMprvDrzSWb9fbSEpX5QuqS6dIZQzvqFwM7KMNtj3d5CYE+jS0jUCn75m9+CqFKV0iSoo40hTqOU6jzEQp2PkKR7L57LVbcVsWsR6MRuZa/oJQ598qIBFUz+jfyDbtSsjpa/rnRqmVmuFXz3XR5Fjwkx8YvFHVmyDfkUvmGXCrTlRXv8tCGGYFKOde8I3dGhirShyia3pXpwUhI/DyKRJdMPUroJEInNL9gOKrpa7brtUXFWlxcKafNouP75urM4R3Vv0PDX3RtBX0aX4avVI6i2bJvqp2OZ6v4UZIUdbdTsNMRCnU+XMHO4xVN79Zm3yjEoket279T2szbZN/yrYKdj1TV0XcrmtmjRZ8TyWP3HrVtWSTPgofk/OEjRe0p8g+6QN6hV8pMaR/nKtGWWCo3yr3kKbm++1/dOoOSFPG0VzhvpEL5oxXKG6lw7mCCdSQEfh5FokumHiV0EqETWtbqrdV6ffFmfbhii3yhqAbmpWnysHwd2ydXLrs13uXFHH2aWCxVm2Qv+kqOnSGUtWaLJCmS2qluFFSo8xGKpuTFudLYadEeDfmUMv/fci96QqYjXdXj/6BAn9PbbMCHg9NQj1pLV8qz4GE5174jWezy9z9H3uG/5q6HaFG2koVyL3pCzu8/kAyLAr1PkW/o5UrNzJB/9Zeyl8yXffN8WSvXS5JMq1Ph9kMVyh+lUF7tH+68injg51EkumTqUUInETohNqoDYX3w3Ra9tmizftjhVYbLplMG5emMofnqnNl2FoKlTxOYacpa/r3sm76So2iW7EWzZQmUS5LCWb0V6rQzhOp0WFJP4WmpHrVv+Fxpn98ha+V6+fqdrZoj/l9Sfx7RcvbXo5aKH+VZ+KhcK1+VZCrQ5zR5R1yjSFbv2BaJ5BWNyPHDR/IsekL2kvmKOtLlH3i+fEMuUTS1o6S9e9So2VobQJUskH3zPNm2LZURrb0DYzizp0J5oxXeGURFsnoTxKPF8fMoEl0y9SihkwidEFumaWphUYVeW1SsGWtLFYmaOqx7liYP66gjemTLaknuH7To01bEjMq2/TvZi76qDaI2zZER9sqUoXDOQIV2joIK5o+VHCnxrrbZNHePGt7tSp31R7nWvKVwZk9VH3OvQp0Ob7bzo+1pTI9aqovlXvSE3MtfkMIBBXudJO/I6xTOHRSjKpF0gjVyrXxZnsVPyVq5XpH0rvINuUz+/mfvtZD9AXs07JNt61LZS+bJvnmB7CXzZPGXSZKizsy6kVDh/FEK5Q6V7G3nl3OIDX4eRaJLph4ldBKhE+JnW3VAby0t0ZtLNmtbdVB5aU6dPjRfpw7OU7YnOdc8oE9bsUhItq2La0dBbfpK9s0LZESDMi02hTsMV7DT4Qp1Hq9Q3gjJ6ox3tQet2XrUNOVa8bJSZv9ZRsgr74hr5B15rWRzHfq50aY1pUcNX6nci/8r99JnZQlWKdCtUN6R1yucP6qFq0SysFQXy730WbmWvyhLoEKhvJHyDrtSwR4nSpaGlwlo8uvozpG2tpL5sm+eJ3vJAtnK1tQ+ZLEpnDNotyBqtKIpHZrj0tCGtbmfR6NhGWG/FAnICAdkRHZ97JcRCUjhgIydjyni3/8+kYAU3rXPzv3NqKKeXEVSOyqa2lHRlHxF0mr/jqa0547JByGZepTQSYROiL9wJKovvt+h1xYVa96Gctkshn7WJ0dnDuuoIR3TZSTRMHP6NImEfLKXzJejaOei5NuWyDCjMm0uhfLH1IVQ4dzB+3xjkoiao0etZeuUOvM2OYrnKJg/VtXH3KtIdkEzVYi27mB61AhUyr30ObkXPymLf4eCHcfJO+p6hTofyVQmNMi2bVntek1r35HMqII9fy7vsCsVzht5wGOb43XU8JftnI43X7aSebJvWVT7BldSJK3LT+tC5Y+uvQNrK/o+g/iL+c+jpilFQz+FN7uCnHqhjn+3UGdXCLRH8NNgUFT/sd33qQ2RAjLMyKGVb3XKtDolq1OmrfZj0+aq+7dkyOLdKmtVsYxw/c+raVgUTelQG0SldlQ0NV/R1I6KpObXfRz1tOdreA/J9J6J0EmETkgsP5Z69driYr23fItqghEV5KZo8tB8ndi/gzyO1v9iTJ8mLyNQKXvxnNqFyYtmybZjlSQp6khXqOO4uoXJI9l9E/pN7iH1aCQgz4JH5FnwsEy7WzWH/17+/udIhqV5i0Sbdkg9GvLK/d1Lcn/7H1lrShRqP1Tekdcp2ON4+hSSGZVj/XS5Fz0hx6bZtXdE7H+OfEMvUzS9a6NP0yLf6yNB2bYv/2ldqM3zZfXW3vwiak9VOG/EzhBqlMIdRuw15Q+oE/Yp0xVW5Y7y3cIb/97Bzq7Apt4IoN332TkaqN4IoN1DIH/9fXRob693BT2m1SXtCn6szp0fu2rDH+uuQMgp7dx3v/tYXTvP6fzpnLvCpLp9nI3//mCaMgIVstRslrWqWJaazbJUb5a1erMs1cWyVBfLWl1cG47tfphhrQ2mUncGUyn5iqbtDKZ2fhx157apYCqZ3jMROonQCYnJF4po2oqtem1RsVZvq1GKw6qTB3TQGcPy1bNd610/hz5tOwzvNjk2fS170Sw5ir6qu3tR1J1Td1e8YKcjFM3oFudK6zvYHrUXz1HqzNtlK1srf8Gpqh7/R5me3BaoEG1ds7yORgJyrXxNnoWPylq5XuHsvvKOuEaBgolMg2iLwj65Vr4u9+InZStfp0hqvnyDL5V/4HkynRlNPl1MvtebpixVRXXT8eyb58m6Y2XtiFvDokh2P4XyR9eNiIqmdU7oX3igmQVrZK1cL2vFD7JW/PjTn/IfZK0pOahTmjJ2Bjn7CWyszj32cf60z87QZ69RQlbnfgKlnUGRxZE8/WuaMgLle4RRm2Xd+XddMLVzZGPdYRabop7dgqmdI6V2Hz0V9eQmzS9Qkuk9E6GTCJ2Q2EzT1NLNVXptUbE+Xb1NoYipkV0yNHloRx3Tu51s1tb1wkqftl2WyqKdd8b7Svair+p+Qx1J66Jg58MV6lQbRMV7rY6m9qjhL1PK7L/KvWKqIuldVXXUXxXqNqEFK0Rb16yvo9GwnGvflWfBw7LtWKVIejd5R/xa/n5ntuq12dA4hneb3EuflXvZ87L4dyiUO1i+YVcq0OsXktV+0OeN1/d6I1gl25Zvf1oXqmShLKFqSVIkpYPCO6fjhfJGKpwz6JCuEfFnBCprg6Xy+sGSpeJHWb1b6+0bdecoktF9559ucmV3VE3Q2McIINdPwdFugZIs9uQJfhLdrmCqqljWmn0FU5sbDqZS8upP39u1vlRqR0VS8mV6clpFMJVM75kInUTohNajzBvUO8u26I3FxSquDCgnxaFJg/N02pB8tU9rHW8O6FNI2rlo7Lq6UVD2TbNlCVRIksJZBXVT8UIdD5PpyoxpaY3uUdOUc/WbSv3qLhn+cvmGXama0TdxlyW0uBZ5HTWjcvzwiTwLHpR962JFUvLkG/4r+QacJ9k9zftciDtr6Sq5Fz8h16o3pWhIwe7HyTfsCoU6jmuWN9UJ870+GpG1dKXsuy1Qbq3aKEm16w+2H7ZbEDVCpisrzgVjT4a/rP5Ipd3DJV9pvX0jKR12C5Z6KJLRXdGdIZPpqP+mN2F6FAfPNGv7Y48RUruHUpaakgaCKbuiKXn7HC0VSc2X6W4X92AqmXqU0EmETmh9IlFTX/+4Q68t2qzZP+yQxZCO7p2jycPyNapLZkIvPE6fokHRiGyl39WtB2Uvnisj7JMpQ+HcwQp1PlzBzuMVyh/T4m+AG3U7+ooflfb57+XY+LlC7YepasJ9iuQMaNG6gF1a9HXUNGUvmiXPggfl2PS1oq5s+YZeLt/giw5qmhUSiGnKXvSlPIuekGPDTJk2l/z9zpJv6OWKZPZs1qdK5O/1lpoS2TbPrwuibNuXy4iGJe38pcdud8mLZPRgZEtLM00Z/h07g6QfZC3/sd6UuF2/kNolktpxt2Cp/p+m/HyQyD2KZrSrv6qLZdm5xtRewVT1ZhnRUP3DLA5FU/N2jpbq2MBaUx1lurJb9PUhmXqU0EmETmjdisp9enPJZr29tEQV/rC6Zbk1eVhHnTygg9JcibcuB32KRokEZduySI5NtXfGs5cslBENybTYFeowQqHOtXfGC3UYLlkdzfrU++3RSEjuRY8rZd6/ZVrsqhl3m/yDLmxTC1si/mL1OmrbPF+eBQ/KuX66oo40+QddJO+wK2p/A4zWIxKQc/Xb8ix+QrbSlYq6c+Ubcol8A38p053dIk/Zqr7Xh3yyb10k2851oewl8+uCjqgre+fi5CMVyhutcPshks0V54JbIdOsvbPZrqlve45YClb9tKthUTStc8PBUnoXydY8o4lbVY+iZZlRGb7SBtaXKpaluqT245qSvYMpq3PniKk9gqndPjZdWQcdTCVTjxI6idAJySEQjuqz1dv02qJiLd1cJZfNohP7t9fkYR3Vt33i3MGFPsVBCflkL5lXOwqq6CvZti2tXSzW5lYof0zdwuThnEGHHADtq0dtJQuUNvM22UpXKtDzRFUf+WdFU/MP6bmAgxHr11HrtuXyLHhIznXvSzanfAPOl2/4VYqmdoxZDWg6w18m97Ln5Vr6rKzerbWLxQ+7SoE+p7b4el2t+nu9GZW1bJ3sJfNk27yg9u/y72sfsthrR9/uXBcqlD+aG0bsYkZlqSnZexpcee3fRvinfjANqyLpXXZOfas/HS6S3jkm68m16h5F7JlRGd7tOwOofdyZr6akbtRk3WFWZwOhVH7d+lLRtI4ynZkNBlPJ1KOETiJ0QvJZuaVKry3erGkrtioQjmpwfromD8vXz/rkymljfjJaPyNQIfumOXULk9t2rJIkRZ0ZCnUcVzsVr/MRimQVNPk3THv2qBGoVMqcv8m1bIqiqXmqPvIvCvY8oVmvB2iKeL2OWsvWybPwETlXvyHJkL/fZHmHX61oZo+Y14J9s5Z/L/fi/8q18hUZYb+CXY+Wd9hVCnU+MmZTxZLte73hK627Q569ZIFsWxfXrRMTSe+2c0reaIXyRyqS3Tfua8G0mGik9k32nneE2/ln97VzTItdkfSutUFSZo96I5aiqZ3ivoh7svUoEkA0IotvewOLnu/2cU2JDDNS7zDT5qoNoPYIplxDT1V5JD1OF9O8CJ1E6ITkVekP6f3vtuq1RcXaUOZTptuuiYPydPrQPHXKiM9ix/QpWoJRs1WOTbPrQihr5QZJUsTTXqFOh+9cmHy8ouldDniuuh41TTm+/0CpX94pS81W+YZcIu/YW2U6EmfkINqmeL+OWiqL5Fn0mFzfTZWiIQV6nyLvyOsUadcvbjW1eaYp++a5cn/7hBw/fiJZ7PL3PU2+oVfE5f8l3j3a4iIB2bYtk33zfNlL5sm+eb4svu2SpKgjXeG84TtDqNEKtR8mOVLiW29TRMOyVBXtY/HuDTKiwbpdTatzn+srRVM7JvTU86TvUSSmaEQW37ba9aWqi2WtKdljraliWWq2yDCjioy4VDsO+1O8K24WhE4idELyM01T8zaU69VFxfpiXalMUzqiZ7YmD+uow7pnyRLDRTLpU8SCpXJD7V3xdt4Zb9etkyPpXRXsVLseVLDT4TJT2u91bGamR5Ub1yr1i9/L+eMnCuUMVPUxf1O4w7AYXwXQsER5HTVqtsqz+Am5lj0vS6hGgR4nyDvyWoU7DI93aW1HJCTnuvflXvSE7NuWKOrKkm/QhfINvjiu074SpUdjxjRlqVy/c3Hy2gXKrTtWy5Ap07AqnDNA4Z3T8UJ5oxVNi/PU1EhQ1qoiWct/qFtnyVbxQ+16S1VF9aYImTZ3/UBpt1FL0ZS8Vjuqq831KFqPaFgW7zald+ym8srggfdvBQidROiEtmVLVUBvLtmst5aWqLQmqI4ZLk0emq9TBuYp09PyQ53pU8Scacpatma3O+PNqVskNpzdty6ECnUaJ9Oequy1L8gy46+STNWMuVm+oZdLlsRblB9tV6K9jhr+MrmXPCP3kqdkCVQo2PlIeUddp1DHw7jzVwsxApVyffeS3EuelrW6WOHMXvINvUL+vmdI9viMZN5dovVoPBiBCtlKFv4URG35tm5do0hqfu3C5DuDqHDOgOb/PhP2y1q5ocERS5aqIhlmtG7XqD117ylwu/72tE/Kr2N6FIkumXqU0EmETmibQpGoZq4t1WuLirWwqEIOq6Hj+uZq8rCOGpiXJqOFfsCgTxF30Yhs25fVhlCbvpK9+BsZYV/tHXPcubJ6tyjQdYKqj767UdPxgFhL1NdRI1gt1/IX5F70hKzerQrljZR35PUKditMyjet8WCp3CD3kqfl+u5/soRqFOx0uHzDrtz5OU6cESeJ2qNxFQ3LVrpCtp3rQtk3z5O1ulhS7WiiUIfhtQFU3kiF8kbKdGYc+Jwhn6yV9RfsrguWqotl6Ke3c1Fnxh5T4H4KmUx3uzb3NUqPItElU48SOonQCVi3vUavL96sD77boppgRP3ap2rysHyd0K+9XPbmnY9PnyLhRIKyb/lW9qJZsm1bLuvws1SWf0Kb+wEcrUfCv46G/XKteFmebx+TtapI4XYD5B15nQK9TkroNV4Sma1kgdyLnpTz+w8kw6JA71PkG3alwrmD411agxK+RxOEpapY9pL5dUGUbftyGWZEpgxFsvsolDdKofxRimT2ql3/peLH+ot412ypd76oK3uvEUt1wZIrK05XmZjoUSS6ZOpRQicROgG71ATDmrZiq15btFlrt9cozWnTLwZ20BlD89Ut29Msz0GfItHRo0h0raZHIyE517wlz4KHZStfp3BmT3lHXKNAn9PjfueqViEakeOHafIselL2kvmKOjPkH3i+fIMvrl2kOYG1mh5NNMEa2bcu2jklb55sJQtlCVbW2yXiaV839a3+n26NGx0FSfQoEl8y9SihkwidgD2ZpqnFmyr12uJifbZ6u8JRU2O6ZmrysI46slc72SwHPwKEPkWio0eR6Fpdj0Yjcnz/oTwLHpJ9+3JFUjvJO+LX8vc/W7LFf/2hhBOskXvFVLmXPCVr5QZF0rvKO/Ry+fud3WrugtbqejRRmVFZd6yWtWK9IuldFEnv1mp6INHRo0h0ydSjhE4idAL2Z3tNUO8sLdEbSzZrS1VA7VMdOm1IviYNzlNOqrPJ56NPkejoUSS6VtujpinH+um14VPJfEXdufIOu0L+QRfKdKTGu7q4s1QXy73kGbmWvyhLsFKhvFHyDrtCwR4ntrppia22R9Fm0KNIdMnUo4ROInQCGiMcNfXV96V6bdFmzVlfJqvF0ITeOZo8LF8jOmc0euFx+hSJjh5Fomv1PWqashfPkWfBw3Js/FxRZ4Z8gy+Rb+hlbXLdGdu2ZXIvelzOte9KZlSBnifJN+wKhfNGxru0g9bqexRJjx5FokumHiV0EqET0FQbynx6fXGx3lu+RZX+sHq082jy0I46aUB7pTr3f8tf+hSJjh5FokumHrVtWSTPgofk/OEjmTaPfIMukG/YlYqmdIh3aS3LjMqxfrrcix6XY9PXitpT5B9wrnxDLkuKu2YmU48iOdGjSHTJ1KOETiJ0Ag6WPxTRx6u26bVFxVqxpVoeu1U/H9Bek4d2VO/chtccoE+R6OhRJLpk7FFr6Up5Fj4i55q3JYtd/v5nyzv810kRwNQT8sm16nW5Fz8pW/k6RVLz5RtymfwDzk2qRaCTsUeRXOhRJLpk6lFCJxE6Ac1heUmVXltUrE9WbVMgHNXwTumaPKyjJhTkyG611O1HnyLR0aNIdMnco5aKH+VZ+KhcK1+tnWrW5zR5R16rSFbveJd2SAzvNrmXPiv3simy+MsUyh0i37ArFeh1clLeyS+ZexTJgR5FokumHiV0EqET0JzKfSG9t3yLXl9crKJyv7I9dk0anKfThuQrL91FnyLh0aNIdG2hRy3VxXIvekLu5S9I4YCCvX4u78jrFM4dHO/SmsRaukruxU/ItepNKRpSsPtx8g2/UqH8sVIj10JsjdpCj6J1o0eR6JKpRwmdROgEtISoaWru+jK9tmizZn1fKkka1z1LeZkeBYPhuv0afKHZ4+WnoX0aeoXac1NjX8b23K2xz7fnnrGuU5J65abokjFd5LK3rjsbJTJeS5Ho2lKPGr5SuRc/JffSZ2QJVinY9RjVjLxe4Y5j4l3avpmm7EVfyrPocTk2fC7T5pK/31nyDb1ckcye8a4uJtpSj6J1okeR6JKpRwmdROgEtLTNlX69uWSzPlu9XeGoqWi0/svLnr/sbfB3vw38RnjPLQ390rihczXmTnsNH9fQfgcuvjHn2us8+3i+3UVNU+u2e9U506X/d3wfjeySuf8D0Ci8liLRtcUeNQKVci99Tu7FT8ri36Fgx7HyjrxeoS5HJc6IoUhAztVvybPoCdl2rFLE017+wRfLN+iCNndXvrbYo2hd6FEkumTqUUInEToBsUSfNq8FG8v1l49Xq6jcr9OH5Ou6o3oc8A6C2D96FImuTfdoyCf3dy/K/e1/ZK0pUaj9UHlHXqtgjxMkw3Lg41uA4S+Te9nzci19VlbvVoXb9ZN36JUK9DlVsjrjUlO8tekeRatAjyLRJVOPEjqJ0AmIJfq0+flDEf3nq/X638Ii5aQ4dMdxfXREz+x4l9Vq0aNIdPSopEhArlWvy7PgEVkr1yuc1UfekdcoUHCqZIlN8G4t/17uxf+Va+UrMsJ+BbseI++wKxXqfGTijL6KE3oUiY4eRaJLph4ldBKhExBL9GnLWba5Un/6aLV+KPXq5/3b66YJvZTpTr67IrU0ehSJjh7dTTQs59p35VnwcO2UtvRu8o74tfz9zmyZUUamKXvxHLkXPSHHj59KFrv8fU+Xb+gVirTr2/zP10rRo0h09CgSXTL1KKGTCJ2AWKJPW1YwHNXTczfo2W82KsNl028Le+tnfXIatY4VatGjSHT0aAPMqBw/fCLPggdl37pYkZQO8g37lXwDz5fsnkM/fyQk57r35F70pOzblijqypZv0IXyDb5Ipif30M+fZOhRJDp6FIkumXqU0EmETkAs0aexsXprtf7y8Wqt2FKtY3q3020/662c1La5tkhT0aNIdPTofpim7EWz5FnwoBybvlbUlSXf0MvlG3yxTGdGk09nBCrkWv6S3EuflrV6s8KZveQbdoX8fc+QbO4WuIDkQI8i0dGjSHTJ1KOETiJ0AmKJPo2dcNTUS/OL9PjsH+W0WfWbY3rqFwM7MOrpAOhRJDp6tHFsm+fLs+AhOdd/pqg9Vf7BF8k79AqZnpwDHmup3CD34qfkWjFVllCNgp0Ol2/YVQp2mxC3BctbE3oUiY4eRaJLph4ldBKhExBL9Gnsrd/h1V8+Xq1Fmyo1rnuW7jiuQPnprniXlbDoUSQ6erRprNuW14ZP696XrA75Bpwn3/BfK5rWca99bSUL5Fn0hBzffygZFgV6T5Rv2JUK5w6KQ+WtFz2KREePItElU48SOonQCYgl+jQ+oqap1xZt1sNffi9Dhq45socmD8uXhVFPe6FHkejo0YNjLVsnz8JH5Fz9hiRD/r5nyDviGkXTu8rxwzR5Fj0he8kCRZ0Z8g88X77Blyiamh/vslslehSJjh5FokumHiV0EqETEEv0aXxtrvTr7o/XaM76Mg3vlK7fH99H3bKbYZHdJEKPItHRo4fGUlkkz6LH5PpuqhQNKerJlbVmS+2d74ZeJn+/syVHSrzLbNXoUSQ6ehSJLpl6lNBJhE5ALNGn8Weapt5bvkX/nvm9gpGorjysm84b1Vk2C6OeJHoUiY8ebR5GzVZ5Fj8pa9ka+fudpWCPEySLNd5lJQV6FImOHkWiS6Ye3VfoZItxHQCAGDEMQ6cMytNh3bP0t8/W6qEvf9Cnq7fp/07oo4Lc1HiXBwAxYaa0V83hv493GQAAtEnclgMAklxOqlP3TRyge37RX1uqArrghW/1+Fc/KhiOxrs0AAAAAEmM0AkA2gDDMHRs31y9fPEoHd83V/+ds0EXvLBQyzdXxrs0AAAAAEmK0AkA2pBMt11/Oqmf/n3aQFUHwrr0f4t0/8zv5Q9F4l0aAAAAgCRD6AQAbdD4nu308sWjNGlwvl5cUKTzpizQgo3l8S4LAAAAQBKJeei0efNmXX/99Ro5cqRGjBiha6+9VsXFxY0+ft26dbr++us1duxYDRkyRCeccIKee+65FqwYAJJTqtOm3x1XoMfOHKKoKf3qlSW699M1qg6E410aAAAAgCQQ07vX+Xw+XXTRRXI4HPrb3/4mSXrggQd04YUX6p133pHH49nv8UuXLtVFF12kMWPG6K9//atSU1O1fv16eb3JcYtBAIiHUV0zNfWikXrsqx81deEmzfp+h353XIGO6JEd79IAAAAAtGIxDZ1eeeUVbdy4UdOmTVO3bt0kSX379tUJJ5ygl19+WZdccsk+j41Go7rtttt02GGH6ZFHHqnbPm7cuBavGwCSnctu1W+O6aXj+ubqTx+t1o1vLNNJA9rrN8f0UqbbHu/yAAAAALRCMZ1eN336dA0dOrQucJKkLl26aMSIEfrss8/2e+zcuXO1bt26/QZTAIBDMyg/XS/8coQuG9dVH63cprOfna/PVm+Ld1kAAAAAWqGYhk5r165Vnz599treu3dvrV27dr/HLliwQJIUCAR01llnaeDAgTrssMP0l7/8RX6/v0XqBYC2yGGz6FdHdNeU84erfapTt7+7Qre+85221wTjXRoAAACAViSmoVNFRYXS09P32p6RkaHKysr9Hrt161ZJ0m9+8xsdccQRevrpp3X55Zfr1Vdf1c0339wi9QJAW9anfaqeOX+4rj2yh776vlRnPztf7y0vkWma8S4NAAAAQCsQ0zWdDsWuNzkTJ07UDTfcIEkaO3asIpGI/vnPf2rdunXq1avXfs9htRrKzNz/YuWtgdVqSYrrQHKjT5PHDcf31SnDO+mOt5bprmmrNX3tDv3l1IHqmOmOd2mHhB5FoqNHkejoUSQ6ehSJri30aExDp/T09AZHNO1rBNTuMjMzJUmHH354ve3jx4/XP//5T3333XcHDJ0iEVPl5a3/TneZmZ6kuA4kN/o0uWTbLXp08mC9tqhYD3/5g37+4Cxde1QPnTE0XxbDiHd5B4UeRaKjR5Ho6FEkOnoUiS6ZejQ3N63B7TGdXte7d2+tWbNmr+3r1q1T7969D3js/lgsMb0UAGhzLIahs4Z30tSLRmlwxzTd99la/eqVJdpQ5ot3aQAAAAASUEyTmsLCQi1evFgbN26s21ZUVKSFCxeqsLBwv8ceddRRcjgcmjVrVr3tX375pSRp0KBBzV8wAGAvHTNceuiMwfq/E/po7bYanTdlgZ6ft1HhKGs9AQAAAPhJTEOns846S506ddLVV1+tTz/9VJ999pmuvvpq5eXl6eyzz67bb9OmTRowYIAefvjhum1ZWVm66qqrNHXqVP3rX//S7Nmz9cQTT+iRRx7Raaedpm7dusXyUgCgTTMMQxMH5emVi0fqsO5ZevCLH3TpS99q7baaeJcGAAAAIEHEdE0nj8ej5557Tvfcc49uvfVWmaapww47THfccYdSUlLq9jNNU5FIZK87JF1zzTVKSUnRSy+9pKefflq5ubm67LLLdPXVV8fyMgAAO+WkOnXfxAH6dPV2/f2ztbrghYW6ZGwXXTK2q+xWpj0DAAAAbZlhtqF7X4dCkaRYpCuZFhtD8qJP255yb0j/nLlO01ZsVa8cj/7vhL4amNfwgoKJgB5FoqNHkejoUSQ6ehSJLpl6NCEWEgcAJK9Mj11/Pqmf/n3aQFX5w7r0pW/1wOffyx+KxLs0AAAAAHFA6AQAaFbje7bTyxeP0qmD8/TC/CKdN2WBFmwsj3dZAAAAAGKM0AkA0OxSnTbdcVwfPXbmEEVN6VevLNG9n65RdSAc79IAAAAAxAihEwCgxYzqmqn/XTRS543spDcWb9Y5zy3Q7B92xLssAAAAADFA6AQAaFFuu1W/OaaXnjp3mDx2q254Y5n++OFKVfhC8S4NAAAAQAsidAIAxMTgjul64YIRunRcV01buU1nPTtf01dvi3dZAAAAAFoIoRMAIGYcNot+fUR3TTl/uNqnOnXbuyt02zvfaXtNMN6lAQAAAGhmhE4AgJjr0z5Vz5w/XNeM765Z35fq7Gfn6/3lW2SaZrxLAwAAANBMCJ0AAHFhsxi6eGxXvXjhSPXI9uiP01bphjeWqaTSH+/SAAAAADQDQicAQFx1z/boiXOG6pYJvbRoU4XOfnaBXltUrCijngAAAIBWjdAJABB3FsPQ2SM6aepFozQoP01/+2ytfvXKEm0o88W7NAAAAAAHidAJAJAwOma49PDkwfq/4/tozbZqnTdlgZ6ft1HhKKOeAAAAgNaG0AkAkFAMw9DEwXl65eJRGtctSw9+8YMu+98ird1eE+/SAAAAADSBLd4FAADQkNxUp/5+6gB9smqb/jF9nS54fqEuHdtVF4/tIruV35kAQKyEo6a2VgVUXOFXcaVfxRV+lVQF1DUnRQNzUjS4Y7o8Dmu8ywQAJCBCJwBAwjIMQ8f3a68xXbP0jxlr9cTX6zV9zXb9vxP6aGBeWrzLA4CkEDVNbasOavNuodKugGlzhV9bqgKK7DbL2ZCUk+rQtBVbFYmasloM9e+QquGdMjSiS4aGdsxQmou3GQAAyTDNtnN7oFAoovJyb7zLOGSZmZ6kuA4kN/oULeHLdaW699M12l4T1PkjO+vKw7vJZT+4367To0h09Ciai2ma2uENqbjCr82Vfm3aGSpt3m3UUihS/y1BTopD+ekudcxwqmOGSx3TXbV/Z7jUIc0pu9Uim9uhL1eUaOHGCn1bVKHlJVUKR00Zkvq0T9Xwzhka3jlDIzplKNNjj8/Fo03jdRSJLpl6NDe34V8IEzq1QsnUmEhe9ClaSnUgrAc+/15vLS1Rl0yX/t8JfTSic2aTz0OPNp4/FNG26qC2VAW0tTqgLVX1/2ytCsgfjirTbVeW264sT+2fTLdd2R5HvW1ZHruy3A657RYZhhHvS0to9CgayzRNVfjDdSFS/ZFKARVX+hUIR+sdk+m27wyTnHVhUv7OYCkvzdmoQH/PHvWHIlq2uUrfFlVoYVG5lm6uqnveHu08GtE5QyN2BlG5qc7m/SQADeB1FIkumXqU0EmETkAs0adoafM2lOkvH69RcYVfk4fm69qjeijF0fjpHPRorWA4Wi9I2rp7mLQzaCr3hfY6LsNlU4c0pzqkOdU+zSm33apyX0hl3pDKfCGVeYPa4Q3t9UZ3F6fNUj+MctuVtTOgyvTYlb37No9d7oMc0daa0aPYXXUg3MBIpUDdtppgpN7+aU6b8ncLlHaNVMrf+XFzrMF0oB4NhqNasaVKC4sqtLCoQks2Vcobqq2zS6ardhRU50wN75yhjhmuQ64H2BOvo0h0ydSjhE4idAJiiT5FLPhCET0260dNXbhJ7dOcuuO4Ah3eI7tRx7aFHg1FfgqUtlYFGwiVAtrhbThQar8zUOqQ5lT71F3hkkMd0lxqn+po9LRGXyhSL4gq89YPpsp2BVU7t+0rpHLZLPVGT2V67Mp21x89tXtYdbDTLhNJW+hR/MQXiuwxUilQt6ZScaVflf5wvf3ddste0952jVTqmO6KyZpKTe3RcNTUqq3V+raodjreok0VddeVl+bcGULVjoTqmuVmNCQOGa+jSHTJ1KOETiJ0AmKJPkUsLSmu1F8+Wq0fdnh18sAO+s3RPZXh3v/6Ia29R8ORqLbVBLWlMrDPaW8NBUppTttuAdKeoVLt3/EaVWSapnyhqMp8u4VTdQFVqP72naFVMNLwjzFuu6XeSKnasGqP0GpnQJWZoCFVa+9R1BcMR2tDpZ1B0qaKQF3ItLnSv9fXq9NmUX66s16QtGukUqd0lzLctriHMofao1HT1LrtNbVrQm2qDaJ2fR7apTg0vNPONaG6ZKhnO48shFBoIl5HkeiSqUcJnUToBMQSfYpYC4ajemruBj33zUZluGy67We9Vdgnd5/7J3KPhqOmtu8RIu2a6rZrtFJpTVB7fgNPdVr3CpA6pDnVYbdtyXRbc9M05d01kmrP0VS+PQKrnaOq9lwseReP3VoXRP0UUNUGVtl7hFZZHoecNkuLX18i9yj2Fo5EtaU6sNt6Sjunvu0cqbStOlhvf5vFUF66Ux3TdwZJ9UYqOZWd4kj4kKW5e9Q0Ta3f4dPCTRVauLFc3xZVaOvOz1uGy/bTwuSdM1SQmyqrJbE/P4g/XkeR6JKpRwmdROgExBJ9inhZtbVaf/5otVZtrdbP+uTot4W91S7Fsdd+8erRcNRUaU1wrzWUdh+pVFoTVHSP784eu/WnEGnPkUo7RyulOrlF+f6YpqmaYKTBMGrP0KrcF9IOb0jhPf8jdkpxWPc5eipz57S/7J1T/rLcdjkOIqTidTSxRKKmtlUHflqce2eYtGuk0paqQL2vW4shdUhraKRSbdCUm+ps9aFJS/eoaZraVOHfuTB57UioTRV+SbVfg8N2joQa3jlDAzqkymZt+TAYrQuvo0h0ydSjhE4idAJiiT5FPIUjUb0wv0hPfr1ebrtVN03opZ/3b19vKkpL9GhkZ6C051S32mApqC1VfpXWBLXnYBu33bLPqW67/hAoxd6ukGqHd18jqPbeFtlPSLX76KmfFk/fO6DK8thlt1p4HY0x06z9+i3ebXHuTbuNVCqpDOwVQuamOupGKu15J7gOqc6kD0Hi0aNbqgJ1a0ItLCrXjzt8kmrXfRvcMb1uTahB+ekxGZGIxMbrKBJdMvUooZMInYBYok+RCH4s9erPH6/WkuJKHd4jS787tkB56bV3SGpqj0ZNUzt2jVDaNdWtsv4Ipe3Vgb0CJafNUm9E0p5T3moDJWvc12bBoTNNU1WBcL2RUg0toL7rsXLv3gHkLqlOq5w2qwzVjpixWgxZLYYshiGrYchi0W4fG7Iatf/e+2Oj7niLsfN4y977Wi0/nctiaB/n3eNc+3jen57rp31/Or/qXYPV2Ne59qxbDV+/pf7nYH9fR6ZpqsIX1qZdi3PvMVJpc2Vgr4Xssz32upFK+ekudcpw1n2cl+5q86FGInyv3+EN/v/27jw66vre//hrMtmXmckGITskEAQDAQkKpUCjotcFi1KUIwro6b1IBWrVHi72VusGel3qvZbrduktaLVoa11L+0MrqFQJoCIVigkQskAw65B9lu/vj4SBmCAUh3wnk+fjnJyT853vfM878X0Gv698Pu/vCSFUo0q+apYhKcxq0bkpcb4n5OWn2oJqezFOTyD0KPBNgqlHCZ1E6AT0JfoUgcLjNfTyp1X61fv7ZQ2xaMnUoZo1ZogS4mN8Peo1DNW1uI5vdfvaE96OzVT6+iqWY4HSoNjwHqHSsRVLtkjzh/0iMHkNQ0fb3N1WSjW0dHQGUq0uyRqitja3PIYhr2HI4zXkNXSS7w15DMl77Htv52snnusxjOOvn3Cuu5dreQ11+76/sEgnDcA6PF61urqHSrbI0OMrlXxPgTseLJk1VL+/CMR/6xtbXfqsyukbTv6P6qPyGJ2h5TmDYzUurXMw+dhUe5884Q/mCsQeBU4UTD1K6CRCJ6Av0acINJWNrXrwL19q68EGjU21KTMpRhW1zapu6tBXTe09BkyHWy2+EOlkw7kD4elRCF6B8jlqGP9E2GUY8nrlC8qOfe8795TvP8m1vva651hNvu87z3WfeO7Xgrcwa4hSbBHdBnazbfXbCZQe/SbNHW7tPBZCVTTq74ePyu01ZJE0YlDs8eHkaXY5or/5qafof/pDj2JgC6YeJXQSoRPQl+hTBCLDMPTGrmo9veWAwsOsSo4J7xYqDT5hOLcjKoxACabicxSBrj/2aJvLo12HjvpmQn1+6KhvW+XQxGiN73o63rh0u5JjI0yuFt9Wf+xRDCzB1KOETiJ0AvoSfYpAR48i0NGjCHTB0KMdbq92Vx/Vjq6ZUDsrnWpxeSRJGY5I30yocel2pdojTa4W/6xg6FEEt2Dq0ZOFTqwpBgAAADAghYeGaGyaXWPT7Fp4vuT2Gtp7pEk7uoaTv1dSq9d3VUuSUuIiukKozpVQmfFRrIgFgFMgdAIAAAAASaEhFo1KidOolDjNm5Aur2GotKbZN5j847J6/Wn3EUlSYky4xqV1zYTKsGtYYrRCCKEAoBtCJwAAAADoRYjFouHJsRqeHKtrx6fJMAyV1bVqR2WjdpQ36JOKRm3c+5UkyR4Zenwwebpdw5NjZQ0hhAIwsBE6AQAAAMBpsFgsyk6MVnZitK4eM0SGYaiysa1rMPnxLXmSFBNu1dg0m28m1KjBsQq1hpj8EwBA3yJ0AgAAAIAzYLFYlO6IUrojSleemyJJqj7ark+6AqgdFQ3asn+/JCkyNET5qTbfTKhzh9gUEUoIBSC4EToBAAAAgJ8MjovQpecM0qXnDJIk1bV0nBBCNeqZLWUyJIVZLTo3Jc73hLz8VJuiw63mFg8AfkboBAAAAABnSUJ0uC4ckawLRyRLkhpbXfqsyukbTv6breVa83G5QkMsmpDp0PTcRE3NSVRybITJlQPAt0foBAAAAAB9xB4Vpqk5ncGSJDV3uLWzyqmPDzRoU2mNVm0s0aqNJRqVEucLoIYlRsvCk/EA9EMWwzAMs4voKy6XRw0NLWaX8a05HNFB8XMguNGnCHT0KAIdPYpAR4/6n2EY2lfbos2ltXqvpFZfHD4qScpwRGpqTpKm5yYqP9XGU/FOEz2KQBdMPZqcHNfrcVY6AQAAAEAAsFgsykmKUU5SjBaen6kjR9u1ubRWm0pr9btPKvXC9grFR4XpuzkJmpqTpPOzHIoMYw4UgMBF6AQAAAAAAWhQXIRmF6RqdkGqmtrd2rK/TptLa/XO3hq9vqtakaEhuiA7XtNyEzVlWKIcUWFmlwwA3RA6AQAAAECAi40I1YyRgzRj5CC5PF7tKG/UeyU1vq14IRapIM2uaV1zoNIdUWaXDADMdOqPgmnfJ4IXfYpAR48i0NGjCHT0aGAwDEO7q5u0qbRWm0pqVFrT+d8kNylG03ITNS03USMHxQ7IQeT0KAJdMPUoM50AAAAAIMhYLBaNSonTqJQ43fKdbFU0tGpTSeccqF9/fFD/+9FBDYoN17TcJE3LTdR56XaFWkPMLhvAAEHoBAAAAABBIt0RpesnpOv6CelqaHHp/X212lRSq9d3HdbLn1YpNsKq7wxN0LTcJE3KjldsBLeEAM4ePmEAAAAAIAg5osN05bkpuvLcFLW5PPq4rF6bSmr1/r46/XnPVwqzWjQhw+GbA5UcG2F2yQCCDKETAAAAAAS5yDBr1xa7JHm8hnZWObu24dVo1cYSrdpYotEpcb45UEMTogfkHCgA/sUg8X4omIaNIXjRpwh09CgCHT2KQEePBgfDMLSvtsU3B+qLw0clSZnxUZqak6jpuYk6d4hN1pD+F0DRowh0wdSjDBIHAAAAAHRjsViUkxSjnKQY3XRBpo4cbdfm0s45UC/tqNTz2yoUHxWmqTmJmpqbqImZDkWGWc0uG0A/QegEAAAAAJAkDYqL0OyCVM0uSFVTu1tb9tdpU0mtNu79Sq/tOqzI0BBdkB2v6blJ+s6wBDmiwswuGX7W4faqvKFVZXUtOlDXqgN1LSqrb1Vtc4fOHRKnwkyHCjPjleGIZAsmTonQCQAAAADQQ2xEqGaMHKQZIwfJ5fFqe3mDNpXUanNprd4rqZXVIhWk2zU1p3MOVJo9yuyScZoMw1BDq+t4qFTXqrL6Fh2oa1FVY5u8JwzhGRQbruyEaKXZbfqsslHv7K2RJA2Oi9DETIcKsxwqzHAoiUH06AUznfqhYNr3ieBFnyLQ0aMIdPQoAh09OnB5DUO7q5u0uaRGm0prVVrT2QfDk2N8c6DyBsWavgqGHpXcHq8qGts6Q6W6zlDpQF2rDta3qLHN7TsvIjREmfFRyoqPVlZClLITopWdEKXM+GhFhx/fTmkYhg7Wt6r4YIO2HmzQ9vIGObuuMzQxujOEyozXeRl2xUawxuVUgqlHTzbTidCpHwqmxkTwok8R6OhRBDp6FIGOHsUxFQ2tnYPIS2r0WZVTXqNzFcy0rjlQ56XbFWoN6fO6BlKPOttcKutatXQsVDpQ16LyhjZ5Tli2lBgTrqz4zlDpWLiUlRCllLjIMxoW7/Ea2vtVk4rLGrT1YL0+rXSq3e2V1SKdkxLnC6HyU22KCO37Hgh0wdSjARM6HTp0SCtXrtSHH34owzA0efJkrVixQqmpqf/UdZ555hk9+uijGj9+vF588cXTeg+hE9B36FMEOnoUgY4eRaCjR9Gb+pYOvb+vTptLavVRWb3a3V7FRYRq8tDOOVCThsYrJrxvVsAEW496vIYOOdu6bYU70LWCqa7F5TsvNMSiDEdUt1ApOyFaWfHRios8u7/7DrdXnx9yauvBBhWXNeiLw055jM6VVGNTbSrMdGhiVrzyBsX2yyci+lsw9WhAhE6tra266qqrFB4erh//+MeSpCeeeEKtra16/fXXFR0dfVrXKS8v18yZMxUVFaWsrCxCJyAA0acIdPQoAh09ikBHj+JU2lwefVxWr/dKavV+aa0a29wKs1pUmOnoXAWVk3hW5wD11x5t7nDrYH1rt1CprGv1Uofn+O27PTL0ayuWopWdEK1Ue6RCAyTQaWp3a0dFo4oPNqj4YL1vK2ZcRKjOy7CrMDNeE7McyoqPMn07phn6a4/25mShU59usly/fr3Ky8u1YcMGZWVlSZLy8vJ0ySWX6He/+50WLlx4Wte55557dOWVV2r//v1yu92nfgMAAAAAoE9Fhlk1LTdJ03KT5PYa2lnV2LUNr1Yr95do5cYSnTskTtNyEjUtN0nZCQMneDAMQ9VH231b4srqjw30btGRpg7feSEWKc0eqayEaF2QHa/shM65S9kJ0XJEB/6TA2MjQjW1K2CUpJrmDm3rCqC2ljXovZJaSZ3Dyo89Fa8w06FBcQwlDxZ9utJp/vz5am9v10svvdTt+Lx58yRJzz///Cmv8cYbb+iBBx7Qhg0btGTJErndblY6AQGIPkWgo0cR6OhRBDp6FGfKMAyV1rZoc0mt3iup0e7qJklSZnxUVwCVqHOH2L719qtA6NE2l0cH61u7hUrHZi61ury+82LCrb7h3Vm+VUtRSrdHKTxIZyEZhqGKhjYVH6zvWgnV4Btunp0Q5QugzsuwyxYZ+AHbmQiEHvWXgFjpVFJSogsvvLDH8dzcXG3YsOGU729sbNTKlSt15513yuFwnIUKAQAAAABnk8ViUW5SjHKTYnTTBZmqPtquzaW12lxSq9/uqNS6bRVKiA7Td4d1BlCFmQ5FhllPfWGTGIah2hZXt6fDlXUFTIec7TpxlccQW4SyEqI1Ln3ICauWopQYEz5gVnkdY7FYlBEfpYz4KF09NlVew9CXXzVra1lnCPXGrsN6+dMqhVikkYPjulZCOTQ21RbQ/YDu+jR0amxslM1m63HcbrfL6XSe8v0PP/ywsrOzdfXVV5+N8gAAAAAAfWxwXIR+UJCqHxSkqqndrS376/ReSa027v1Kr+06rMjQEE0amqBpOYn6zrAEOaLMWfXi8nhV3tDaLVQ60LU9rrnD4zsvMjREWQnRyk+16YrRx2cuZcZHEZZ8gxCLRXmDYpU3KFY3FGbI5fFq16GjvhDq+W0V+s3WcoVbLRqTZu96Mp5DIwfHBcwMK/TUp6HTt7Ft2za99tpr+sMf/nDGCbDVapHDcXrDygOZ1RoSFD8Hght9ikBHjyLQ0aMIdPQozgaHpDmDbZpzQbba3V5t3V+rjXuO6J3dR/TXL2tkDbFoQla8LjpnkC4aOUjp8SfvwTPt0brmDu2vada+mmaVftWkfTXN2l/TrPL6Vnm8x9ctDbZFaFhSjL6fmaZhyTEaltT5lWKLVAghiF98LzFW3zt3iKTOoeTbyuq1pbRGfyut0+oPDkiS4iJDdX52giblJGrSsETlJsf0m1VjA+FztE9DJ5vN1uuKppOtgDrRz3/+c11zzTVKSUnxXcPtdsvr9crpdCoyMlLh4eHfeA2PxwiK/ZLBtO8TwYs+RaCjRxHo6FEEOnoUfSE/OUb5yUO1bEq2dlc3aVNJjTaV1OqBt/fogbf3aHhyjKblJGp6bpJGDOoeNnxTj7q9hqoa23xzlo4N9D5Q1+KbKyRJYVaLMuOjlJMYraLhScqKP75qKTait9tpQ05nq79/DehSMChGBYNitHhSlupaOoeSb+2aB7VxzxFJUlJMuG8rXmGmQym2SJOrPrlg+hw92UynPh0kfuONN8rlcvUY/H3DDTfIMIxvHCSel5f3jdf+93//dy1YsOAbz2GQONB36FMEOnoUgY4eRaCjR2Gm8vpWbSqt1eaSGn1W5ZTXkFLiIjQtt/NJaePT7UpKjFVFtbMrWDoeKpXVtaq8oVXuE1YtJUSHdQ7w7gqVshM6t8UNsUV+64Hm6BuVja0qLmvwDSWvb3VJ6hxQX5jp0MRMh87LcMhu0vbM3gTT52hADBIvKirSww8/rPLycmVkZEiSKioqtGPHDt1+++3f+N61a9f2OPbggw/K6/XqZz/7mbKyss5KzQAAAACAwJIRH6V5E9I1b0K66ls69P6+Om0qqdUfPz+s331SpbiIUEWGWfVVU7vvPdYQi9LtkcpOiNZ3cxJ9s5ay4qMCKojAmUmzRyltTJS+P2aIvIah0ppmXwD1py+O6PefHZJFUt6gWE3M6lwFVZBmZ87WWdanK51aWlp01VVXKTIyUsuWLZPFYtETTzyh5uZmvf7664qJiZEkVVZW6uKLL9bixYt16623nvR6N9xwg9xud4+VUyfDSieg79CnCHT0KAIdPYpAR48iELW6PPr4QL0+2Fcna5hVqbHhnU+JS4hWuj1SodYQs0uECdwer/5++KhvK97nVU65vYbCrBblD7F1hVDxGpXSt0PJg+lzNCBWOkVHR+s3v/mNVq5cqZ/+9KcyDEOTJk3SihUrfIGT1PnISY/Hoz7MwwAAAAAA/VxUmFXThydp+vCkoLqhx7cTag3R2DS7xqbZ9cNJWWp1efRJRaNvJdTTH5bpqQ/LFBNu1bh0uyZmxasw06GcxOh+M5Q8UPXpSiezsdIJ6Dv0KQIdPYpAR48i0NGjCHT0KE5XQ4tL28qPzYOqV3lDm6TOWV+d86DiVZjl0BA/DyUPph4NiJVOAAAAAAAAgcQRHaaL8pJ1UV6yJOmQs03FZQ3aerBexQcb9Oc9X0mS0h2RvhBqQoZDjmhmgZ0KoRMAAAAAAECXIbZIzcxP0cz8FBmGoX21LSo+2KCtZfX6y56v9OrOw5KkEckxKuxaBTUuza7ocIaSfx2hEwAAAAAAQC8sFotykmKUkxSj68anye01tPvw0c4Q6mC91n9aqRe2Vyg0xKL8IXEqzIzXxCyHRqfEMbhehE4AAAAAAACnJTTEovxUm/JTbbrpgky1uTz6rNLZ9WS8ej37tzI987cyRYd1DiUvzHSoMNOh3OQYhQzAoeSETgAAAAAAAGcgMsyq87PjdX52vKShamx1aXtFo4rL6rX1YIM+3F8nSYqPCtOErgCqMNOhdEeUuYX3EUInAAAAAAAAP7BHhaloeJKKhidJkqqPtqu4ayB58cEG/b9/dA4lT7VF6M5LRmpKpt3Mcs86QicAAAAAAICzYHBchK4YnaIrRncOJT9Q16rig/XaXt4oj9cwu7yzjtAJAAAAAADgLLNYLBqaGK2hidGaMy5NDke0GhpazC7rrGKUOgAAAAAAAPyO0AkAAAAAAAB+R+gEAAAAAAAAvyN0AgAAAAAAgN8ROgEAAAAAAMDvCJ0AAAAAAADgd4ROAAAAAAAA8DtCJwAAAAAAAPgdoRMAAAAAAAD8jtAJAAAAAAAAfkfoBAAAAAAAAL8jdAIAAAAAAIDfEToBAAAAAADA7widAAAAAAAA4HeETgAAAAAAAPA7QicAAAAAAAD4HaETAAAAAAAA/I7QCQAAAAAAAH5nMQzDMLsIAAAAAAAABBdWOgEAAAAAAMDvCJ0AAAAAAADgd4ROAAAAAAAA8DtCJwAAAAAAAPgdoRMAAAAAAAD8jtAJAAAAAAAAfkfo1E8cOnRIS5cu1Xnnnafx48fr1ltvVVVVldllAT4bNmzQkiVL9L3vfU9jxozRJZdcokcffVRNTU1mlwb06uabb1ZeXp4ef/xxs0sButm0aZOuv/56jRs3TuPHj9fVV1+tv/3tb2aXBUiStm/frptuukmTJk3SuHHjNGvWLL3yyitml4UB6PDhw7rvvvt07bXXauzYscrLy1NFRUWP89rb2/XQQw9pypQpGjNmjK699loVFxebUDEGotPp088//1z/8R//oUsvvVRjx47V9OnTdfvtt6u8vNykqv2L0KkfaG1t1fz587Vv3z499NBDevjhh1VWVqYbb7xRLS0tZpcHSJLWrFmjkJAQ3XbbbXruuec0d+5cvfjii7rpppvk9XrNLg/o5s0339Q//vEPs8sAenjppZe0ePFijR49Wk8++aSeeOIJXXrppWprazO7NEB79uzRwoUL5XK5dN999+nJJ59Ufn6+7rrrLv32t781uzwMMGVlZfrTn/4km82mCRMmnPS8FStW6OWXX9bSpUv19NNPKzk5WTfffLN2797dh9VioDqdPn377bf15Zdf6oYbbtCzzz6r22+/XV988YVmz56tQ4cO9XHFZ4GBgPd///d/xsiRI40DBw74jh08eNA455xzjDVr1phYGXBcbW1tj2OvvvqqMWLECGPLli0mVAT0rqGhwZg8ebLxxhtvGCNGjDAee+wxs0sCDMMwjPLyciM/P9/49a9/bXYpQK8effRRY/To0UZTU1O343PmzDHmzJljUlUYqDwej+/79evXGyNGjDDKy8u7nbN7925jxIgRxiuvvOI75nK5jBkzZhj/9m//1me1YuA6nT7t7T6qoqLCyMvLM375y1+e9RrPNlY69QPvvvuuxo4dq6ysLN+xjIwMjR8/Xu+8846JlQHHJSQk9DiWn58vSaquru7rcoCTeuSRRzR8+HBdccUVZpcCdPP73/9eISEhmjt3rtmlAL1yuVwKDQ1VZGRkt+OxsbGsakafCwk59a3sO++8o7CwMF122WW+Y6Ghobr88sv1wQcfqKOj42yWCJxWn/Z2H5WWlqaEhISguI8idOoHSkpKNGLEiB7Hc3NzVVJSYkJFwOnZunWrJCknJ8fkSoBO27Zt0x//+Ef9/Oc/N7sUoIft27dr2LBheuutt3TRRRdp1KhRuvjii/XCCy+YXRogSZo1a5Yk6f7771d1dbWcTqfWr1+vjz76SAsWLDC3OKAXJSUlSktLU1RUVLfjubm5crlcKisrM6ky4JuVlpaqtrY2KO6jQs0uAKfW2Ngom83W47jdbpfT6TShIuDUqqur9V//9V+aPHmyb8UTYKaOjg7dfffduummmzRs2DCzywF6OHLkiI4cOaKHH35YP/nJT5SRkaENGzbo3nvvldvt1vz5880uEQPciBEjtHbtWt16662+GU5hYWG65557dPnll5tcHdBTY2Oj7HZ7j+MOh8P3OhBo3G637r77biUkJGj27Nlml/OtEToB8Lvm5mbdcsstslqtWrlypdnlAJKk5557Tm1tbbrlllvMLgXolWEYam5u1qpVqzRjxgxJ0qRJk1RZWalnnnlGN954oywWi8lVYiA7cOCAli5dquHDh+sXv/iFIiMj9c477+iee+5RRESEZs6caXaJANDv3Xvvvfrkk0/09NNP9xqa9jeETv2AzWbrdUXTyVZAAWZqa2vTokWLVFFRoXXr1iklJcXskgBVVVXpqaee0v3336+Ojo5uMxw6OjrkdDoVExMjq9VqYpUY6I795X3y5Mndjk+ZMkXvv/++jhw5osGDB5tQGdDpscceU2hoqJ566imFhYVJ6gxG6+vr9cADD+iKK644rfklQF+x2WyqrKzscbyhoUGSguKGHsHlkUce0fr167Vq1SpNmTLF7HL8gn8V+oHc3Fx9+eWXPY6XlpYqNzfXhIqA3rlcLi1dulS7du3SM888o7y8PLNLAiRJ5eXlam9v15133qnCwkLflyStWbNGhYWF2rt3r8lVYqA71b/p3MzDbHv37tXIkSN9gdMxY8aMUUNDg2pra02qDOhdbm6uKisr1dra2u14aWmpwsLCuj2oCTDb//zP/+jZZ5/Vz372M33/+983uxy/4f9e+oGioiJ99tlnKi8v9x2rqKjQjh07VFRUZGJlwHFer1d33HGHPvroI61evVoFBQVmlwT4nHPOOVq7dm2PL0maOXOm1q5dq8zMTJOrxEB38cUXS5I++OCDbsfff/99paSkKDk52YyyAJ/k5GTt3r27xxO/du7cqYiICFaNIOAUFRXJ5XJpw4YNvmNut1tvv/22pkyZovDwcBOrA45bu3atfvnLX+q2227TvHnzzC7Hr9he1w/MmTNHL7zwghYvXqxly5bJYrHoiSeeUEpKiq699lqzywMkSb/4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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(X_test)\n",
        "y_pred[y_pred>=0.5] = 1\n",
        "y_pred[y_pred<0.5] = 0"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:43.804725Z",
          "iopub.execute_input": "2024-04-30T00:09:43.805147Z",
          "iopub.status.idle": "2024-04-30T00:09:43.979318Z",
          "shell.execute_reply.started": "2024-04-30T00:09:43.805100Z",
          "shell.execute_reply": "2024-04-30T00:09:43.977953Z"
        },
        "trusted": true,
        "id": "m_FCNm84s7fE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test,y_pred))\n",
        "cmatrix = confusion_matrix(y_test,y_pred)\n",
        "sns.heatmap(cmatrix,annot=True,fmt='.3g',cmap='viridis',xticklabels=['happy','sad'],yticklabels=['happy','sad'])\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:43.981384Z",
          "iopub.execute_input": "2024-04-30T00:09:43.981895Z",
          "iopub.status.idle": "2024-04-30T00:09:44.493076Z",
          "shell.execute_reply.started": "2024-04-30T00:09:43.981847Z",
          "shell.execute_reply": "2024-04-30T00:09:44.491834Z"
        },
        "trusted": true,
        "id": "LCsNxSmzs7fF",
        "outputId": "a30e2ec3-36c0-4bf1-c18f-18ce81b98f02"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "              precision    recall  f1-score   support\n\n           0       0.70      0.55      0.62        38\n           1       0.64      0.77      0.70        39\n\n    accuracy                           0.66        77\n   macro avg       0.67      0.66      0.66        77\nweighted avg       0.67      0.66      0.66        77\n\n",
          "output_type": "stream"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 2 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## CNNs: Mel Spectrogram"
      ],
      "metadata": {
        "id": "IP9pB3Nss7fF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X2, y2, test_size=0.2, stratify=y2)\n",
        "X_train = X_train.reshape(-1,16,8,1)\n",
        "X_test = X_test.reshape(-1,16,8,1)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:44.494431Z",
          "iopub.execute_input": "2024-04-30T00:09:44.494787Z",
          "iopub.status.idle": "2024-04-30T00:09:44.503717Z",
          "shell.execute_reply.started": "2024-04-30T00:09:44.494752Z",
          "shell.execute_reply": "2024-04-30T00:09:44.502566Z"
        },
        "trusted": true,
        "id": "V4VlJyfSs7fF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential([\n",
        "    InputLayer(input_shape=(16, 8, 1)),\n",
        "    Conv2D(filters=32, kernel_size=(3, 3), activation='relu', padding = \"same\"),\n",
        "    MaxPooling2D(2, 2),\n",
        "    Conv2D(filters=64, kernel_size=(3, 3), activation='relu', padding = \"same\"),\n",
        "    MaxPooling2D(2, 2),\n",
        "    Flatten(),\n",
        "    Dense(32, activation='relu'),\n",
        "    Dense(1, activation='sigmoid')\n",
        "])\n",
        "model.summary()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:44.505439Z",
          "iopub.execute_input": "2024-04-30T00:09:44.506200Z",
          "iopub.status.idle": "2024-04-30T00:09:44.565534Z",
          "shell.execute_reply.started": "2024-04-30T00:09:44.506156Z",
          "shell.execute_reply": "2024-04-30T00:09:44.564396Z"
        },
        "trusted": true,
        "id": "fe1yXpNSs7fG",
        "outputId": "7c8bcfb2-b83f-497d-b6d0-79a51449ee52"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Model: \"sequential_1\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d_2 (Conv2D)            (None, 16, 8, 32)         320       \n_________________________________________________________________\nmax_pooling2d_2 (MaxPooling2 (None, 8, 4, 32)          0         \n_________________________________________________________________\nconv2d_3 (Conv2D)            (None, 8, 4, 64)          18496     \n_________________________________________________________________\nmax_pooling2d_3 (MaxPooling2 (None, 4, 2, 64)          0         \n_________________________________________________________________\nflatten_1 (Flatten)          (None, 512)               0         \n_________________________________________________________________\ndense_2 (Dense)              (None, 32)                16416     \n_________________________________________________________________\ndense_3 (Dense)              (None, 1)                 33        \n=================================================================\nTotal params: 35,265\nTrainable params: 35,265\nNon-trainable params: 0\n_________________________________________________________________\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n",
        "model_name = \"model_mel.h5\"\n",
        "checkpoint = ModelCheckpoint(model_name,\n",
        "                            monitor=\"val_loss\",\n",
        "                            mode=\"min\",\n",
        "                            save_best_only = True,\n",
        "                            verbose=1)\n",
        "\n",
        "earlystopping = EarlyStopping(monitor='val_loss',min_delta = 0, patience = 5, verbose = 1, restore_best_weights=True)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:44.566812Z",
          "iopub.execute_input": "2024-04-30T00:09:44.567108Z",
          "iopub.status.idle": "2024-04-30T00:09:44.580152Z",
          "shell.execute_reply.started": "2024-04-30T00:09:44.567080Z",
          "shell.execute_reply": "2024-04-30T00:09:44.578943Z"
        },
        "trusted": true,
        "id": "dKBhzlYTs7fG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(X_train, y_train, epochs=50, validation_data=(X_test,y_test), callbacks=[checkpoint,earlystopping])"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:44.582340Z",
          "iopub.execute_input": "2024-04-30T00:09:44.583508Z",
          "iopub.status.idle": "2024-04-30T00:09:47.344861Z",
          "shell.execute_reply.started": "2024-04-30T00:09:44.583467Z",
          "shell.execute_reply": "2024-04-30T00:09:47.343904Z"
        },
        "trusted": true,
        "id": "9NSPI9-Qs7fH",
        "outputId": "3e423a67-f0c9-4460-e42d-c2140bb7d295"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Epoch 1/50\n10/10 [==============================] - 1s 29ms/step - loss: 0.6654 - accuracy: 0.6221 - val_loss: 0.6171 - val_accuracy: 0.7143\n\nEpoch 00001: val_loss improved from inf to 0.61712, saving model to model_mel.h5\nEpoch 2/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.6373 - accuracy: 0.7003 - val_loss: 0.6031 - val_accuracy: 0.7273\n\nEpoch 00002: val_loss improved from 0.61712 to 0.60308, saving model to model_mel.h5\nEpoch 3/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.6233 - accuracy: 0.6873 - val_loss: 0.5887 - val_accuracy: 0.7273\n\nEpoch 00003: val_loss improved from 0.60308 to 0.58866, saving model to model_mel.h5\nEpoch 4/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.6002 - accuracy: 0.6938 - val_loss: 0.5670 - val_accuracy: 0.7143\n\nEpoch 00004: val_loss improved from 0.58866 to 0.56704, saving model to model_mel.h5\nEpoch 5/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5830 - accuracy: 0.6938 - val_loss: 0.5548 - val_accuracy: 0.7013\n\nEpoch 00005: val_loss improved from 0.56704 to 0.55484, saving model to model_mel.h5\nEpoch 6/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5647 - accuracy: 0.6971 - val_loss: 0.5461 - val_accuracy: 0.7143\n\nEpoch 00006: val_loss improved from 0.55484 to 0.54612, saving model to model_mel.h5\nEpoch 7/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5555 - accuracy: 0.7068 - val_loss: 0.5572 - val_accuracy: 0.7532\n\nEpoch 00007: val_loss did not improve from 0.54612\nEpoch 8/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5471 - accuracy: 0.7199 - val_loss: 0.5337 - val_accuracy: 0.7403\n\nEpoch 00008: val_loss improved from 0.54612 to 0.53371, saving model to model_mel.h5\nEpoch 9/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5452 - accuracy: 0.7199 - val_loss: 0.5265 - val_accuracy: 0.7403\n\nEpoch 00009: val_loss improved from 0.53371 to 0.52653, saving model to model_mel.h5\nEpoch 10/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5217 - accuracy: 0.7264 - val_loss: 0.5261 - val_accuracy: 0.7662\n\nEpoch 00010: val_loss improved from 0.52653 to 0.52610, saving model to model_mel.h5\nEpoch 11/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5126 - accuracy: 0.7264 - val_loss: 0.5200 - val_accuracy: 0.7532\n\nEpoch 00011: val_loss improved from 0.52610 to 0.51998, saving model to model_mel.h5\nEpoch 12/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.5097 - accuracy: 0.7329 - val_loss: 0.5399 - val_accuracy: 0.7532\n\nEpoch 00012: val_loss did not improve from 0.51998\nEpoch 13/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4971 - accuracy: 0.7394 - val_loss: 0.5157 - val_accuracy: 0.7662\n\nEpoch 00013: val_loss improved from 0.51998 to 0.51570, saving model to model_mel.h5\nEpoch 14/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4984 - accuracy: 0.7296 - val_loss: 0.5681 - val_accuracy: 0.7273\n\nEpoch 00014: val_loss did not improve from 0.51570\nEpoch 15/50\n10/10 [==============================] - 0s 8ms/step - loss: 0.5092 - accuracy: 0.7394 - val_loss: 0.5246 - val_accuracy: 0.7532\n\nEpoch 00015: val_loss did not improve from 0.51570\nEpoch 16/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4964 - accuracy: 0.7459 - val_loss: 0.5170 - val_accuracy: 0.7662\n\nEpoch 00016: val_loss did not improve from 0.51570\nEpoch 17/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4708 - accuracy: 0.7362 - val_loss: 0.5233 - val_accuracy: 0.7662\n\nEpoch 00017: val_loss did not improve from 0.51570\nEpoch 18/50\n10/10 [==============================] - 0s 9ms/step - loss: 0.4652 - accuracy: 0.7524 - val_loss: 0.5195 - val_accuracy: 0.7403\n\nEpoch 00018: val_loss did not improve from 0.51570\nRestoring model weights from the end of the best epoch.\nEpoch 00018: early stopping\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('Model Loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.ylim([0,2])\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:47.346138Z",
          "iopub.execute_input": "2024-04-30T00:09:47.346500Z",
          "iopub.status.idle": "2024-04-30T00:09:47.634486Z",
          "shell.execute_reply.started": "2024-04-30T00:09:47.346467Z",
          "shell.execute_reply": "2024-04-30T00:09:47.633251Z"
        },
        "trusted": true,
        "id": "OipKNCW1s7fH",
        "outputId": "6a5ea630-61e3-42f7-925b-50c526e2f6cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test,y_pred))\n",
        "cmatrix = confusion_matrix(y_test,y_pred)\n",
        "sns.heatmap(cmatrix,annot=True,fmt='.3g',cmap='viridis',xticklabels=['happy','sad'],yticklabels=['happy','sad'])\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:47.636059Z",
          "iopub.execute_input": "2024-04-30T00:09:47.636432Z",
          "iopub.status.idle": "2024-04-30T00:09:47.875374Z",
          "shell.execute_reply.started": "2024-04-30T00:09:47.636398Z",
          "shell.execute_reply": "2024-04-30T00:09:47.874247Z"
        },
        "trusted": true,
        "id": "7rKjOgAqs7fH",
        "outputId": "63a00ca7-e279-487a-dd8a-79d86b313867"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "              precision    recall  f1-score   support\n\n           0       0.53      0.42      0.47        38\n           1       0.53      0.64      0.58        39\n\n    accuracy                           0.53        77\n   macro avg       0.53      0.53      0.53        77\nweighted avg       0.53      0.53      0.53        77\n\n",
          "output_type": "stream"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 2 Axes>",
            "image/png": "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jBgxImPGjMns2bPLVScAAAC0CaYerEXHjh0zatSo/PCHP8z06dOz0047ZfLkyfnoRz+aT37yk7nnnnvWc5kAAADAhvC2J0G8/vrr+fGPf5zTTz89Dz30UHbZZZecddZZWb16dU4++eRceeWV67NOAAAAaBMaU12WV1vRsegHHn/88UyZMiVTp05NQ0NDRo0ala9//evZY489kiQnnnhixo8fn+uuuy5nnnnmei8YAAAAWlNDG5omUA6FGgWHHnponnzyyWy99dY59dRTc/jhh6dHjx5rjNt3330zbty49VUjAAAAsIEUahT07ds3n//85zNixIhUVf37Dsquu+6au+666z8uDgAAANqatrTwYDkUahRMnDixReM6deqUd77znW+rIAAAAKD1FF6joKGhIbfccktmzpyZBQsWpG/fvhk8eHD+67/+Kx06dChHjQAAANBmNDa1nYUHy6FQo+Bvf/tbPve5z+W5555LTU1Nevfunaeffjo33XRTrr766nzve9+TJAAAAKCiNaSypx4UaoN8/etfz+uvv57rr78+99xzT26++ebcc889+fGPf5zXXnstX//618tVJwAAALABFGoU/Pa3v80555yTPffcs9nx97znPTn77LMzY8aM9VocAAAAtDWNTVVlebUVhaYebLbZZunVq9daz/Xu3TudO3deL0UBb887+nTLUccMy061NXnXgL7p3HmTfKJufBbMX7zG2G23653PfHZEBg3aLp27bJIXFryaX9zySH5+80OtUDkAFLf4oQVZPGNBlj33Wla/ujKb9O6c7nv2SZ+P9k+HLm/8M/f1J17OovvmZensxVn9yop07LFpuu3WK1se8q507N6plZ8AoG0q1Cj42Mc+lhtvvDH777//GuduvPHGHHLIIeurLuBteOc7e2b/9+2Sp5+el1mP/TV7DXnXWsftVFuTb13xiTw6c04u+9btWbJkRbbeumc6d/EPJgA2Hi9N/0s26d05fQ8bkE16bpplf3ktL9zybJY8uSjv+u+9UlVdlZf/729pXNGQLQ/un059umTFgqV54ZZn89qshdnha/ukQ+fCa3sDWMzwzbbddttMnz49Bx98cD74wQ+md+/eWbhwYe64444sWbIkI0aMyE9/+tPS+MMPP3y9Fwz8e489+pccceiVSZJRB+2x1kZBVVVy/pc+lt8/8lwuuvDm0vFHfz9ng9UJAOvDdmfu0SwVsPnOPdNh803yt+89kSVPLkrXXXtlq0/VrjFm05rN8uylj+TVB19IzxFbtUbpAG1aoUbB1772tSTJ/Pnz86c//WmN86NHjy79uaqqSqMANrCmpnWP2WPQdtmu/ztyxWXTyl8QAJTR2qYOdNm+e5Jk1SsrWjwGoKjGCt/1oFCj4K677ipXHcAGstvu2yRJOnXqkHETPpMda2vy2mvLc8/dT+Tqif+XlStXt3KFAPD2LX1qUZKkc7/N/+2YJU+9kiTZtN9mG6IkoAI1tKGFB8uhUKPgne98Z7nqADaQ3r27Jkku/OqhufXnD+d7k/4vO9X2y2c+OyJ9tuzebDoCAGxMVi1angU/fyab79qrlBr4Vw3LVmfe9U9n0602S/c9+2zgCgE2Dm9r9ZY5c+bksccey4IFC9K3b9/sscce2Xbbbdd3bUAZVFe/0f2861ez8sNr702SPDrzL6mursoJ9SOz7Xa985c5C1uzRAAorGH56sy56rFUdajK1p/bZa1jmhoaM/e7s7L6lRV515fek6oOlb0YGVA+FjN8kxUrVuSiiy7KL37xizQ0NJSOd+jQIYcccki++tWvplMnq6ZDW/bq4mVJkod/92yz4w//7tmckGSHHftqFACwUWlc2ZC/XPloVr24LNuf/55s0mvNLbubGpsy93tP5PU/LMp2Z+2Rztt0a4VKATYOhRoF3/zmN/PLX/4yp59+eg466KDSrge33XZbxo8fny5duuTCCy8sV63AevDccy++5fnGxg1UCACsB02rG/OX8Y9n2XOvpf+5g9N5m65rHff8dU9m8YMvZNtTB6brrr02cJVApWms8DUKCuUlpk6dmtNOOy319fXZZpttstlmm2WbbbbJySefnFNPPTW//OUvy1UnsJ48NOOZrFyxOnvt3XzrxL3/vpXi00/Na42yAKCwpsam/HXSH7Lkj4uy7em7Z7MBW6x13Lwb/5RF9z6fd35uF+sSAOtFY6rK8morCiUKVq5cmd13332t5/bYY4+sWrVqvRQFvH3v3X/nJMlOtf2SJEP2GZBXXlmaxa8szWOP/iWvvrosN/z4gXzy0/tl6dIVmfnInOxU2y+f/Mx+uWPaY3n+b4tas3wAaLF5P3oqrz70Qvp8tH+qN+2QpbMXl85t0nPTbNKrc16c+lwW3vGX9Hhvv2zad7NmYzp02ySbbmnnA4B/VahRMHz48Nx///0ZPnz4Gufuv//+DB06dL0VBrw9X/3ax5u9P/PsDydJHv39nJzz+R8nSSb/8P4sXbYyH/uvPXNE3dC8vPD1/OTGGfnRD+/f4PUCwNv12mNvrKnz4m3P5cXbnmt2rs9/bZ++h7wrrz3+xphX7puXV+5rnprrsW+/bH38rhukVqCyVPrUg0KNguOOOy5f+MIXsmzZsnz4wx/OO97xjrz00kuZNm1a7r333owdOzZ//etfS+O32Wab9V4w8Nbev/+YFo27+ScP5uafPFjmagCgfGr/Z991jnnXF9+zASoB2DCmT5+eqVOnZtasWVm4cGH69euXD37wgznppJPStesba7T85je/yc0335yZM2fmhRdeyJZbbpl99903Z5xxRnr37t2i+1Q1NTU1tbSonXfe+Z8frPpnB+Ufl3jzsST54x//uNbrtPQHGQCoFFtcMre1SwCADebm4RNau4SyqvtNfVmuO2XYxLc8f+SRR6Zfv3458MADU1NTkyeeeCLf/va38653vSs33nhjqqurc8YZZ2Tp0qUZNWpUttlmm8yZMydXXXVVOnXqlF/84hfZfPPN11lHoUTBJZdcUmQ4AAAAVJzWmnowceLE9Or1z51bhgwZkh49euT888/PjBkzMmzYsFx00UVrjOnfv38++clPZtq0aTn88MPXeZ9CjYJDDz20yHAAAABgPXlzA+AfBg4cmCRZsGBBi8esS6FGAQAAALR3bWkrwwcffGPdsQEDBvxHY96scKNg4cKFue222/Lss89mxYoVzc5VVVVlzBjrDwAAAEC5LViwIFdddVWGDx9eSg38q9dffz1jxozJgAED8v73v79F1y3UKHjmmWdy1FFHZfXq1Vm2bFl69uyZxYsXp6GhIVtssUVplUUAAACoVOVao2DKlCmZMmVK6X1dXV3q6urWOnbJkiU5+eST06FDh3+7nuDq1atzzjnnZMGCBbnhhhvSsWPLWgCFGgVjx47NwIEDM378+AwaNChXX311amtrc8stt2TcuHEZP358kcsBAAAAf/dWjYE3W758eerr6zN37txMnjw5NTU1a4xpbGzM+eefnwceeCCTJk1qtovhulQXKXrWrFk5+uij06lTp9KNO3bsmMMPPzyf+MQncvHFFxe5HAAAAGx0GpuqyvJqiVWrVuWMM87IrFmzMmnS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AspLogAAAAAokSgAAACAAlprjYL58+fn6quvzqxZs/Lkk09m+fLlueuuu7L11luvMXb27Nm58sorM2PGjCxbtiz9+vXLMccck8985jPrvI9GAQAAAGwE5syZk2nTpuXd73539tprr9x///1rHff444/nM5/5TIYMGZKLL744Xbt2zZw5c7J06dIW3UejAAAAAIpopU0P9t577zzwwANJkptuummtjYLGxsacf/75GTZsWMaPH186PnTo0BbfxxoFAAAAUERTU3le61Bdve4f4WfMmJHZs2fnuOOOe9uPp1EAAAAAFeLhhx9OkqxYsSJHHnlk3v3ud2fYsGH5xje+keXLl7foGhoFAAAAUEBVU3le68MLL7yQJDnrrLOy77775tprr83xxx+fm266Keecc06LrmGNAgAAAGgDpkyZkilTppTe19XVpa6urtA1mv4+heFjH/tYzjzzzCTJPvvsk4aGhlx22WWZPXt2BgwY8JbX0CgAAACAIsq0PeLbaQz8qx49eiRJhg8f3uz4fvvtl8suuyxPPPGERgEAAACsT1WNrV3Bv7fDDju85fmWLIhojQIAAACoECNGjEinTp3W2DrxvvvuS5Lstttu67yGRAEAAAAUUaapBy0xffr0JMmsWbOSJPfee2969eqVXr16ZciQIenZs2dOOumkTJgwIV27ds3QoUMza9asjB8/Poceemi22267dd6jqqlpwz/hB6qP2NC3BIBWdcfzj7Z2CQCwwVTXPN3aJZTVB/b9Rlmu+6v/78J1jqmtrV3r8SFDhmTy5MlJ3ljQ8Ac/+EGuv/76zJs3L3369MkhhxySU045JZtsssk67yFRAAAAAEW0XqAgTz311DrHVFVV5bjjjstxxx33tu6hUQAAAAAFVLXi1IMNwWKGAAAAQIlEAQAAABQhUQAAAAC0FxIFAAAAUERjaxdQXhIFAAAAQIlEAQAAABRQ6bseaBQAAABAERXeKDD1AAAAACiRKAAAAIAiJAoAAACA9kKiAAAAAIqo8O0RNQoAAACggErf9cDUAwAAAKBEogAAAACKkCgAAAAA2guJAgAAACiiwhMFGgUAAABQRIU3Ckw9AAAAAEokCgAAAKCIxtYuoLwkCgAAAIASiQIAAAAooMoaBQAAAEB7IVEAAAAARVR4okCjAAAAAIporOxGgakHAAAAQIlEAQAAABRR4VMPJAoAAACAEokCAAAAKKLCEwUaBQAAAFBEhTcKTD0AAAAASiQKAAAAoAjbIwIAAADthUQBAAAAFNHU2NoVlJVGAQAAABRhMUMAAACgvZAoAAAAgCIsZggAAAC0FxIFAAAAUIQ1CgAAAID2QqIAAAAAiqjwRIFGAQAAABRR4Y0CUw8AAACAEokCAAAAKKKxsbUrKCuJAgAAAKBEogAAAACKqPA1CjQKAAAAoIgKbxSYegAAAACUSBQAAABAEY0SBQAAAEA7IVEAAAAABTQ1Vfb2iBoFAAAAUISpBwAAAEB7IVEAAAAARdgeEQAAAGgvJAoAAACgiMbKXsxQogAAAAAokSgAAACAIip8jQKNAgAAACigydQDAAAAoL2QKAAAAIAiKnzqgUQBAAAAUCJRAAAAAEU0VnaiQKMAAAAAimiymCEAAADQTkgUAAAAQAFNFT71QKIAAAAANgLz58/P17/+9dTV1WWPPfZIbW1t5s6d+5afmTRpUmpra3P00Ue3+D4aBQAAAFBEU2N5XuswZ86cTJs2Ld27d89ee+21zvF//etf853vfCe9e/cu9HimHgAAAEABrTX1YO+9984DDzyQJLnpppty//33v+X4iy66KAcffHCeffbZrF69usX3kSgAAACAjUB1dct/hP/lL3+ZP/zhDzn77LML30eiAAAAAIpo49sjLl68OJdccknOO++89OjRo/DnJQoAAACggowdOzb9+/fPxz/+8bf1+VZJFPyq8abWuC0AAAD8x8r1M+2UKVMyZcqU0vu6urrU1dUVusbvfve73HrrrfnZz36Wqqqqt1WHqQcAAADQBrydxsC/+spXvpLDDjssNTU1efXVV5Mkq1evTmNjY1599dV07tw5nTp1estraBQAAABAhZg9e3Zmz56dG2+8cY1ze++9dy644IIce+yxb3kNjQIAAACoENddd90ax8aMGZPGxsZceOGF2W677dZ5DY0CAAAA2EhMnz49STJr1qwkyb333ptevXqlV69eGTJkSPbZZ581PtO9e/esXr16refWpqqpqalp/ZUMAAAAlEttbe1ajw8ZMiSTJ09e67lPfepTWb16dW644YYW3UOjAAAAACipbu0CgObGjRuX2trarF69urVLAYB244tf/GJGjhzZ2mUAtAkaBQAAAECJRgEAAABQolEAbdTcuXNz4oknZvDgwTnggAPy7W9/O42NjUmSFStWZMyYMfnoRz+awYMHZ9999019fX1mz57d7Bo/+9nPUltbm4ceeiinnHJKBg8enH322SejR4/O8uXLm92rtrY2P/7xj3PJJZdk2LBh2WOPPXLSSSdl7ty5pXH19fU55JBD1qj1r3/9a3beeecWL44CAG/Hs88+m1NPPTXDhg3LwIED8773vS9nnHFGVq9e3eLvxiT5zW9+k0MPPTQDBw7M+9///rXuNQ7QntkeEdqo0047LR//+Mdz7LHH5u677864cePSr1+/HHbYYVm5cmWWLFmSk08+OX369MnixYtz/fXX56ijjsrtt9+ePn36NLvWeeedl1GjRuWYY47JY489lgkTJmTZsmW59NJLm42bNGlSdtlll1xyySVZuHBhrrjiinzuc5/Lbbfdlk022SRHH310TjzxxDz22GPZfffdS5/7yU9+ki5duuTggw/eIH83ALRPJ510Urp3756LLrooPXv2zIIFC/LrX/86jY2NLf5unD17dk444YTstttuueKKK7Jy5cqMGzcuS5cuTYcOHVr5CQHaBo0CaKOOO+64HHbYYUmS4cOHZ8aMGZk6dWoOO+ywdOvWLRdffHFpbENDQ/bbb78MHz48U6dOzbHHHtvsWiNGjMj555+fJNlvv/1SVVWVq666KieddFK233770rjNN988EyZMSHX1G2Gj/v3755hjjsktt9ySI444Iu9973uzzTbb5MYbbyw1ClatWpWf/exnOfjgg9O1a9dy/pUA0I69/PLLmTNnTiZMmJADDzywdPwfTepOnTq16LtxwoQJ2XzzzXPttddms802S5IMHjw4H/jAB7LllltuuAcCaMNMPYA26n3ve1+z9zvuuGOef/750vvbb789RxxxRPbaa6/suuuuGTRoUJYuXZpnnnlmjWuNGjWq2fuDDjoojY2Neeyxx5od/9CHPlRqEiTJe97zntTU1GTmzJlJkurq6tTV1eX222/Pa6+9liS5884789JLL+Woo476Tx4XAN5Sz549s8022+Syyy7LT37ykzz33HNrjGnJd+PMmTOz//77l5oESdKvX78MHjx4QzwGwEZBowDaqC222KLZ+06dOmXlypVJkrvvvjtnnXVWBgwYkMsuuyw33XRTfvrTn6ZXr16lMW/2jne8o9n73r17J0kWLFjwluP+MfbN4w4//PA0NDTk1ltvTZJSumDXXXd9G08JAC1TVVWV73//+9ltt91y2WWX5UMf+lAOPPDAXH/99Ula/t344osvlr4H32xt34EA7ZWpB7ARmjp1arbbbrtmawysWrUqixcvXuv4l156KTvuuGPp/cKFC5Mkffv2XWPcv1q4cGF22WWX0vuePXtm1KhRmTJlSvbbb7/MmDEj3/jGN/6j5wGAlthmm20yduzYNDU15cknn8yPfvSjjB49Ou985ztb/N3Yp0+f0vfgm63tOxCgvZIogI3Q8uXL11hw6dZbb01DQ8Nax0+bNq3Z+6lTp6a6ujp77LFHs+N33HFHaWeFJHn44Yczf/78DBo0qNm4Y445Jk8//XQuvPDCdOvWLQcddNB/8DQAUExVVVV22WWXXHDBBUmSP/3pTy3+bhw0aFB+/etfZ+nSpaVj8+bNy+9///vyFw6wkZAogI3Qe9/73tx5550ZM2ZMDjjggDz++OP50Y9+lO7du691/L333ptvfvOb2W+//fLYY49l/PjxOeSQQ9K/f/9m45YsWZJTTjklRx11VF5++eVcfvnl6d+//xpbIg4aNCi77rprHnrooXzqU59Kly5dyvSkAPCGJ598MhdffHE+8pGPZLvttktDQ0N+/vOfp2PHjhk6dGi6du3aou/GU045JXfccUc++9nP5vjjj8/KlSvz7W9/e63TEQDaK40C2AgdeeSRmTdvXm6++eZMmTIlAwcOzMSJE3Paaaetdfy3vvWtXHvttbnxxhuzySab5IgjjijtgvBmJ554Yv7yl7/ki1/8YpYtW5Z99tknX/7yl7PJJpusMfbDH/5wnnjiidTV1a335wOAf9WnT59stdVW+cEPfpD58+dn0003zU477ZSJEydmt912y6677tqi78YBAwZk0qRJGTt2bD7/+c+nb9++OeGEEzJz5sw8+OCDrfR0AG1LVVNTU1NrFwGUx89+9rNccMEF+d///d9st912/3bc3Llzc+CBB+Yb3/hGjjjiiBZd+6ijjkp1dXVpESkAAKAySBQALbZy5cr84Q9/yAMPPJDf//73mTBhQmuXBAAArGcaBUCLvfDCCznqqKPSvXv31NfX58ADD2ztkgAAgPXM1AMAAACgxPaIAAAAQIlGAQAAAFCiUQAAAACUaBQAAAAAJRoFAAAAQIlGAQAAAFDy/wOcfrREb3AzqAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " MFCC Features give better performance"
      ],
      "metadata": {
        "id": "OZoiOdyps7fI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Autoencoders\n"
      ],
      "metadata": {
        "id": "K2jys6P9s7fI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataf = feature_extraction(data)\n",
        "dataf"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:09:47.876628Z",
          "iopub.execute_input": "2024-04-30T00:09:47.876949Z",
          "iopub.status.idle": "2024-04-30T00:11:54.730825Z",
          "shell.execute_reply.started": "2024-04-30T00:09:47.876919Z",
          "shell.execute_reply": "2024-04-30T00:11:54.729730Z"
        },
        "trusted": true,
        "id": "odq4YcOVs7fI",
        "outputId": "76e03e0f-697b-43d3-e3cd-cdbc2bd315f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stderr",
          "text": "100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 384/384 [02:06<00:00,  3.03it/s]\n",
          "output_type": "stream"
        },
        {
          "execution_count": 36,
          "output_type": "execute_result",
          "data": {
            "text/plain": "              0          1          2          3          4          5  \\\n0   -655.887451  44.384995  -5.922089   5.301328  -5.846109  -3.695551   \n1   -585.728638  44.487385 -22.599588   9.817188  -8.152647  -4.897211   \n2   -605.731567  46.535400 -19.348291  13.490911  -7.866285  -5.181213   \n3   -661.506409  45.826687  -8.344815   6.547118  -6.763440  -5.770291   \n4   -484.870270  37.232101 -32.120388   7.449310 -10.889060 -14.209931   \n..          ...        ...        ...        ...        ...        ...   \n379 -568.361694  57.210964   0.689539  12.319594   6.551200  -0.579483   \n380 -723.345276  73.582779   0.339823  12.872882   5.823831  -0.428393   \n381 -637.680298  78.848206  -7.289741  16.754477   6.813106  -4.355325   \n382 -614.372986  73.964455 -10.224572  16.619707   6.027779  -0.498516   \n383 -596.720459  75.533997 -10.849150  16.255589  11.882466  -9.690378   \n\n             6          7          8         9  ...       119       120  \\\n0   -10.138599 -10.529056  -5.311738 -2.087161  ...  0.516419  0.085295   \n1    -5.878748 -11.672596  -5.678558 -2.191390  ...  0.119705 -0.098642   \n2    -5.951238 -11.170672  -4.939478 -2.804853  ...  0.041053 -0.128919   \n3   -13.880534 -12.418792 -10.221000 -1.434967  ...  0.394012 -0.028128   \n4    -9.655680 -12.668373  -6.404204 -4.595531  ...  0.083605 -0.307447   \n..         ...        ...        ...       ...  ...       ...       ...   \n379 -16.130163  -6.567527 -11.981590 -4.644281  ...  0.360626  0.436093   \n380  -6.189919  -9.161605  -7.757164 -0.468081  ... -0.157852  0.274586   \n381  -9.541617  -7.217409  -0.118985  0.594490  ...  0.124824  0.241637   \n382 -12.134978  -9.038948  -1.969959  2.583837  ...  0.138655 -0.109003   \n383 -18.414713  -6.514667 -19.538132 -7.320460  ...  0.610926  0.785385   \n\n          121       122       123       124       125       126       127  \\\n0    0.505571  0.453406  0.520696  0.698611  0.274180  0.390192  0.463052   \n1   -0.040381 -0.069480  0.143877  0.309187  0.215850  0.184923 -0.039407   \n2   -0.220367 -0.167521  0.132136 -0.016883 -0.127417  0.468943  0.076724   \n3   -0.411090  0.139783 -0.099380 -0.056837 -0.021696 -0.091667 -0.078983   \n4   -0.368100  0.128967  0.459337 -0.001366  0.038329  0.208846  0.140713   \n..        ...       ...       ...       ...       ...       ...       ...   \n379  0.418931  0.527835 -0.141552  0.049041  0.278503  0.119281  0.330996   \n380  0.435817  0.400723  0.269498  0.262169 -0.085667  0.086253  0.102733   \n381  0.051282  0.336582  0.019449  0.083065  0.025247 -0.009976 -0.082464   \n382 -0.038419  0.154577 -0.452695  0.194174 -0.015858 -0.433526  0.668562   \n383  0.351907  0.759420  0.507839  0.598742  0.367918  0.177785  0.524623   \n\n     class  \n0      sad  \n1    happy  \n2    happy  \n3      sad  \n4    happy  \n..     ...  \n379    sad  \n380    sad  \n381  happy  \n382  happy  \n383    sad  \n\n[384 rows x 129 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>119</th>\n      <th>120</th>\n      <th>121</th>\n      <th>122</th>\n      <th>123</th>\n      <th>124</th>\n      <th>125</th>\n      <th>126</th>\n      <th>127</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>-655.887451</td>\n      <td>44.384995</td>\n      <td>-5.922089</td>\n      <td>5.301328</td>\n      <td>-5.846109</td>\n      <td>-3.695551</td>\n      <td>-10.138599</td>\n      <td>-10.529056</td>\n      <td>-5.311738</td>\n      <td>-2.087161</td>\n      <td>...</td>\n      <td>0.516419</td>\n      <td>0.085295</td>\n      <td>0.505571</td>\n      <td>0.453406</td>\n      <td>0.520696</td>\n      <td>0.698611</td>\n      <td>0.274180</td>\n      <td>0.390192</td>\n      <td>0.463052</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-585.728638</td>\n      <td>44.487385</td>\n      <td>-22.599588</td>\n      <td>9.817188</td>\n      <td>-8.152647</td>\n      <td>-4.897211</td>\n      <td>-5.878748</td>\n      <td>-11.672596</td>\n      <td>-5.678558</td>\n      <td>-2.191390</td>\n      <td>...</td>\n      <td>0.119705</td>\n      <td>-0.098642</td>\n      <td>-0.040381</td>\n      <td>-0.069480</td>\n      <td>0.143877</td>\n      <td>0.309187</td>\n      <td>0.215850</td>\n      <td>0.184923</td>\n      <td>-0.039407</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-605.731567</td>\n      <td>46.535400</td>\n      <td>-19.348291</td>\n      <td>13.490911</td>\n      <td>-7.866285</td>\n      <td>-5.181213</td>\n      <td>-5.951238</td>\n      <td>-11.170672</td>\n      <td>-4.939478</td>\n      <td>-2.804853</td>\n      <td>...</td>\n      <td>0.041053</td>\n      <td>-0.128919</td>\n      <td>-0.220367</td>\n      <td>-0.167521</td>\n      <td>0.132136</td>\n      <td>-0.016883</td>\n      <td>-0.127417</td>\n      <td>0.468943</td>\n      <td>0.076724</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-661.506409</td>\n      <td>45.826687</td>\n      <td>-8.344815</td>\n      <td>6.547118</td>\n      <td>-6.763440</td>\n      <td>-5.770291</td>\n      <td>-13.880534</td>\n      <td>-12.418792</td>\n      <td>-10.221000</td>\n      <td>-1.434967</td>\n      <td>...</td>\n      <td>0.394012</td>\n      <td>-0.028128</td>\n      <td>-0.411090</td>\n      <td>0.139783</td>\n      <td>-0.099380</td>\n      <td>-0.056837</td>\n      <td>-0.021696</td>\n      <td>-0.091667</td>\n      <td>-0.078983</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-484.870270</td>\n      <td>37.232101</td>\n      <td>-32.120388</td>\n      <td>7.449310</td>\n      <td>-10.889060</td>\n      <td>-14.209931</td>\n      <td>-9.655680</td>\n      <td>-12.668373</td>\n      <td>-6.404204</td>\n      <td>-4.595531</td>\n      <td>...</td>\n      <td>0.083605</td>\n      <td>-0.307447</td>\n      <td>-0.368100</td>\n      <td>0.128967</td>\n      <td>0.459337</td>\n      <td>-0.001366</td>\n      <td>0.038329</td>\n      <td>0.208846</td>\n      <td>0.140713</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>379</th>\n      <td>-568.361694</td>\n      <td>57.210964</td>\n      <td>0.689539</td>\n      <td>12.319594</td>\n      <td>6.551200</td>\n      <td>-0.579483</td>\n      <td>-16.130163</td>\n      <td>-6.567527</td>\n      <td>-11.981590</td>\n      <td>-4.644281</td>\n      <td>...</td>\n      <td>0.360626</td>\n      <td>0.436093</td>\n      <td>0.418931</td>\n      <td>0.527835</td>\n      <td>-0.141552</td>\n      <td>0.049041</td>\n      <td>0.278503</td>\n      <td>0.119281</td>\n      <td>0.330996</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>380</th>\n      <td>-723.345276</td>\n      <td>73.582779</td>\n      <td>0.339823</td>\n      <td>12.872882</td>\n      <td>5.823831</td>\n      <td>-0.428393</td>\n      <td>-6.189919</td>\n      <td>-9.161605</td>\n      <td>-7.757164</td>\n      <td>-0.468081</td>\n      <td>...</td>\n      <td>-0.157852</td>\n      <td>0.274586</td>\n      <td>0.435817</td>\n      <td>0.400723</td>\n      <td>0.269498</td>\n      <td>0.262169</td>\n      <td>-0.085667</td>\n      <td>0.086253</td>\n      <td>0.102733</td>\n      <td>sad</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>-637.680298</td>\n      <td>78.848206</td>\n      <td>-7.289741</td>\n      <td>16.754477</td>\n      <td>6.813106</td>\n      <td>-4.355325</td>\n      <td>-9.541617</td>\n      <td>-7.217409</td>\n      <td>-0.118985</td>\n      <td>0.594490</td>\n      <td>...</td>\n      <td>0.124824</td>\n      <td>0.241637</td>\n      <td>0.051282</td>\n      <td>0.336582</td>\n      <td>0.019449</td>\n      <td>0.083065</td>\n      <td>0.025247</td>\n      <td>-0.009976</td>\n      <td>-0.082464</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>382</th>\n      <td>-614.372986</td>\n      <td>73.964455</td>\n      <td>-10.224572</td>\n      <td>16.619707</td>\n      <td>6.027779</td>\n      <td>-0.498516</td>\n      <td>-12.134978</td>\n      <td>-9.038948</td>\n      <td>-1.969959</td>\n      <td>2.583837</td>\n      <td>...</td>\n      <td>0.138655</td>\n      <td>-0.109003</td>\n      <td>-0.038419</td>\n      <td>0.154577</td>\n      <td>-0.452695</td>\n      <td>0.194174</td>\n      <td>-0.015858</td>\n      <td>-0.433526</td>\n      <td>0.668562</td>\n      <td>happy</td>\n    </tr>\n    <tr>\n      <th>383</th>\n      <td>-596.720459</td>\n      <td>75.533997</td>\n      <td>-10.849150</td>\n      <td>16.255589</td>\n      <td>11.882466</td>\n      <td>-9.690378</td>\n      <td>-18.414713</td>\n      <td>-6.514667</td>\n      <td>-19.538132</td>\n      <td>-7.320460</td>\n      <td>...</td>\n      <td>0.610926</td>\n      <td>0.785385</td>\n      <td>0.351907</td>\n      <td>0.759420</td>\n      <td>0.507839</td>\n      <td>0.598742</td>\n      <td>0.367918</td>\n      <td>0.177785</td>\n      <td>0.524623</td>\n      <td>sad</td>\n    </tr>\n  </tbody>\n</table>\n<p>384 rows Ã— 129 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "scaler = MinMaxScaler()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:11:54.732419Z",
          "iopub.execute_input": "2024-04-30T00:11:54.733650Z",
          "iopub.status.idle": "2024-04-30T00:11:54.738802Z",
          "shell.execute_reply.started": "2024-04-30T00:11:54.733611Z",
          "shell.execute_reply": "2024-04-30T00:11:54.737594Z"
        },
        "trusted": true,
        "id": "PjR5vXYas7fJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_happy = dataf[dataf['class']=='happy'].iloc[:,:-1].values\n",
        "X_sad = dataf[dataf['class']=='sad'].iloc[:,:-1].values\n",
        "\n",
        "X_happy = scaler.fit_transform(X_happy)\n",
        "X_sad = scaler.transform(X_sad)\n",
        "\n",
        "X_happy = X_happy.reshape(-1,16,8,1)\n",
        "X_sad = X_sad.reshape(-1,16,8,1)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:11:54.740464Z",
          "iopub.execute_input": "2024-04-30T00:11:54.740860Z",
          "iopub.status.idle": "2024-04-30T00:11:54.756734Z",
          "shell.execute_reply.started": "2024-04-30T00:11:54.740826Z",
          "shell.execute_reply": "2024-04-30T00:11:54.755684Z"
        },
        "trusted": true,
        "id": "UptDMkvVs7fJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential([\n",
        "    Input(shape=(16,8,1)),\n",
        "    Conv2D(filters=32, kernel_size=(3,3), activation='relu', padding='same'),\n",
        "    MaxPooling2D(2,2),\n",
        "    Conv2D(filters=64, kernel_size=(3,3), activation='relu', padding='same'),\n",
        "    MaxPooling2D(2,2),\n",
        "    Conv2D(filters=64, kernel_size=(3,3), activation='relu', padding='same'),\n",
        "    UpSampling2D((2,2)),\n",
        "    Conv2D(filters=32, kernel_size=(3,3), activation='relu', padding='same'),\n",
        "    UpSampling2D((2,2)),\n",
        "    Conv2D(filters=1, kernel_size=(3,3), activation='sigmoid', padding='same')\n",
        "])\n",
        "\n",
        "model.compile(loss='mean_squared_error',optimizer='adam')"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:11:54.758375Z",
          "iopub.execute_input": "2024-04-30T00:11:54.759038Z",
          "iopub.status.idle": "2024-04-30T00:11:54.852057Z",
          "shell.execute_reply.started": "2024-04-30T00:11:54.759002Z",
          "shell.execute_reply": "2024-04-30T00:11:54.850933Z"
        },
        "trusted": true,
        "id": "eE-JKK74s7fJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:11:54.853732Z",
          "iopub.execute_input": "2024-04-30T00:11:54.854181Z",
          "iopub.status.idle": "2024-04-30T00:11:54.862279Z",
          "shell.execute_reply.started": "2024-04-30T00:11:54.854136Z",
          "shell.execute_reply": "2024-04-30T00:11:54.861050Z"
        },
        "trusted": true,
        "id": "WlqbEUsys7fK",
        "outputId": "788f8c45-63d5-4c22-fc9f-79573ee9be0e"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Model: \"sequential_2\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d_4 (Conv2D)            (None, 16, 8, 32)         320       \n_________________________________________________________________\nmax_pooling2d_4 (MaxPooling2 (None, 8, 4, 32)          0         \n_________________________________________________________________\nconv2d_5 (Conv2D)            (None, 8, 4, 64)          18496     \n_________________________________________________________________\nmax_pooling2d_5 (MaxPooling2 (None, 4, 2, 64)          0         \n_________________________________________________________________\nconv2d_6 (Conv2D)            (None, 4, 2, 64)          36928     \n_________________________________________________________________\nup_sampling2d (UpSampling2D) (None, 8, 4, 64)          0         \n_________________________________________________________________\nconv2d_7 (Conv2D)            (None, 8, 4, 32)          18464     \n_________________________________________________________________\nup_sampling2d_1 (UpSampling2 (None, 16, 8, 32)         0         \n_________________________________________________________________\nconv2d_8 (Conv2D)            (None, 16, 8, 1)          289       \n=================================================================\nTotal params: 74,497\nTrainable params: 74,497\nNon-trainable params: 0\n_________________________________________________________________\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(X_happy,X_happy,epochs=100)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:11:54.864103Z",
          "iopub.execute_input": "2024-04-30T00:11:54.864489Z",
          "iopub.status.idle": "2024-04-30T00:12:03.302530Z",
          "shell.execute_reply.started": "2024-04-30T00:11:54.864456Z",
          "shell.execute_reply": "2024-04-30T00:12:03.301547Z"
        },
        "trusted": true,
        "id": "yPx08S1Ns7fK",
        "outputId": "3c5db1df-ee6b-4e7b-b710-90e0d77c2494"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Epoch 1/100\n6/6 [==============================] - 1s 11ms/step - loss: 0.0392\nEpoch 2/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0375\nEpoch 3/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0365\nEpoch 4/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0356\nEpoch 5/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0339\nEpoch 6/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0319\nEpoch 7/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0290\nEpoch 8/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0277\nEpoch 9/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0274\nEpoch 10/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0262\nEpoch 11/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0255\nEpoch 12/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0250\nEpoch 13/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0244\nEpoch 14/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0240\nEpoch 15/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0236\nEpoch 16/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0232\nEpoch 17/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0232\nEpoch 18/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0228\nEpoch 19/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0224\nEpoch 20/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0221\nEpoch 21/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0218\nEpoch 22/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0217\nEpoch 23/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0216\nEpoch 24/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0212\nEpoch 25/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0210\nEpoch 26/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0208\nEpoch 27/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0214\nEpoch 28/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0213\nEpoch 29/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0206\nEpoch 30/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0204\nEpoch 31/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0201\nEpoch 32/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0200\nEpoch 33/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0200\nEpoch 34/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0201\nEpoch 35/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0198\nEpoch 36/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0198\nEpoch 37/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0198\nEpoch 38/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0193\nEpoch 39/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0191\nEpoch 40/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0190\nEpoch 41/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0189\nEpoch 42/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0188\nEpoch 43/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0187\nEpoch 44/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0186\nEpoch 45/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0187\nEpoch 46/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0184\nEpoch 47/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0183\nEpoch 48/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0183\nEpoch 49/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0181\nEpoch 50/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0180\nEpoch 51/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0181\nEpoch 52/100\n6/6 [==============================] - 0s 27ms/step - loss: 0.0179\nEpoch 53/100\n6/6 [==============================] - 0s 44ms/step - loss: 0.0178\nEpoch 54/100\n6/6 [==============================] - 0s 57ms/step - loss: 0.0177\nEpoch 55/100\n6/6 [==============================] - 0s 71ms/step - loss: 0.0178\nEpoch 56/100\n6/6 [==============================] - 0s 32ms/step - loss: 0.0177\nEpoch 57/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0175\nEpoch 58/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0175\nEpoch 59/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0175\nEpoch 60/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0173\nEpoch 61/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0172\nEpoch 62/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0173\nEpoch 63/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0173\nEpoch 64/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0170\nEpoch 65/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0170\nEpoch 66/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0169\nEpoch 67/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0168\nEpoch 68/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0167\nEpoch 69/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0169\nEpoch 70/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0168\nEpoch 71/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0165\nEpoch 72/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0165\nEpoch 73/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0165\nEpoch 74/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0164\nEpoch 75/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0164\nEpoch 76/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0165\nEpoch 77/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0168\nEpoch 78/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0166\nEpoch 79/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0164\nEpoch 80/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0162\nEpoch 81/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0160\nEpoch 82/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0161\nEpoch 83/100\n6/6 [==============================] - 0s 14ms/step - loss: 0.0159\nEpoch 84/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0158\nEpoch 85/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0157\nEpoch 86/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0157\nEpoch 87/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0156\nEpoch 88/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0158\nEpoch 89/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0160\nEpoch 90/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0161\nEpoch 91/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0157\nEpoch 92/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0156\nEpoch 93/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0153\nEpoch 94/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0152\nEpoch 95/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0152\nEpoch 96/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0152\nEpoch 97/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0151\nEpoch 98/100\n6/6 [==============================] - 0s 11ms/step - loss: 0.0150\nEpoch 99/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0149\nEpoch 100/100\n6/6 [==============================] - 0s 10ms/step - loss: 0.0149\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['loss'])\n",
        "plt.title('Model Loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:03.304042Z",
          "iopub.execute_input": "2024-04-30T00:12:03.304483Z",
          "iopub.status.idle": "2024-04-30T00:12:03.634325Z",
          "shell.execute_reply.started": "2024-04-30T00:12:03.304449Z",
          "shell.execute_reply": "2024-04-30T00:12:03.633154Z"
        },
        "trusted": true,
        "id": "RyjZ_JYjs7fL",
        "outputId": "07352f5e-8d28-41e8-a1fd-c3916978d08a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.evaluate(X_happy,X_happy)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:03.635861Z",
          "iopub.execute_input": "2024-04-30T00:12:03.636264Z",
          "iopub.status.idle": "2024-04-30T00:12:03.846420Z",
          "shell.execute_reply.started": "2024-04-30T00:12:03.636231Z",
          "shell.execute_reply": "2024-04-30T00:12:03.845223Z"
        },
        "trusted": true,
        "id": "i_itb8ljs7fL",
        "outputId": "8bd038c2-205e-4a2d-b7e5-37e6d7b4023f"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "6/6 [==============================] - 0s 4ms/step - loss: 0.0148\n",
          "output_type": "stream"
        },
        {
          "execution_count": 43,
          "output_type": "execute_result",
          "data": {
            "text/plain": "0.014842587523162365"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.evaluate(X_sad,X_sad)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:03.847821Z",
          "iopub.execute_input": "2024-04-30T00:12:03.848161Z",
          "iopub.status.idle": "2024-04-30T00:12:03.940060Z",
          "shell.execute_reply.started": "2024-04-30T00:12:03.848130Z",
          "shell.execute_reply": "2024-04-30T00:12:03.938872Z"
        },
        "trusted": true,
        "id": "Ls8vKKyxs7fM",
        "outputId": "92145b96-606b-4cb2-aaa6-a3848890d368"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "6/6 [==============================] - 0s 4ms/step - loss: 0.0193\n",
          "output_type": "stream"
        },
        {
          "execution_count": 44,
          "output_type": "execute_result",
          "data": {
            "text/plain": "0.019280999898910522"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "No significant difference between the loss for happy audios and sad audios"
      ],
      "metadata": {
        "id": "tG4Bcx_ts7fM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Variational Autoencoders"
      ],
      "metadata": {
        "id": "z3J3f0tjs7fM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class Sampling(Layer):\n",
        "    def call(self, inputs):\n",
        "        z_mean, z_log_var = inputs\n",
        "        batch = tf.shape(z_mean)[0]\n",
        "        dim = tf.shape(z_mean)[1]\n",
        "        epsilon = tf.keras.backend.random_normal(shape=(batch, dim))\n",
        "        return z_mean + tf.exp(0.5 * z_log_var) * epsilon"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:03.941583Z",
          "iopub.execute_input": "2024-04-30T00:12:03.941911Z",
          "iopub.status.idle": "2024-04-30T00:12:03.949592Z",
          "shell.execute_reply.started": "2024-04-30T00:12:03.941881Z",
          "shell.execute_reply": "2024-04-30T00:12:03.948241Z"
        },
        "trusted": true,
        "id": "-0-sZd9Ms7fN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "input_layer = Input(shape=(16,8,1))\n",
        "x = Conv2D(filters=32, kernel_size=(3,3), activation='relu', padding='same')(input_layer)\n",
        "x = MaxPooling2D(2,2)(x)\n",
        "x = Conv2D(filters=64, kernel_size=(3,3), activation='relu', padding='same')(x)\n",
        "x = MaxPooling2D(2,2)(x)\n",
        "x = Flatten()(x)\n",
        "z_mean = Dense(128, name=\"z_mean\")(x)\n",
        "z_log_var = Dense(128, name=\"z_log_var\")(x)\n",
        "z = Sampling()([z_mean, z_log_var])\n",
        "x = Dense(4*2*64, activation=\"relu\")(z)\n",
        "x = Reshape((4, 2, 64))(x)\n",
        "x = UpSampling2D()(x)\n",
        "x = Conv2D(filters=64, kernel_size=(3,3), activation='relu', padding='same')(x)\n",
        "x = UpSampling2D()(x)\n",
        "x = Conv2D(filters=32, kernel_size=(3,3), activation='relu', padding='same')(x)\n",
        "output = Conv2D(filters=1, kernel_size=(3,3), activation='sigmoid', padding='same')(x)\n",
        "\n",
        "model = Model(inputs=input_layer,outputs=output)\n",
        "model.compile(loss='mean_squared_error',optimizer='adam')\n",
        "model.summary()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:03.951190Z",
          "iopub.execute_input": "2024-04-30T00:12:03.951662Z",
          "iopub.status.idle": "2024-04-30T00:12:04.183791Z",
          "shell.execute_reply.started": "2024-04-30T00:12:03.951588Z",
          "shell.execute_reply": "2024-04-30T00:12:04.182455Z"
        },
        "trusted": true,
        "id": "Na6Phs-2s7fN",
        "outputId": "62d0f2b5-c3aa-4333-8215-dfeba43b361c"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Model: \"model\"\n__________________________________________________________________________________________________\nLayer (type)                    Output Shape         Param #     Connected to                     \n==================================================================================================\ninput_4 (InputLayer)            [(None, 16, 8, 1)]   0                                            \n__________________________________________________________________________________________________\nconv2d_9 (Conv2D)               (None, 16, 8, 32)    320         input_4[0][0]                    \n__________________________________________________________________________________________________\nmax_pooling2d_6 (MaxPooling2D)  (None, 8, 4, 32)     0           conv2d_9[0][0]                   \n__________________________________________________________________________________________________\nconv2d_10 (Conv2D)              (None, 8, 4, 64)     18496       max_pooling2d_6[0][0]            \n__________________________________________________________________________________________________\nmax_pooling2d_7 (MaxPooling2D)  (None, 4, 2, 64)     0           conv2d_10[0][0]                  \n__________________________________________________________________________________________________\nflatten_2 (Flatten)             (None, 512)          0           max_pooling2d_7[0][0]            \n__________________________________________________________________________________________________\nz_mean (Dense)                  (None, 128)          65664       flatten_2[0][0]                  \n__________________________________________________________________________________________________\nz_log_var (Dense)               (None, 128)          65664       flatten_2[0][0]                  \n__________________________________________________________________________________________________\nsampling (Sampling)             (None, 128)          0           z_mean[0][0]                     \n                                                                 z_log_var[0][0]                  \n__________________________________________________________________________________________________\ndense_4 (Dense)                 (None, 512)          66048       sampling[0][0]                   \n__________________________________________________________________________________________________\nreshape (Reshape)               (None, 4, 2, 64)     0           dense_4[0][0]                    \n__________________________________________________________________________________________________\nup_sampling2d_2 (UpSampling2D)  (None, 8, 4, 64)     0           reshape[0][0]                    \n__________________________________________________________________________________________________\nconv2d_11 (Conv2D)              (None, 8, 4, 64)     36928       up_sampling2d_2[0][0]            \n__________________________________________________________________________________________________\nup_sampling2d_3 (UpSampling2D)  (None, 16, 8, 64)    0           conv2d_11[0][0]                  \n__________________________________________________________________________________________________\nconv2d_12 (Conv2D)              (None, 16, 8, 32)    18464       up_sampling2d_3[0][0]            \n__________________________________________________________________________________________________\nconv2d_13 (Conv2D)              (None, 16, 8, 1)     289         conv2d_12[0][0]                  \n==================================================================================================\nTotal params: 271,873\nTrainable params: 271,873\nNon-trainable params: 0\n__________________________________________________________________________________________________\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(X_happy,X_happy,epochs=100)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:04.185140Z",
          "iopub.execute_input": "2024-04-30T00:12:04.185514Z",
          "iopub.status.idle": "2024-04-30T00:12:15.899015Z",
          "shell.execute_reply.started": "2024-04-30T00:12:04.185482Z",
          "shell.execute_reply": "2024-04-30T00:12:15.897735Z"
        },
        "trusted": true,
        "id": "M-QBg98zs7fO",
        "outputId": "26a549ab-437a-4d06-d145-1eccd24005bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Epoch 1/100\n6/6 [==============================] - 1s 18ms/step - loss: 0.0414\nEpoch 2/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0388\nEpoch 3/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0379\nEpoch 4/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0369\nEpoch 5/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0364\nEpoch 6/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0359\nEpoch 7/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0352\nEpoch 8/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0346\nEpoch 9/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0341\nEpoch 10/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0337\nEpoch 11/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0333\nEpoch 12/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0332\nEpoch 13/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0332\nEpoch 14/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0325\nEpoch 15/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0317\nEpoch 16/100\n6/6 [==============================] - 0s 19ms/step - loss: 0.0310\nEpoch 17/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0292\nEpoch 18/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0282\nEpoch 19/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0277\nEpoch 20/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0265\nEpoch 21/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0259\nEpoch 22/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0253\nEpoch 23/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0246\nEpoch 24/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0240\nEpoch 25/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0236\nEpoch 26/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0228\nEpoch 27/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0222\nEpoch 28/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0216\nEpoch 29/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0210\nEpoch 30/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0208\nEpoch 31/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0206\nEpoch 32/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0203\nEpoch 33/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0200\nEpoch 34/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0197\nEpoch 35/100\n6/6 [==============================] - 0s 19ms/step - loss: 0.0197\nEpoch 36/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0195\nEpoch 37/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0191\nEpoch 38/100\n6/6 [==============================] - 0s 19ms/step - loss: 0.0189\nEpoch 39/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0188\nEpoch 40/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0185\nEpoch 41/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0181\nEpoch 42/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0179\nEpoch 43/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0178\nEpoch 44/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0178\nEpoch 45/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0175\nEpoch 46/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0173\nEpoch 47/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0171\nEpoch 48/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0170\nEpoch 49/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0168\nEpoch 50/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0166\nEpoch 51/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0164\nEpoch 52/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0163\nEpoch 53/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0162\nEpoch 54/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0160\nEpoch 55/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0158\nEpoch 56/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0156\nEpoch 57/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0155\nEpoch 58/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0154\nEpoch 59/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0153\nEpoch 60/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0151\nEpoch 61/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0149\nEpoch 62/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0148\nEpoch 63/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0146\nEpoch 64/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0145\nEpoch 65/100\n6/6 [==============================] - 0s 20ms/step - loss: 0.0144\nEpoch 66/100\n6/6 [==============================] - 0s 23ms/step - loss: 0.0142\nEpoch 67/100\n6/6 [==============================] - 0s 19ms/step - loss: 0.0143\nEpoch 68/100\n6/6 [==============================] - 0s 19ms/step - loss: 0.0141\nEpoch 69/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0139\nEpoch 70/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0138\nEpoch 71/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0137\nEpoch 72/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0136\nEpoch 73/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0133\nEpoch 74/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0133\nEpoch 75/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0132\nEpoch 76/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0129\nEpoch 77/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0127\nEpoch 78/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0125\nEpoch 79/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0124\nEpoch 80/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0122\nEpoch 81/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0122\nEpoch 82/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0120\nEpoch 83/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0118\nEpoch 84/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0118\nEpoch 85/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0116\nEpoch 86/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0115\nEpoch 87/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0114\nEpoch 88/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0114\nEpoch 89/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0113\nEpoch 90/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0112\nEpoch 91/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0111\nEpoch 92/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0110\nEpoch 93/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0109\nEpoch 94/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0106\nEpoch 95/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0105\nEpoch 96/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0103\nEpoch 97/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0102\nEpoch 98/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0102\nEpoch 99/100\n6/6 [==============================] - 0s 18ms/step - loss: 0.0102\nEpoch 100/100\n6/6 [==============================] - 0s 17ms/step - loss: 0.0104\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history.history['loss'])\n",
        "plt.title('Model Loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:15.900831Z",
          "iopub.execute_input": "2024-04-30T00:12:15.901193Z",
          "iopub.status.idle": "2024-04-30T00:12:16.171120Z",
          "shell.execute_reply.started": "2024-04-30T00:12:15.901161Z",
          "shell.execute_reply": "2024-04-30T00:12:16.169902Z"
        },
        "trusted": true,
        "id": "uRHbbWaUs7fO",
        "outputId": "ca169028-691f-45cf-bc1c-ed6de7b9223e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.evaluate(X_happy,X_happy)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.172733Z",
          "iopub.execute_input": "2024-04-30T00:12:16.173052Z",
          "iopub.status.idle": "2024-04-30T00:12:16.456233Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.173022Z",
          "shell.execute_reply": "2024-04-30T00:12:16.455042Z"
        },
        "trusted": true,
        "id": "LYMnKDU0s7fP",
        "outputId": "7426a73d-d6a2-4658-ba28-678cd9c68d68"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "6/6 [==============================] - 0s 7ms/step - loss: 0.0098\n",
          "output_type": "stream"
        },
        {
          "execution_count": 49,
          "output_type": "execute_result",
          "data": {
            "text/plain": "0.009753730148077011"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.evaluate(X_sad,X_sad)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.457831Z",
          "iopub.execute_input": "2024-04-30T00:12:16.458199Z",
          "iopub.status.idle": "2024-04-30T00:12:16.561145Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.458166Z",
          "shell.execute_reply": "2024-04-30T00:12:16.559958Z"
        },
        "trusted": true,
        "id": "8OtMPBCzs7fP",
        "outputId": "c27c00af-6c6f-496b-d633-12f8268bd4cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "6/6 [==============================] - 0s 6ms/step - loss: 0.0235\n",
          "output_type": "stream"
        },
        {
          "execution_count": 50,
          "output_type": "execute_result",
          "data": {
            "text/plain": "0.023536866530776024"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " There is a significant difference between the loss of happy and sad audios"
      ],
      "metadata": {
        "id": "Sf-U_QwWs7fP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_sc = np.vstack([X_happy,X_sad])\n",
        "y = np.hstack([np.ones((192,)),np.zeros((192,))])"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.562615Z",
          "iopub.execute_input": "2024-04-30T00:12:16.562978Z",
          "iopub.status.idle": "2024-04-30T00:12:16.569854Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.562946Z",
          "shell.execute_reply": "2024-04-30T00:12:16.568177Z"
        },
        "trusted": true,
        "id": "ah7ThuS2s7fQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "var_encoder = Model(inputs=model.input,outputs=model.layers[6].output)\n",
        "var_encoder.summary()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.571391Z",
          "iopub.execute_input": "2024-04-30T00:12:16.571790Z",
          "iopub.status.idle": "2024-04-30T00:12:16.585630Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.571757Z",
          "shell.execute_reply": "2024-04-30T00:12:16.584311Z"
        },
        "trusted": true,
        "id": "_l4BMTJHs7fQ",
        "outputId": "b04dc135-6477-4dd8-b39e-876f7cb67f97"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "text": "Model: \"model_1\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_4 (InputLayer)         [(None, 16, 8, 1)]        0         \n_________________________________________________________________\nconv2d_9 (Conv2D)            (None, 16, 8, 32)         320       \n_________________________________________________________________\nmax_pooling2d_6 (MaxPooling2 (None, 8, 4, 32)          0         \n_________________________________________________________________\nconv2d_10 (Conv2D)           (None, 8, 4, 64)          18496     \n_________________________________________________________________\nmax_pooling2d_7 (MaxPooling2 (None, 4, 2, 64)          0         \n_________________________________________________________________\nflatten_2 (Flatten)          (None, 512)               0         \n_________________________________________________________________\nz_mean (Dense)               (None, 128)               65664     \n=================================================================\nTotal params: 84,480\nTrainable params: 84,480\nNon-trainable params: 0\n_________________________________________________________________\n",
          "output_type": "stream"
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "z_mean = var_encoder.predict(X_sc)"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.587614Z",
          "iopub.execute_input": "2024-04-30T00:12:16.588650Z",
          "iopub.status.idle": "2024-04-30T00:12:16.726342Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.588604Z",
          "shell.execute_reply": "2024-04-30T00:12:16.724942Z"
        },
        "trusted": true,
        "id": "Z5bpWZlAs7fR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(z_mean[:, 0], z_mean[:, 1], hue=y, s=80)\n",
        "plt.title(\"Variational Autoencoder Latent Space Representation in 2D\")\n",
        "plt.xlabel(\"z[0]\")\n",
        "plt.ylabel(\"z[1]\")\n",
        "plt.show()"
      ],
      "metadata": {
        "execution": {
          "iopub.status.busy": "2024-04-30T00:12:16.728029Z",
          "iopub.execute_input": "2024-04-30T00:12:16.728466Z",
          "iopub.status.idle": "2024-04-30T00:12:17.125146Z",
          "shell.execute_reply.started": "2024-04-30T00:12:16.728431Z",
          "shell.execute_reply": "2024-04-30T00:12:17.123880Z"
        },
        "trusted": true,
        "id": "WfoRWyuGs7fR",
        "outputId": "9f298e51-6381-4896-a97c-a38cc1409199"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1440x576 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Conclusion:\n",
        "The Logistic Regression Model showed promising results when utilizing MFCC Features, achieving respectable classification accuracy and F1-score. Similarly, CNNs demonstrated effectiveness in leveraging MFCC Features. Hence, for autoencoders, only MFCCs are utilized as features.\n",
        "\n",
        "When it comes to autoencoders, Variational Autoencoders excel in reconstructing audio samples with lower reconstruction loss compared to traditional autoencoders. This superiority stems from their ability to capture the distribution of happy audio samples within a 128-Dimensional latent space."
      ],
      "metadata": {
        "id": "bMOHYzyYs7fR"
      }
    }
  ]
}
